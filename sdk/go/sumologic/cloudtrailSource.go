// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// CloudTrail sources can be imported using the collector and source IDs (`collector/source`), e.g.hcl
//
// ```sh
//  $ pulumi import sumologic:index/cloudtrailSource:CloudtrailSource test 123/456
// ```
//
//  CloudTrail sources can be imported using the collector name and source name (`collectorName/sourceName`), e.g.hcl
//
// ```sh
//  $ pulumi import sumologic:index/cloudtrailSource:CloudtrailSource test my-test-collector/my-test-source
// ```
//
//  [1]https://help.sumologic.com/Send_Data/Sources/03Use_JSON_to_Configure_Sources/JSON_Parameters_for_Hosted_Sources [2]https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/AWS-CloudTrail-Source
type CloudtrailSource struct {
	pulumi.CustomResourceState

	Authentication             CloudtrailSourceAuthenticationOutput         `pulumi:"authentication"`
	AutomaticDateParsing       pulumi.BoolPtrOutput                         `pulumi:"automaticDateParsing"`
	Category                   pulumi.StringPtrOutput                       `pulumi:"category"`
	CollectorId                pulumi.IntOutput                             `pulumi:"collectorId"`
	ContentType                pulumi.StringOutput                          `pulumi:"contentType"`
	CutoffRelativeTime         pulumi.StringPtrOutput                       `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            pulumi.IntPtrOutput                          `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         CloudtrailSourceDefaultDateFormatArrayOutput `pulumi:"defaultDateFormats"`
	Description                pulumi.StringPtrOutput                       `pulumi:"description"`
	Fields                     pulumi.StringMapOutput                       `pulumi:"fields"`
	Filters                    CloudtrailSourceFilterArrayOutput            `pulumi:"filters"`
	ForceTimezone              pulumi.BoolPtrOutput                         `pulumi:"forceTimezone"`
	HostName                   pulumi.StringPtrOutput                       `pulumi:"hostName"`
	ManualPrefixRegexp         pulumi.StringPtrOutput                       `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled pulumi.BoolPtrOutput                         `pulumi:"multilineProcessingEnabled"`
	Name                       pulumi.StringOutput                          `pulumi:"name"`
	Path                       CloudtrailSourcePathOutput                   `pulumi:"path"`
	Paused                     pulumi.BoolOutput                            `pulumi:"paused"`
	ScanInterval               pulumi.IntOutput                             `pulumi:"scanInterval"`
	Timezone                   pulumi.StringPtrOutput                       `pulumi:"timezone"`
	// The HTTP endpoint to use with [SNS to notify Sumo Logic of new files](<https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/AWS-S3-Source#Set_up_SNS_in_AWS_(Optional)>).
	Url                 pulumi.StringOutput  `pulumi:"url"`
	UseAutolineMatching pulumi.BoolPtrOutput `pulumi:"useAutolineMatching"`
}

// NewCloudtrailSource registers a new resource with the given unique name, arguments, and options.
func NewCloudtrailSource(ctx *pulumi.Context,
	name string, args *CloudtrailSourceArgs, opts ...pulumi.ResourceOption) (*CloudtrailSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.CollectorId == nil {
		return nil, errors.New("invalid value for required argument 'CollectorId'")
	}
	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	if args.Paused == nil {
		return nil, errors.New("invalid value for required argument 'Paused'")
	}
	if args.ScanInterval == nil {
		return nil, errors.New("invalid value for required argument 'ScanInterval'")
	}
	var resource CloudtrailSource
	err := ctx.RegisterResource("sumologic:index/cloudtrailSource:CloudtrailSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudtrailSource gets an existing CloudtrailSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudtrailSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudtrailSourceState, opts ...pulumi.ResourceOption) (*CloudtrailSource, error) {
	var resource CloudtrailSource
	err := ctx.ReadResource("sumologic:index/cloudtrailSource:CloudtrailSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudtrailSource resources.
type cloudtrailSourceState struct {
	Authentication             *CloudtrailSourceAuthentication     `pulumi:"authentication"`
	AutomaticDateParsing       *bool                               `pulumi:"automaticDateParsing"`
	Category                   *string                             `pulumi:"category"`
	CollectorId                *int                                `pulumi:"collectorId"`
	ContentType                *string                             `pulumi:"contentType"`
	CutoffRelativeTime         *string                             `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            *int                                `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         []CloudtrailSourceDefaultDateFormat `pulumi:"defaultDateFormats"`
	Description                *string                             `pulumi:"description"`
	Fields                     map[string]string                   `pulumi:"fields"`
	Filters                    []CloudtrailSourceFilter            `pulumi:"filters"`
	ForceTimezone              *bool                               `pulumi:"forceTimezone"`
	HostName                   *string                             `pulumi:"hostName"`
	ManualPrefixRegexp         *string                             `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled *bool                               `pulumi:"multilineProcessingEnabled"`
	Name                       *string                             `pulumi:"name"`
	Path                       *CloudtrailSourcePath               `pulumi:"path"`
	Paused                     *bool                               `pulumi:"paused"`
	ScanInterval               *int                                `pulumi:"scanInterval"`
	Timezone                   *string                             `pulumi:"timezone"`
	// The HTTP endpoint to use with [SNS to notify Sumo Logic of new files](<https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/AWS-S3-Source#Set_up_SNS_in_AWS_(Optional)>).
	Url                 *string `pulumi:"url"`
	UseAutolineMatching *bool   `pulumi:"useAutolineMatching"`
}

type CloudtrailSourceState struct {
	Authentication             CloudtrailSourceAuthenticationPtrInput
	AutomaticDateParsing       pulumi.BoolPtrInput
	Category                   pulumi.StringPtrInput
	CollectorId                pulumi.IntPtrInput
	ContentType                pulumi.StringPtrInput
	CutoffRelativeTime         pulumi.StringPtrInput
	CutoffTimestamp            pulumi.IntPtrInput
	DefaultDateFormats         CloudtrailSourceDefaultDateFormatArrayInput
	Description                pulumi.StringPtrInput
	Fields                     pulumi.StringMapInput
	Filters                    CloudtrailSourceFilterArrayInput
	ForceTimezone              pulumi.BoolPtrInput
	HostName                   pulumi.StringPtrInput
	ManualPrefixRegexp         pulumi.StringPtrInput
	MultilineProcessingEnabled pulumi.BoolPtrInput
	Name                       pulumi.StringPtrInput
	Path                       CloudtrailSourcePathPtrInput
	Paused                     pulumi.BoolPtrInput
	ScanInterval               pulumi.IntPtrInput
	Timezone                   pulumi.StringPtrInput
	// The HTTP endpoint to use with [SNS to notify Sumo Logic of new files](<https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/AWS-S3-Source#Set_up_SNS_in_AWS_(Optional)>).
	Url                 pulumi.StringPtrInput
	UseAutolineMatching pulumi.BoolPtrInput
}

func (CloudtrailSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudtrailSourceState)(nil)).Elem()
}

type cloudtrailSourceArgs struct {
	Authentication             CloudtrailSourceAuthentication      `pulumi:"authentication"`
	AutomaticDateParsing       *bool                               `pulumi:"automaticDateParsing"`
	Category                   *string                             `pulumi:"category"`
	CollectorId                int                                 `pulumi:"collectorId"`
	ContentType                string                              `pulumi:"contentType"`
	CutoffRelativeTime         *string                             `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            *int                                `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         []CloudtrailSourceDefaultDateFormat `pulumi:"defaultDateFormats"`
	Description                *string                             `pulumi:"description"`
	Fields                     map[string]string                   `pulumi:"fields"`
	Filters                    []CloudtrailSourceFilter            `pulumi:"filters"`
	ForceTimezone              *bool                               `pulumi:"forceTimezone"`
	HostName                   *string                             `pulumi:"hostName"`
	ManualPrefixRegexp         *string                             `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled *bool                               `pulumi:"multilineProcessingEnabled"`
	Name                       *string                             `pulumi:"name"`
	Path                       CloudtrailSourcePath                `pulumi:"path"`
	Paused                     bool                                `pulumi:"paused"`
	ScanInterval               int                                 `pulumi:"scanInterval"`
	Timezone                   *string                             `pulumi:"timezone"`
	UseAutolineMatching        *bool                               `pulumi:"useAutolineMatching"`
}

// The set of arguments for constructing a CloudtrailSource resource.
type CloudtrailSourceArgs struct {
	Authentication             CloudtrailSourceAuthenticationInput
	AutomaticDateParsing       pulumi.BoolPtrInput
	Category                   pulumi.StringPtrInput
	CollectorId                pulumi.IntInput
	ContentType                pulumi.StringInput
	CutoffRelativeTime         pulumi.StringPtrInput
	CutoffTimestamp            pulumi.IntPtrInput
	DefaultDateFormats         CloudtrailSourceDefaultDateFormatArrayInput
	Description                pulumi.StringPtrInput
	Fields                     pulumi.StringMapInput
	Filters                    CloudtrailSourceFilterArrayInput
	ForceTimezone              pulumi.BoolPtrInput
	HostName                   pulumi.StringPtrInput
	ManualPrefixRegexp         pulumi.StringPtrInput
	MultilineProcessingEnabled pulumi.BoolPtrInput
	Name                       pulumi.StringPtrInput
	Path                       CloudtrailSourcePathInput
	Paused                     pulumi.BoolInput
	ScanInterval               pulumi.IntInput
	Timezone                   pulumi.StringPtrInput
	UseAutolineMatching        pulumi.BoolPtrInput
}

func (CloudtrailSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudtrailSourceArgs)(nil)).Elem()
}

type CloudtrailSourceInput interface {
	pulumi.Input

	ToCloudtrailSourceOutput() CloudtrailSourceOutput
	ToCloudtrailSourceOutputWithContext(ctx context.Context) CloudtrailSourceOutput
}

func (*CloudtrailSource) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSource)(nil))
}

func (i *CloudtrailSource) ToCloudtrailSourceOutput() CloudtrailSourceOutput {
	return i.ToCloudtrailSourceOutputWithContext(context.Background())
}

func (i *CloudtrailSource) ToCloudtrailSourceOutputWithContext(ctx context.Context) CloudtrailSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceOutput)
}

func (i *CloudtrailSource) ToCloudtrailSourcePtrOutput() CloudtrailSourcePtrOutput {
	return i.ToCloudtrailSourcePtrOutputWithContext(context.Background())
}

func (i *CloudtrailSource) ToCloudtrailSourcePtrOutputWithContext(ctx context.Context) CloudtrailSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePtrOutput)
}

type CloudtrailSourcePtrInput interface {
	pulumi.Input

	ToCloudtrailSourcePtrOutput() CloudtrailSourcePtrOutput
	ToCloudtrailSourcePtrOutputWithContext(ctx context.Context) CloudtrailSourcePtrOutput
}

type cloudtrailSourcePtrType CloudtrailSourceArgs

func (*cloudtrailSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSource)(nil))
}

func (i *cloudtrailSourcePtrType) ToCloudtrailSourcePtrOutput() CloudtrailSourcePtrOutput {
	return i.ToCloudtrailSourcePtrOutputWithContext(context.Background())
}

func (i *cloudtrailSourcePtrType) ToCloudtrailSourcePtrOutputWithContext(ctx context.Context) CloudtrailSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePtrOutput)
}

// CloudtrailSourceArrayInput is an input type that accepts CloudtrailSourceArray and CloudtrailSourceArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourceArrayInput` via:
//
//          CloudtrailSourceArray{ CloudtrailSourceArgs{...} }
type CloudtrailSourceArrayInput interface {
	pulumi.Input

	ToCloudtrailSourceArrayOutput() CloudtrailSourceArrayOutput
	ToCloudtrailSourceArrayOutputWithContext(context.Context) CloudtrailSourceArrayOutput
}

type CloudtrailSourceArray []CloudtrailSourceInput

func (CloudtrailSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*CloudtrailSource)(nil))
}

func (i CloudtrailSourceArray) ToCloudtrailSourceArrayOutput() CloudtrailSourceArrayOutput {
	return i.ToCloudtrailSourceArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourceArray) ToCloudtrailSourceArrayOutputWithContext(ctx context.Context) CloudtrailSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceArrayOutput)
}

// CloudtrailSourceMapInput is an input type that accepts CloudtrailSourceMap and CloudtrailSourceMapOutput values.
// You can construct a concrete instance of `CloudtrailSourceMapInput` via:
//
//          CloudtrailSourceMap{ "key": CloudtrailSourceArgs{...} }
type CloudtrailSourceMapInput interface {
	pulumi.Input

	ToCloudtrailSourceMapOutput() CloudtrailSourceMapOutput
	ToCloudtrailSourceMapOutputWithContext(context.Context) CloudtrailSourceMapOutput
}

type CloudtrailSourceMap map[string]CloudtrailSourceInput

func (CloudtrailSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*CloudtrailSource)(nil))
}

func (i CloudtrailSourceMap) ToCloudtrailSourceMapOutput() CloudtrailSourceMapOutput {
	return i.ToCloudtrailSourceMapOutputWithContext(context.Background())
}

func (i CloudtrailSourceMap) ToCloudtrailSourceMapOutputWithContext(ctx context.Context) CloudtrailSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceMapOutput)
}

type CloudtrailSourceOutput struct {
	*pulumi.OutputState
}

func (CloudtrailSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSource)(nil))
}

func (o CloudtrailSourceOutput) ToCloudtrailSourceOutput() CloudtrailSourceOutput {
	return o
}

func (o CloudtrailSourceOutput) ToCloudtrailSourceOutputWithContext(ctx context.Context) CloudtrailSourceOutput {
	return o
}

func (o CloudtrailSourceOutput) ToCloudtrailSourcePtrOutput() CloudtrailSourcePtrOutput {
	return o.ToCloudtrailSourcePtrOutputWithContext(context.Background())
}

func (o CloudtrailSourceOutput) ToCloudtrailSourcePtrOutputWithContext(ctx context.Context) CloudtrailSourcePtrOutput {
	return o.ApplyT(func(v CloudtrailSource) *CloudtrailSource {
		return &v
	}).(CloudtrailSourcePtrOutput)
}

type CloudtrailSourcePtrOutput struct {
	*pulumi.OutputState
}

func (CloudtrailSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSource)(nil))
}

func (o CloudtrailSourcePtrOutput) ToCloudtrailSourcePtrOutput() CloudtrailSourcePtrOutput {
	return o
}

func (o CloudtrailSourcePtrOutput) ToCloudtrailSourcePtrOutputWithContext(ctx context.Context) CloudtrailSourcePtrOutput {
	return o
}

type CloudtrailSourceArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSource)(nil))
}

func (o CloudtrailSourceArrayOutput) ToCloudtrailSourceArrayOutput() CloudtrailSourceArrayOutput {
	return o
}

func (o CloudtrailSourceArrayOutput) ToCloudtrailSourceArrayOutputWithContext(ctx context.Context) CloudtrailSourceArrayOutput {
	return o
}

func (o CloudtrailSourceArrayOutput) Index(i pulumi.IntInput) CloudtrailSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSource {
		return vs[0].([]CloudtrailSource)[vs[1].(int)]
	}).(CloudtrailSourceOutput)
}

type CloudtrailSourceMapOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CloudtrailSource)(nil))
}

func (o CloudtrailSourceMapOutput) ToCloudtrailSourceMapOutput() CloudtrailSourceMapOutput {
	return o
}

func (o CloudtrailSourceMapOutput) ToCloudtrailSourceMapOutputWithContext(ctx context.Context) CloudtrailSourceMapOutput {
	return o
}

func (o CloudtrailSourceMapOutput) MapIndex(k pulumi.StringInput) CloudtrailSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CloudtrailSource {
		return vs[0].(map[string]CloudtrailSource)[vs[1].(string)]
	}).(CloudtrailSourceOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudtrailSourceOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePtrOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceMapOutput{})
}
