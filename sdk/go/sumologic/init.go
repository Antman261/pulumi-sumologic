// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "sumologic:index/awsInventorySource:AwsInventorySource":
		r = &AwsInventorySource{}
	case "sumologic:index/awsXraySource:AwsXraySource":
		r = &AwsXraySource{}
	case "sumologic:index/cloudSyslogSource:CloudSyslogSource":
		r = &CloudSyslogSource{}
	case "sumologic:index/cloudToCloudSource:CloudToCloudSource":
		r = &CloudToCloudSource{}
	case "sumologic:index/cloudfrontSource:CloudfrontSource":
		r = &CloudfrontSource{}
	case "sumologic:index/cloudtrailSource:CloudtrailSource":
		r = &CloudtrailSource{}
	case "sumologic:index/cloudwatchSource:CloudwatchSource":
		r = &CloudwatchSource{}
	case "sumologic:index/collector:Collector":
		r = &Collector{}
	case "sumologic:index/collectorIngestBudgetAssignment:CollectorIngestBudgetAssignment":
		r = &CollectorIngestBudgetAssignment{}
	case "sumologic:index/connection:Connection":
		r = &Connection{}
	case "sumologic:index/content:Content":
		r = &Content{}
	case "sumologic:index/dashboard:Dashboard":
		r = &Dashboard{}
	case "sumologic:index/elbSource:ElbSource":
		r = &ElbSource{}
	case "sumologic:index/field:Field":
		r = &Field{}
	case "sumologic:index/fieldExtractionRule:FieldExtractionRule":
		r = &FieldExtractionRule{}
	case "sumologic:index/folder:Folder":
		r = &Folder{}
	case "sumologic:index/gcpSource:GcpSource":
		r = &GcpSource{}
	case "sumologic:index/httpSource:HttpSource":
		r = &HttpSource{}
	case "sumologic:index/ingestBudget:IngestBudget":
		r = &IngestBudget{}
	case "sumologic:index/ingestBudgetV2:IngestBudgetV2":
		r = &IngestBudgetV2{}
	case "sumologic:index/kinesisMetricsSource:KinesisMetricsSource":
		r = &KinesisMetricsSource{}
	case "sumologic:index/lookupTable:LookupTable":
		r = &LookupTable{}
	case "sumologic:index/metadataSource:MetadataSource":
		r = &MetadataSource{}
	case "sumologic:index/monitor:Monitor":
		r = &Monitor{}
	case "sumologic:index/monitorFolder:MonitorFolder":
		r = &MonitorFolder{}
	case "sumologic:index/partition:Partition":
		r = &Partition{}
	case "sumologic:index/passwordPolicy:PasswordPolicy":
		r = &PasswordPolicy{}
	case "sumologic:index/pollingSource:PollingSource":
		r = &PollingSource{}
	case "sumologic:index/role:Role":
		r = &Role{}
	case "sumologic:index/s3AuditSource:S3AuditSource":
		r = &S3AuditSource{}
	case "sumologic:index/s3Source:S3Source":
		r = &S3Source{}
	case "sumologic:index/samlConfiguration:SamlConfiguration":
		r = &SamlConfiguration{}
	case "sumologic:index/scheduledView:ScheduledView":
		r = &ScheduledView{}
	case "sumologic:index/subdomain:Subdomain":
		r = &Subdomain{}
	case "sumologic:index/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:sumologic" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/awsInventorySource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/awsXraySource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/cloudSyslogSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/cloudToCloudSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/cloudfrontSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/cloudtrailSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/cloudwatchSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/collector",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/collectorIngestBudgetAssignment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/connection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/content",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/dashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/elbSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/field",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/fieldExtractionRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/folder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/gcpSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/httpSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/ingestBudget",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/ingestBudgetV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/kinesisMetricsSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/lookupTable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/metadataSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/monitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/monitorFolder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/partition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/passwordPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/pollingSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/s3AuditSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/s3Source",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/samlConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/scheduledView",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/subdomain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sumologic",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"sumologic",
		&pkg{version},
	)
}
