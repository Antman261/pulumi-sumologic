// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AwsInventorySourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// AwsInventorySourceAuthenticationInput is an input type that accepts AwsInventorySourceAuthenticationArgs and AwsInventorySourceAuthenticationOutput values.
// You can construct a concrete instance of `AwsInventorySourceAuthenticationInput` via:
//
//          AwsInventorySourceAuthenticationArgs{...}
type AwsInventorySourceAuthenticationInput interface {
	pulumi.Input

	ToAwsInventorySourceAuthenticationOutput() AwsInventorySourceAuthenticationOutput
	ToAwsInventorySourceAuthenticationOutputWithContext(context.Context) AwsInventorySourceAuthenticationOutput
}

type AwsInventorySourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (AwsInventorySourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceAuthentication)(nil)).Elem()
}

func (i AwsInventorySourceAuthenticationArgs) ToAwsInventorySourceAuthenticationOutput() AwsInventorySourceAuthenticationOutput {
	return i.ToAwsInventorySourceAuthenticationOutputWithContext(context.Background())
}

func (i AwsInventorySourceAuthenticationArgs) ToAwsInventorySourceAuthenticationOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceAuthenticationOutput)
}

func (i AwsInventorySourceAuthenticationArgs) ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput {
	return i.ToAwsInventorySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i AwsInventorySourceAuthenticationArgs) ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceAuthenticationOutput).ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx)
}

// AwsInventorySourceAuthenticationPtrInput is an input type that accepts AwsInventorySourceAuthenticationArgs, AwsInventorySourceAuthenticationPtr and AwsInventorySourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `AwsInventorySourceAuthenticationPtrInput` via:
//
//          AwsInventorySourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type AwsInventorySourceAuthenticationPtrInput interface {
	pulumi.Input

	ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput
	ToAwsInventorySourceAuthenticationPtrOutputWithContext(context.Context) AwsInventorySourceAuthenticationPtrOutput
}

type awsInventorySourceAuthenticationPtrType AwsInventorySourceAuthenticationArgs

func AwsInventorySourceAuthenticationPtr(v *AwsInventorySourceAuthenticationArgs) AwsInventorySourceAuthenticationPtrInput {
	return (*awsInventorySourceAuthenticationPtrType)(v)
}

func (*awsInventorySourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySourceAuthentication)(nil)).Elem()
}

func (i *awsInventorySourceAuthenticationPtrType) ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput {
	return i.ToAwsInventorySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *awsInventorySourceAuthenticationPtrType) ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceAuthenticationPtrOutput)
}

type AwsInventorySourceAuthenticationOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceAuthentication)(nil)).Elem()
}

func (o AwsInventorySourceAuthenticationOutput) ToAwsInventorySourceAuthenticationOutput() AwsInventorySourceAuthenticationOutput {
	return o
}

func (o AwsInventorySourceAuthenticationOutput) ToAwsInventorySourceAuthenticationOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationOutput {
	return o
}

func (o AwsInventorySourceAuthenticationOutput) ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput {
	return o.ToAwsInventorySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o AwsInventorySourceAuthenticationOutput) ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *AwsInventorySourceAuthentication {
		return &v
	}).(AwsInventorySourceAuthenticationPtrOutput)
}
func (o AwsInventorySourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type AwsInventorySourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySourceAuthentication)(nil)).Elem()
}

func (o AwsInventorySourceAuthenticationPtrOutput) ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput {
	return o
}

func (o AwsInventorySourceAuthenticationPtrOutput) ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationPtrOutput {
	return o
}

func (o AwsInventorySourceAuthenticationPtrOutput) Elem() AwsInventorySourceAuthenticationOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) AwsInventorySourceAuthentication { return *v }).(AwsInventorySourceAuthenticationOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AwsInventorySourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// AwsInventorySourceDefaultDateFormatInput is an input type that accepts AwsInventorySourceDefaultDateFormatArgs and AwsInventorySourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `AwsInventorySourceDefaultDateFormatInput` via:
//
//          AwsInventorySourceDefaultDateFormatArgs{...}
type AwsInventorySourceDefaultDateFormatInput interface {
	pulumi.Input

	ToAwsInventorySourceDefaultDateFormatOutput() AwsInventorySourceDefaultDateFormatOutput
	ToAwsInventorySourceDefaultDateFormatOutputWithContext(context.Context) AwsInventorySourceDefaultDateFormatOutput
}

type AwsInventorySourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (AwsInventorySourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceDefaultDateFormat)(nil)).Elem()
}

func (i AwsInventorySourceDefaultDateFormatArgs) ToAwsInventorySourceDefaultDateFormatOutput() AwsInventorySourceDefaultDateFormatOutput {
	return i.ToAwsInventorySourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i AwsInventorySourceDefaultDateFormatArgs) ToAwsInventorySourceDefaultDateFormatOutputWithContext(ctx context.Context) AwsInventorySourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceDefaultDateFormatOutput)
}

// AwsInventorySourceDefaultDateFormatArrayInput is an input type that accepts AwsInventorySourceDefaultDateFormatArray and AwsInventorySourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourceDefaultDateFormatArrayInput` via:
//
//          AwsInventorySourceDefaultDateFormatArray{ AwsInventorySourceDefaultDateFormatArgs{...} }
type AwsInventorySourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToAwsInventorySourceDefaultDateFormatArrayOutput() AwsInventorySourceDefaultDateFormatArrayOutput
	ToAwsInventorySourceDefaultDateFormatArrayOutputWithContext(context.Context) AwsInventorySourceDefaultDateFormatArrayOutput
}

type AwsInventorySourceDefaultDateFormatArray []AwsInventorySourceDefaultDateFormatInput

func (AwsInventorySourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourceDefaultDateFormat)(nil)).Elem()
}

func (i AwsInventorySourceDefaultDateFormatArray) ToAwsInventorySourceDefaultDateFormatArrayOutput() AwsInventorySourceDefaultDateFormatArrayOutput {
	return i.ToAwsInventorySourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourceDefaultDateFormatArray) ToAwsInventorySourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) AwsInventorySourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceDefaultDateFormatArrayOutput)
}

type AwsInventorySourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceDefaultDateFormat)(nil)).Elem()
}

func (o AwsInventorySourceDefaultDateFormatOutput) ToAwsInventorySourceDefaultDateFormatOutput() AwsInventorySourceDefaultDateFormatOutput {
	return o
}

func (o AwsInventorySourceDefaultDateFormatOutput) ToAwsInventorySourceDefaultDateFormatOutputWithContext(ctx context.Context) AwsInventorySourceDefaultDateFormatOutput {
	return o
}

func (o AwsInventorySourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o AwsInventorySourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type AwsInventorySourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourceDefaultDateFormat)(nil)).Elem()
}

func (o AwsInventorySourceDefaultDateFormatArrayOutput) ToAwsInventorySourceDefaultDateFormatArrayOutput() AwsInventorySourceDefaultDateFormatArrayOutput {
	return o
}

func (o AwsInventorySourceDefaultDateFormatArrayOutput) ToAwsInventorySourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) AwsInventorySourceDefaultDateFormatArrayOutput {
	return o
}

func (o AwsInventorySourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) AwsInventorySourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsInventorySourceDefaultDateFormat {
		return vs[0].([]AwsInventorySourceDefaultDateFormat)[vs[1].(int)]
	}).(AwsInventorySourceDefaultDateFormatOutput)
}

type AwsInventorySourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// AwsInventorySourceFilterInput is an input type that accepts AwsInventorySourceFilterArgs and AwsInventorySourceFilterOutput values.
// You can construct a concrete instance of `AwsInventorySourceFilterInput` via:
//
//          AwsInventorySourceFilterArgs{...}
type AwsInventorySourceFilterInput interface {
	pulumi.Input

	ToAwsInventorySourceFilterOutput() AwsInventorySourceFilterOutput
	ToAwsInventorySourceFilterOutputWithContext(context.Context) AwsInventorySourceFilterOutput
}

type AwsInventorySourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (AwsInventorySourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceFilter)(nil)).Elem()
}

func (i AwsInventorySourceFilterArgs) ToAwsInventorySourceFilterOutput() AwsInventorySourceFilterOutput {
	return i.ToAwsInventorySourceFilterOutputWithContext(context.Background())
}

func (i AwsInventorySourceFilterArgs) ToAwsInventorySourceFilterOutputWithContext(ctx context.Context) AwsInventorySourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceFilterOutput)
}

// AwsInventorySourceFilterArrayInput is an input type that accepts AwsInventorySourceFilterArray and AwsInventorySourceFilterArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourceFilterArrayInput` via:
//
//          AwsInventorySourceFilterArray{ AwsInventorySourceFilterArgs{...} }
type AwsInventorySourceFilterArrayInput interface {
	pulumi.Input

	ToAwsInventorySourceFilterArrayOutput() AwsInventorySourceFilterArrayOutput
	ToAwsInventorySourceFilterArrayOutputWithContext(context.Context) AwsInventorySourceFilterArrayOutput
}

type AwsInventorySourceFilterArray []AwsInventorySourceFilterInput

func (AwsInventorySourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourceFilter)(nil)).Elem()
}

func (i AwsInventorySourceFilterArray) ToAwsInventorySourceFilterArrayOutput() AwsInventorySourceFilterArrayOutput {
	return i.ToAwsInventorySourceFilterArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourceFilterArray) ToAwsInventorySourceFilterArrayOutputWithContext(ctx context.Context) AwsInventorySourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceFilterArrayOutput)
}

type AwsInventorySourceFilterOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceFilter)(nil)).Elem()
}

func (o AwsInventorySourceFilterOutput) ToAwsInventorySourceFilterOutput() AwsInventorySourceFilterOutput {
	return o
}

func (o AwsInventorySourceFilterOutput) ToAwsInventorySourceFilterOutputWithContext(ctx context.Context) AwsInventorySourceFilterOutput {
	return o
}

func (o AwsInventorySourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o AwsInventorySourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o AwsInventorySourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type AwsInventorySourceFilterArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourceFilter)(nil)).Elem()
}

func (o AwsInventorySourceFilterArrayOutput) ToAwsInventorySourceFilterArrayOutput() AwsInventorySourceFilterArrayOutput {
	return o
}

func (o AwsInventorySourceFilterArrayOutput) ToAwsInventorySourceFilterArrayOutputWithContext(ctx context.Context) AwsInventorySourceFilterArrayOutput {
	return o
}

func (o AwsInventorySourceFilterArrayOutput) Index(i pulumi.IntInput) AwsInventorySourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsInventorySourceFilter {
		return vs[0].([]AwsInventorySourceFilter)[vs[1].(int)]
	}).(AwsInventorySourceFilterOutput)
}

type AwsInventorySourcePath struct {
	BucketName        *string                           `pulumi:"bucketName"`
	LimitToNamespaces []string                          `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                          `pulumi:"limitToRegions"`
	PathExpression    *string                           `pulumi:"pathExpression"`
	TagFilters        []AwsInventorySourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                            `pulumi:"type"`
}

// AwsInventorySourcePathInput is an input type that accepts AwsInventorySourcePathArgs and AwsInventorySourcePathOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathInput` via:
//
//          AwsInventorySourcePathArgs{...}
type AwsInventorySourcePathInput interface {
	pulumi.Input

	ToAwsInventorySourcePathOutput() AwsInventorySourcePathOutput
	ToAwsInventorySourcePathOutputWithContext(context.Context) AwsInventorySourcePathOutput
}

type AwsInventorySourcePathArgs struct {
	BucketName        pulumi.StringPtrInput                     `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput                   `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                   `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput                     `pulumi:"pathExpression"`
	TagFilters        AwsInventorySourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput                        `pulumi:"type"`
}

func (AwsInventorySourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePath)(nil)).Elem()
}

func (i AwsInventorySourcePathArgs) ToAwsInventorySourcePathOutput() AwsInventorySourcePathOutput {
	return i.ToAwsInventorySourcePathOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathArgs) ToAwsInventorySourcePathOutputWithContext(ctx context.Context) AwsInventorySourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathOutput)
}

func (i AwsInventorySourcePathArgs) ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput {
	return i.ToAwsInventorySourcePathPtrOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathArgs) ToAwsInventorySourcePathPtrOutputWithContext(ctx context.Context) AwsInventorySourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathOutput).ToAwsInventorySourcePathPtrOutputWithContext(ctx)
}

// AwsInventorySourcePathPtrInput is an input type that accepts AwsInventorySourcePathArgs, AwsInventorySourcePathPtr and AwsInventorySourcePathPtrOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathPtrInput` via:
//
//          AwsInventorySourcePathArgs{...}
//
//  or:
//
//          nil
type AwsInventorySourcePathPtrInput interface {
	pulumi.Input

	ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput
	ToAwsInventorySourcePathPtrOutputWithContext(context.Context) AwsInventorySourcePathPtrOutput
}

type awsInventorySourcePathPtrType AwsInventorySourcePathArgs

func AwsInventorySourcePathPtr(v *AwsInventorySourcePathArgs) AwsInventorySourcePathPtrInput {
	return (*awsInventorySourcePathPtrType)(v)
}

func (*awsInventorySourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySourcePath)(nil)).Elem()
}

func (i *awsInventorySourcePathPtrType) ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput {
	return i.ToAwsInventorySourcePathPtrOutputWithContext(context.Background())
}

func (i *awsInventorySourcePathPtrType) ToAwsInventorySourcePathPtrOutputWithContext(ctx context.Context) AwsInventorySourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathPtrOutput)
}

type AwsInventorySourcePathOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePath)(nil)).Elem()
}

func (o AwsInventorySourcePathOutput) ToAwsInventorySourcePathOutput() AwsInventorySourcePathOutput {
	return o
}

func (o AwsInventorySourcePathOutput) ToAwsInventorySourcePathOutputWithContext(ctx context.Context) AwsInventorySourcePathOutput {
	return o
}

func (o AwsInventorySourcePathOutput) ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput {
	return o.ToAwsInventorySourcePathPtrOutputWithContext(context.Background())
}

func (o AwsInventorySourcePathOutput) ToAwsInventorySourcePathPtrOutputWithContext(ctx context.Context) AwsInventorySourcePathPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) *AwsInventorySourcePath {
		return &v
	}).(AwsInventorySourcePathPtrOutput)
}
func (o AwsInventorySourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathOutput) TagFilters() AwsInventorySourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []AwsInventorySourcePathTagFilter { return v.TagFilters }).(AwsInventorySourcePathTagFilterArrayOutput)
}

func (o AwsInventorySourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type AwsInventorySourcePathPtrOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySourcePath)(nil)).Elem()
}

func (o AwsInventorySourcePathPtrOutput) ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput {
	return o
}

func (o AwsInventorySourcePathPtrOutput) ToAwsInventorySourcePathPtrOutputWithContext(ctx context.Context) AwsInventorySourcePathPtrOutput {
	return o
}

func (o AwsInventorySourcePathPtrOutput) Elem() AwsInventorySourcePathOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) AwsInventorySourcePath { return *v }).(AwsInventorySourcePathOutput)
}

func (o AwsInventorySourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathPtrOutput) TagFilters() AwsInventorySourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []AwsInventorySourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(AwsInventorySourcePathTagFilterArrayOutput)
}

func (o AwsInventorySourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AwsInventorySourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// AwsInventorySourcePathTagFilterInput is an input type that accepts AwsInventorySourcePathTagFilterArgs and AwsInventorySourcePathTagFilterOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathTagFilterInput` via:
//
//          AwsInventorySourcePathTagFilterArgs{...}
type AwsInventorySourcePathTagFilterInput interface {
	pulumi.Input

	ToAwsInventorySourcePathTagFilterOutput() AwsInventorySourcePathTagFilterOutput
	ToAwsInventorySourcePathTagFilterOutputWithContext(context.Context) AwsInventorySourcePathTagFilterOutput
}

type AwsInventorySourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (AwsInventorySourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePathTagFilter)(nil)).Elem()
}

func (i AwsInventorySourcePathTagFilterArgs) ToAwsInventorySourcePathTagFilterOutput() AwsInventorySourcePathTagFilterOutput {
	return i.ToAwsInventorySourcePathTagFilterOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathTagFilterArgs) ToAwsInventorySourcePathTagFilterOutputWithContext(ctx context.Context) AwsInventorySourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathTagFilterOutput)
}

// AwsInventorySourcePathTagFilterArrayInput is an input type that accepts AwsInventorySourcePathTagFilterArray and AwsInventorySourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathTagFilterArrayInput` via:
//
//          AwsInventorySourcePathTagFilterArray{ AwsInventorySourcePathTagFilterArgs{...} }
type AwsInventorySourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToAwsInventorySourcePathTagFilterArrayOutput() AwsInventorySourcePathTagFilterArrayOutput
	ToAwsInventorySourcePathTagFilterArrayOutputWithContext(context.Context) AwsInventorySourcePathTagFilterArrayOutput
}

type AwsInventorySourcePathTagFilterArray []AwsInventorySourcePathTagFilterInput

func (AwsInventorySourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourcePathTagFilter)(nil)).Elem()
}

func (i AwsInventorySourcePathTagFilterArray) ToAwsInventorySourcePathTagFilterArrayOutput() AwsInventorySourcePathTagFilterArrayOutput {
	return i.ToAwsInventorySourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathTagFilterArray) ToAwsInventorySourcePathTagFilterArrayOutputWithContext(ctx context.Context) AwsInventorySourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathTagFilterArrayOutput)
}

type AwsInventorySourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePathTagFilter)(nil)).Elem()
}

func (o AwsInventorySourcePathTagFilterOutput) ToAwsInventorySourcePathTagFilterOutput() AwsInventorySourcePathTagFilterOutput {
	return o
}

func (o AwsInventorySourcePathTagFilterOutput) ToAwsInventorySourcePathTagFilterOutputWithContext(ctx context.Context) AwsInventorySourcePathTagFilterOutput {
	return o
}

func (o AwsInventorySourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AwsInventorySourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourcePathTagFilter)(nil)).Elem()
}

func (o AwsInventorySourcePathTagFilterArrayOutput) ToAwsInventorySourcePathTagFilterArrayOutput() AwsInventorySourcePathTagFilterArrayOutput {
	return o
}

func (o AwsInventorySourcePathTagFilterArrayOutput) ToAwsInventorySourcePathTagFilterArrayOutputWithContext(ctx context.Context) AwsInventorySourcePathTagFilterArrayOutput {
	return o
}

func (o AwsInventorySourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) AwsInventorySourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsInventorySourcePathTagFilter {
		return vs[0].([]AwsInventorySourcePathTagFilter)[vs[1].(int)]
	}).(AwsInventorySourcePathTagFilterOutput)
}

type AwsXraySourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// AwsXraySourceAuthenticationInput is an input type that accepts AwsXraySourceAuthenticationArgs and AwsXraySourceAuthenticationOutput values.
// You can construct a concrete instance of `AwsXraySourceAuthenticationInput` via:
//
//          AwsXraySourceAuthenticationArgs{...}
type AwsXraySourceAuthenticationInput interface {
	pulumi.Input

	ToAwsXraySourceAuthenticationOutput() AwsXraySourceAuthenticationOutput
	ToAwsXraySourceAuthenticationOutputWithContext(context.Context) AwsXraySourceAuthenticationOutput
}

type AwsXraySourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (AwsXraySourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceAuthentication)(nil)).Elem()
}

func (i AwsXraySourceAuthenticationArgs) ToAwsXraySourceAuthenticationOutput() AwsXraySourceAuthenticationOutput {
	return i.ToAwsXraySourceAuthenticationOutputWithContext(context.Background())
}

func (i AwsXraySourceAuthenticationArgs) ToAwsXraySourceAuthenticationOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceAuthenticationOutput)
}

func (i AwsXraySourceAuthenticationArgs) ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput {
	return i.ToAwsXraySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i AwsXraySourceAuthenticationArgs) ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceAuthenticationOutput).ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx)
}

// AwsXraySourceAuthenticationPtrInput is an input type that accepts AwsXraySourceAuthenticationArgs, AwsXraySourceAuthenticationPtr and AwsXraySourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `AwsXraySourceAuthenticationPtrInput` via:
//
//          AwsXraySourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type AwsXraySourceAuthenticationPtrInput interface {
	pulumi.Input

	ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput
	ToAwsXraySourceAuthenticationPtrOutputWithContext(context.Context) AwsXraySourceAuthenticationPtrOutput
}

type awsXraySourceAuthenticationPtrType AwsXraySourceAuthenticationArgs

func AwsXraySourceAuthenticationPtr(v *AwsXraySourceAuthenticationArgs) AwsXraySourceAuthenticationPtrInput {
	return (*awsXraySourceAuthenticationPtrType)(v)
}

func (*awsXraySourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsXraySourceAuthentication)(nil)).Elem()
}

func (i *awsXraySourceAuthenticationPtrType) ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput {
	return i.ToAwsXraySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *awsXraySourceAuthenticationPtrType) ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceAuthenticationPtrOutput)
}

type AwsXraySourceAuthenticationOutput struct{ *pulumi.OutputState }

func (AwsXraySourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceAuthentication)(nil)).Elem()
}

func (o AwsXraySourceAuthenticationOutput) ToAwsXraySourceAuthenticationOutput() AwsXraySourceAuthenticationOutput {
	return o
}

func (o AwsXraySourceAuthenticationOutput) ToAwsXraySourceAuthenticationOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationOutput {
	return o
}

func (o AwsXraySourceAuthenticationOutput) ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput {
	return o.ToAwsXraySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o AwsXraySourceAuthenticationOutput) ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *AwsXraySourceAuthentication {
		return &v
	}).(AwsXraySourceAuthenticationPtrOutput)
}
func (o AwsXraySourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type AwsXraySourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AwsXraySourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsXraySourceAuthentication)(nil)).Elem()
}

func (o AwsXraySourceAuthenticationPtrOutput) ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput {
	return o
}

func (o AwsXraySourceAuthenticationPtrOutput) ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationPtrOutput {
	return o
}

func (o AwsXraySourceAuthenticationPtrOutput) Elem() AwsXraySourceAuthenticationOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) AwsXraySourceAuthentication { return *v }).(AwsXraySourceAuthenticationOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AwsXraySourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// AwsXraySourceDefaultDateFormatInput is an input type that accepts AwsXraySourceDefaultDateFormatArgs and AwsXraySourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `AwsXraySourceDefaultDateFormatInput` via:
//
//          AwsXraySourceDefaultDateFormatArgs{...}
type AwsXraySourceDefaultDateFormatInput interface {
	pulumi.Input

	ToAwsXraySourceDefaultDateFormatOutput() AwsXraySourceDefaultDateFormatOutput
	ToAwsXraySourceDefaultDateFormatOutputWithContext(context.Context) AwsXraySourceDefaultDateFormatOutput
}

type AwsXraySourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (AwsXraySourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceDefaultDateFormat)(nil)).Elem()
}

func (i AwsXraySourceDefaultDateFormatArgs) ToAwsXraySourceDefaultDateFormatOutput() AwsXraySourceDefaultDateFormatOutput {
	return i.ToAwsXraySourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i AwsXraySourceDefaultDateFormatArgs) ToAwsXraySourceDefaultDateFormatOutputWithContext(ctx context.Context) AwsXraySourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceDefaultDateFormatOutput)
}

// AwsXraySourceDefaultDateFormatArrayInput is an input type that accepts AwsXraySourceDefaultDateFormatArray and AwsXraySourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `AwsXraySourceDefaultDateFormatArrayInput` via:
//
//          AwsXraySourceDefaultDateFormatArray{ AwsXraySourceDefaultDateFormatArgs{...} }
type AwsXraySourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToAwsXraySourceDefaultDateFormatArrayOutput() AwsXraySourceDefaultDateFormatArrayOutput
	ToAwsXraySourceDefaultDateFormatArrayOutputWithContext(context.Context) AwsXraySourceDefaultDateFormatArrayOutput
}

type AwsXraySourceDefaultDateFormatArray []AwsXraySourceDefaultDateFormatInput

func (AwsXraySourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourceDefaultDateFormat)(nil)).Elem()
}

func (i AwsXraySourceDefaultDateFormatArray) ToAwsXraySourceDefaultDateFormatArrayOutput() AwsXraySourceDefaultDateFormatArrayOutput {
	return i.ToAwsXraySourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i AwsXraySourceDefaultDateFormatArray) ToAwsXraySourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) AwsXraySourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceDefaultDateFormatArrayOutput)
}

type AwsXraySourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (AwsXraySourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceDefaultDateFormat)(nil)).Elem()
}

func (o AwsXraySourceDefaultDateFormatOutput) ToAwsXraySourceDefaultDateFormatOutput() AwsXraySourceDefaultDateFormatOutput {
	return o
}

func (o AwsXraySourceDefaultDateFormatOutput) ToAwsXraySourceDefaultDateFormatOutputWithContext(ctx context.Context) AwsXraySourceDefaultDateFormatOutput {
	return o
}

func (o AwsXraySourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o AwsXraySourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type AwsXraySourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (AwsXraySourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourceDefaultDateFormat)(nil)).Elem()
}

func (o AwsXraySourceDefaultDateFormatArrayOutput) ToAwsXraySourceDefaultDateFormatArrayOutput() AwsXraySourceDefaultDateFormatArrayOutput {
	return o
}

func (o AwsXraySourceDefaultDateFormatArrayOutput) ToAwsXraySourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) AwsXraySourceDefaultDateFormatArrayOutput {
	return o
}

func (o AwsXraySourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) AwsXraySourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsXraySourceDefaultDateFormat {
		return vs[0].([]AwsXraySourceDefaultDateFormat)[vs[1].(int)]
	}).(AwsXraySourceDefaultDateFormatOutput)
}

type AwsXraySourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// AwsXraySourceFilterInput is an input type that accepts AwsXraySourceFilterArgs and AwsXraySourceFilterOutput values.
// You can construct a concrete instance of `AwsXraySourceFilterInput` via:
//
//          AwsXraySourceFilterArgs{...}
type AwsXraySourceFilterInput interface {
	pulumi.Input

	ToAwsXraySourceFilterOutput() AwsXraySourceFilterOutput
	ToAwsXraySourceFilterOutputWithContext(context.Context) AwsXraySourceFilterOutput
}

type AwsXraySourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (AwsXraySourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceFilter)(nil)).Elem()
}

func (i AwsXraySourceFilterArgs) ToAwsXraySourceFilterOutput() AwsXraySourceFilterOutput {
	return i.ToAwsXraySourceFilterOutputWithContext(context.Background())
}

func (i AwsXraySourceFilterArgs) ToAwsXraySourceFilterOutputWithContext(ctx context.Context) AwsXraySourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceFilterOutput)
}

// AwsXraySourceFilterArrayInput is an input type that accepts AwsXraySourceFilterArray and AwsXraySourceFilterArrayOutput values.
// You can construct a concrete instance of `AwsXraySourceFilterArrayInput` via:
//
//          AwsXraySourceFilterArray{ AwsXraySourceFilterArgs{...} }
type AwsXraySourceFilterArrayInput interface {
	pulumi.Input

	ToAwsXraySourceFilterArrayOutput() AwsXraySourceFilterArrayOutput
	ToAwsXraySourceFilterArrayOutputWithContext(context.Context) AwsXraySourceFilterArrayOutput
}

type AwsXraySourceFilterArray []AwsXraySourceFilterInput

func (AwsXraySourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourceFilter)(nil)).Elem()
}

func (i AwsXraySourceFilterArray) ToAwsXraySourceFilterArrayOutput() AwsXraySourceFilterArrayOutput {
	return i.ToAwsXraySourceFilterArrayOutputWithContext(context.Background())
}

func (i AwsXraySourceFilterArray) ToAwsXraySourceFilterArrayOutputWithContext(ctx context.Context) AwsXraySourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceFilterArrayOutput)
}

type AwsXraySourceFilterOutput struct{ *pulumi.OutputState }

func (AwsXraySourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceFilter)(nil)).Elem()
}

func (o AwsXraySourceFilterOutput) ToAwsXraySourceFilterOutput() AwsXraySourceFilterOutput {
	return o
}

func (o AwsXraySourceFilterOutput) ToAwsXraySourceFilterOutputWithContext(ctx context.Context) AwsXraySourceFilterOutput {
	return o
}

func (o AwsXraySourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o AwsXraySourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o AwsXraySourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type AwsXraySourceFilterArrayOutput struct{ *pulumi.OutputState }

func (AwsXraySourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourceFilter)(nil)).Elem()
}

func (o AwsXraySourceFilterArrayOutput) ToAwsXraySourceFilterArrayOutput() AwsXraySourceFilterArrayOutput {
	return o
}

func (o AwsXraySourceFilterArrayOutput) ToAwsXraySourceFilterArrayOutputWithContext(ctx context.Context) AwsXraySourceFilterArrayOutput {
	return o
}

func (o AwsXraySourceFilterArrayOutput) Index(i pulumi.IntInput) AwsXraySourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsXraySourceFilter {
		return vs[0].([]AwsXraySourceFilter)[vs[1].(int)]
	}).(AwsXraySourceFilterOutput)
}

type AwsXraySourcePath struct {
	BucketName        *string                      `pulumi:"bucketName"`
	LimitToNamespaces []string                     `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                     `pulumi:"limitToRegions"`
	PathExpression    *string                      `pulumi:"pathExpression"`
	TagFilters        []AwsXraySourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                       `pulumi:"type"`
}

// AwsXraySourcePathInput is an input type that accepts AwsXraySourcePathArgs and AwsXraySourcePathOutput values.
// You can construct a concrete instance of `AwsXraySourcePathInput` via:
//
//          AwsXraySourcePathArgs{...}
type AwsXraySourcePathInput interface {
	pulumi.Input

	ToAwsXraySourcePathOutput() AwsXraySourcePathOutput
	ToAwsXraySourcePathOutputWithContext(context.Context) AwsXraySourcePathOutput
}

type AwsXraySourcePathArgs struct {
	BucketName        pulumi.StringPtrInput                `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput              `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput              `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput                `pulumi:"pathExpression"`
	TagFilters        AwsXraySourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput                   `pulumi:"type"`
}

func (AwsXraySourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePath)(nil)).Elem()
}

func (i AwsXraySourcePathArgs) ToAwsXraySourcePathOutput() AwsXraySourcePathOutput {
	return i.ToAwsXraySourcePathOutputWithContext(context.Background())
}

func (i AwsXraySourcePathArgs) ToAwsXraySourcePathOutputWithContext(ctx context.Context) AwsXraySourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathOutput)
}

func (i AwsXraySourcePathArgs) ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput {
	return i.ToAwsXraySourcePathPtrOutputWithContext(context.Background())
}

func (i AwsXraySourcePathArgs) ToAwsXraySourcePathPtrOutputWithContext(ctx context.Context) AwsXraySourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathOutput).ToAwsXraySourcePathPtrOutputWithContext(ctx)
}

// AwsXraySourcePathPtrInput is an input type that accepts AwsXraySourcePathArgs, AwsXraySourcePathPtr and AwsXraySourcePathPtrOutput values.
// You can construct a concrete instance of `AwsXraySourcePathPtrInput` via:
//
//          AwsXraySourcePathArgs{...}
//
//  or:
//
//          nil
type AwsXraySourcePathPtrInput interface {
	pulumi.Input

	ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput
	ToAwsXraySourcePathPtrOutputWithContext(context.Context) AwsXraySourcePathPtrOutput
}

type awsXraySourcePathPtrType AwsXraySourcePathArgs

func AwsXraySourcePathPtr(v *AwsXraySourcePathArgs) AwsXraySourcePathPtrInput {
	return (*awsXraySourcePathPtrType)(v)
}

func (*awsXraySourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsXraySourcePath)(nil)).Elem()
}

func (i *awsXraySourcePathPtrType) ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput {
	return i.ToAwsXraySourcePathPtrOutputWithContext(context.Background())
}

func (i *awsXraySourcePathPtrType) ToAwsXraySourcePathPtrOutputWithContext(ctx context.Context) AwsXraySourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathPtrOutput)
}

type AwsXraySourcePathOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePath)(nil)).Elem()
}

func (o AwsXraySourcePathOutput) ToAwsXraySourcePathOutput() AwsXraySourcePathOutput {
	return o
}

func (o AwsXraySourcePathOutput) ToAwsXraySourcePathOutputWithContext(ctx context.Context) AwsXraySourcePathOutput {
	return o
}

func (o AwsXraySourcePathOutput) ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput {
	return o.ToAwsXraySourcePathPtrOutputWithContext(context.Background())
}

func (o AwsXraySourcePathOutput) ToAwsXraySourcePathPtrOutputWithContext(ctx context.Context) AwsXraySourcePathPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePath) *AwsXraySourcePath {
		return &v
	}).(AwsXraySourcePathPtrOutput)
}
func (o AwsXraySourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathOutput) TagFilters() AwsXraySourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []AwsXraySourcePathTagFilter { return v.TagFilters }).(AwsXraySourcePathTagFilterArrayOutput)
}

func (o AwsXraySourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type AwsXraySourcePathPtrOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsXraySourcePath)(nil)).Elem()
}

func (o AwsXraySourcePathPtrOutput) ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput {
	return o
}

func (o AwsXraySourcePathPtrOutput) ToAwsXraySourcePathPtrOutputWithContext(ctx context.Context) AwsXraySourcePathPtrOutput {
	return o
}

func (o AwsXraySourcePathPtrOutput) Elem() AwsXraySourcePathOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) AwsXraySourcePath { return *v }).(AwsXraySourcePathOutput)
}

func (o AwsXraySourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathPtrOutput) TagFilters() AwsXraySourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []AwsXraySourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(AwsXraySourcePathTagFilterArrayOutput)
}

func (o AwsXraySourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AwsXraySourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// AwsXraySourcePathTagFilterInput is an input type that accepts AwsXraySourcePathTagFilterArgs and AwsXraySourcePathTagFilterOutput values.
// You can construct a concrete instance of `AwsXraySourcePathTagFilterInput` via:
//
//          AwsXraySourcePathTagFilterArgs{...}
type AwsXraySourcePathTagFilterInput interface {
	pulumi.Input

	ToAwsXraySourcePathTagFilterOutput() AwsXraySourcePathTagFilterOutput
	ToAwsXraySourcePathTagFilterOutputWithContext(context.Context) AwsXraySourcePathTagFilterOutput
}

type AwsXraySourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (AwsXraySourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePathTagFilter)(nil)).Elem()
}

func (i AwsXraySourcePathTagFilterArgs) ToAwsXraySourcePathTagFilterOutput() AwsXraySourcePathTagFilterOutput {
	return i.ToAwsXraySourcePathTagFilterOutputWithContext(context.Background())
}

func (i AwsXraySourcePathTagFilterArgs) ToAwsXraySourcePathTagFilterOutputWithContext(ctx context.Context) AwsXraySourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathTagFilterOutput)
}

// AwsXraySourcePathTagFilterArrayInput is an input type that accepts AwsXraySourcePathTagFilterArray and AwsXraySourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `AwsXraySourcePathTagFilterArrayInput` via:
//
//          AwsXraySourcePathTagFilterArray{ AwsXraySourcePathTagFilterArgs{...} }
type AwsXraySourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToAwsXraySourcePathTagFilterArrayOutput() AwsXraySourcePathTagFilterArrayOutput
	ToAwsXraySourcePathTagFilterArrayOutputWithContext(context.Context) AwsXraySourcePathTagFilterArrayOutput
}

type AwsXraySourcePathTagFilterArray []AwsXraySourcePathTagFilterInput

func (AwsXraySourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourcePathTagFilter)(nil)).Elem()
}

func (i AwsXraySourcePathTagFilterArray) ToAwsXraySourcePathTagFilterArrayOutput() AwsXraySourcePathTagFilterArrayOutput {
	return i.ToAwsXraySourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i AwsXraySourcePathTagFilterArray) ToAwsXraySourcePathTagFilterArrayOutputWithContext(ctx context.Context) AwsXraySourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathTagFilterArrayOutput)
}

type AwsXraySourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePathTagFilter)(nil)).Elem()
}

func (o AwsXraySourcePathTagFilterOutput) ToAwsXraySourcePathTagFilterOutput() AwsXraySourcePathTagFilterOutput {
	return o
}

func (o AwsXraySourcePathTagFilterOutput) ToAwsXraySourcePathTagFilterOutputWithContext(ctx context.Context) AwsXraySourcePathTagFilterOutput {
	return o
}

func (o AwsXraySourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AwsXraySourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourcePathTagFilter)(nil)).Elem()
}

func (o AwsXraySourcePathTagFilterArrayOutput) ToAwsXraySourcePathTagFilterArrayOutput() AwsXraySourcePathTagFilterArrayOutput {
	return o
}

func (o AwsXraySourcePathTagFilterArrayOutput) ToAwsXraySourcePathTagFilterArrayOutputWithContext(ctx context.Context) AwsXraySourcePathTagFilterArrayOutput {
	return o
}

func (o AwsXraySourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) AwsXraySourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsXraySourcePathTagFilter {
		return vs[0].([]AwsXraySourcePathTagFilter)[vs[1].(int)]
	}).(AwsXraySourcePathTagFilterOutput)
}

type CloudSyslogSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// CloudSyslogSourceDefaultDateFormatInput is an input type that accepts CloudSyslogSourceDefaultDateFormatArgs and CloudSyslogSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `CloudSyslogSourceDefaultDateFormatInput` via:
//
//          CloudSyslogSourceDefaultDateFormatArgs{...}
type CloudSyslogSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToCloudSyslogSourceDefaultDateFormatOutput() CloudSyslogSourceDefaultDateFormatOutput
	ToCloudSyslogSourceDefaultDateFormatOutputWithContext(context.Context) CloudSyslogSourceDefaultDateFormatOutput
}

type CloudSyslogSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (CloudSyslogSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSyslogSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudSyslogSourceDefaultDateFormatArgs) ToCloudSyslogSourceDefaultDateFormatOutput() CloudSyslogSourceDefaultDateFormatOutput {
	return i.ToCloudSyslogSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i CloudSyslogSourceDefaultDateFormatArgs) ToCloudSyslogSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudSyslogSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceDefaultDateFormatOutput)
}

// CloudSyslogSourceDefaultDateFormatArrayInput is an input type that accepts CloudSyslogSourceDefaultDateFormatArray and CloudSyslogSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `CloudSyslogSourceDefaultDateFormatArrayInput` via:
//
//          CloudSyslogSourceDefaultDateFormatArray{ CloudSyslogSourceDefaultDateFormatArgs{...} }
type CloudSyslogSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToCloudSyslogSourceDefaultDateFormatArrayOutput() CloudSyslogSourceDefaultDateFormatArrayOutput
	ToCloudSyslogSourceDefaultDateFormatArrayOutputWithContext(context.Context) CloudSyslogSourceDefaultDateFormatArrayOutput
}

type CloudSyslogSourceDefaultDateFormatArray []CloudSyslogSourceDefaultDateFormatInput

func (CloudSyslogSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudSyslogSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudSyslogSourceDefaultDateFormatArray) ToCloudSyslogSourceDefaultDateFormatArrayOutput() CloudSyslogSourceDefaultDateFormatArrayOutput {
	return i.ToCloudSyslogSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i CloudSyslogSourceDefaultDateFormatArray) ToCloudSyslogSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudSyslogSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceDefaultDateFormatArrayOutput)
}

type CloudSyslogSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSyslogSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudSyslogSourceDefaultDateFormatOutput) ToCloudSyslogSourceDefaultDateFormatOutput() CloudSyslogSourceDefaultDateFormatOutput {
	return o
}

func (o CloudSyslogSourceDefaultDateFormatOutput) ToCloudSyslogSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudSyslogSourceDefaultDateFormatOutput {
	return o
}

func (o CloudSyslogSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSyslogSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o CloudSyslogSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudSyslogSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type CloudSyslogSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudSyslogSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudSyslogSourceDefaultDateFormatArrayOutput) ToCloudSyslogSourceDefaultDateFormatArrayOutput() CloudSyslogSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudSyslogSourceDefaultDateFormatArrayOutput) ToCloudSyslogSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudSyslogSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudSyslogSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) CloudSyslogSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudSyslogSourceDefaultDateFormat {
		return vs[0].([]CloudSyslogSourceDefaultDateFormat)[vs[1].(int)]
	}).(CloudSyslogSourceDefaultDateFormatOutput)
}

type CloudSyslogSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// CloudSyslogSourceFilterInput is an input type that accepts CloudSyslogSourceFilterArgs and CloudSyslogSourceFilterOutput values.
// You can construct a concrete instance of `CloudSyslogSourceFilterInput` via:
//
//          CloudSyslogSourceFilterArgs{...}
type CloudSyslogSourceFilterInput interface {
	pulumi.Input

	ToCloudSyslogSourceFilterOutput() CloudSyslogSourceFilterOutput
	ToCloudSyslogSourceFilterOutputWithContext(context.Context) CloudSyslogSourceFilterOutput
}

type CloudSyslogSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (CloudSyslogSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSyslogSourceFilter)(nil)).Elem()
}

func (i CloudSyslogSourceFilterArgs) ToCloudSyslogSourceFilterOutput() CloudSyslogSourceFilterOutput {
	return i.ToCloudSyslogSourceFilterOutputWithContext(context.Background())
}

func (i CloudSyslogSourceFilterArgs) ToCloudSyslogSourceFilterOutputWithContext(ctx context.Context) CloudSyslogSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceFilterOutput)
}

// CloudSyslogSourceFilterArrayInput is an input type that accepts CloudSyslogSourceFilterArray and CloudSyslogSourceFilterArrayOutput values.
// You can construct a concrete instance of `CloudSyslogSourceFilterArrayInput` via:
//
//          CloudSyslogSourceFilterArray{ CloudSyslogSourceFilterArgs{...} }
type CloudSyslogSourceFilterArrayInput interface {
	pulumi.Input

	ToCloudSyslogSourceFilterArrayOutput() CloudSyslogSourceFilterArrayOutput
	ToCloudSyslogSourceFilterArrayOutputWithContext(context.Context) CloudSyslogSourceFilterArrayOutput
}

type CloudSyslogSourceFilterArray []CloudSyslogSourceFilterInput

func (CloudSyslogSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudSyslogSourceFilter)(nil)).Elem()
}

func (i CloudSyslogSourceFilterArray) ToCloudSyslogSourceFilterArrayOutput() CloudSyslogSourceFilterArrayOutput {
	return i.ToCloudSyslogSourceFilterArrayOutputWithContext(context.Background())
}

func (i CloudSyslogSourceFilterArray) ToCloudSyslogSourceFilterArrayOutputWithContext(ctx context.Context) CloudSyslogSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceFilterArrayOutput)
}

type CloudSyslogSourceFilterOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSyslogSourceFilter)(nil)).Elem()
}

func (o CloudSyslogSourceFilterOutput) ToCloudSyslogSourceFilterOutput() CloudSyslogSourceFilterOutput {
	return o
}

func (o CloudSyslogSourceFilterOutput) ToCloudSyslogSourceFilterOutputWithContext(ctx context.Context) CloudSyslogSourceFilterOutput {
	return o
}

func (o CloudSyslogSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSyslogSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o CloudSyslogSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudSyslogSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o CloudSyslogSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSyslogSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CloudSyslogSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSyslogSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type CloudSyslogSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudSyslogSourceFilter)(nil)).Elem()
}

func (o CloudSyslogSourceFilterArrayOutput) ToCloudSyslogSourceFilterArrayOutput() CloudSyslogSourceFilterArrayOutput {
	return o
}

func (o CloudSyslogSourceFilterArrayOutput) ToCloudSyslogSourceFilterArrayOutputWithContext(ctx context.Context) CloudSyslogSourceFilterArrayOutput {
	return o
}

func (o CloudSyslogSourceFilterArrayOutput) Index(i pulumi.IntInput) CloudSyslogSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudSyslogSourceFilter {
		return vs[0].([]CloudSyslogSourceFilter)[vs[1].(int)]
	}).(CloudSyslogSourceFilterOutput)
}

type CloudfrontSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// CloudfrontSourceAuthenticationInput is an input type that accepts CloudfrontSourceAuthenticationArgs and CloudfrontSourceAuthenticationOutput values.
// You can construct a concrete instance of `CloudfrontSourceAuthenticationInput` via:
//
//          CloudfrontSourceAuthenticationArgs{...}
type CloudfrontSourceAuthenticationInput interface {
	pulumi.Input

	ToCloudfrontSourceAuthenticationOutput() CloudfrontSourceAuthenticationOutput
	ToCloudfrontSourceAuthenticationOutputWithContext(context.Context) CloudfrontSourceAuthenticationOutput
}

type CloudfrontSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (CloudfrontSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceAuthentication)(nil)).Elem()
}

func (i CloudfrontSourceAuthenticationArgs) ToCloudfrontSourceAuthenticationOutput() CloudfrontSourceAuthenticationOutput {
	return i.ToCloudfrontSourceAuthenticationOutputWithContext(context.Background())
}

func (i CloudfrontSourceAuthenticationArgs) ToCloudfrontSourceAuthenticationOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceAuthenticationOutput)
}

func (i CloudfrontSourceAuthenticationArgs) ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput {
	return i.ToCloudfrontSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i CloudfrontSourceAuthenticationArgs) ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceAuthenticationOutput).ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx)
}

// CloudfrontSourceAuthenticationPtrInput is an input type that accepts CloudfrontSourceAuthenticationArgs, CloudfrontSourceAuthenticationPtr and CloudfrontSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `CloudfrontSourceAuthenticationPtrInput` via:
//
//          CloudfrontSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type CloudfrontSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput
	ToCloudfrontSourceAuthenticationPtrOutputWithContext(context.Context) CloudfrontSourceAuthenticationPtrOutput
}

type cloudfrontSourceAuthenticationPtrType CloudfrontSourceAuthenticationArgs

func CloudfrontSourceAuthenticationPtr(v *CloudfrontSourceAuthenticationArgs) CloudfrontSourceAuthenticationPtrInput {
	return (*cloudfrontSourceAuthenticationPtrType)(v)
}

func (*cloudfrontSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfrontSourceAuthentication)(nil)).Elem()
}

func (i *cloudfrontSourceAuthenticationPtrType) ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput {
	return i.ToCloudfrontSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *cloudfrontSourceAuthenticationPtrType) ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceAuthenticationPtrOutput)
}

type CloudfrontSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceAuthentication)(nil)).Elem()
}

func (o CloudfrontSourceAuthenticationOutput) ToCloudfrontSourceAuthenticationOutput() CloudfrontSourceAuthenticationOutput {
	return o
}

func (o CloudfrontSourceAuthenticationOutput) ToCloudfrontSourceAuthenticationOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationOutput {
	return o
}

func (o CloudfrontSourceAuthenticationOutput) ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput {
	return o.ToCloudfrontSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o CloudfrontSourceAuthenticationOutput) ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *CloudfrontSourceAuthentication {
		return &v
	}).(CloudfrontSourceAuthenticationPtrOutput)
}
func (o CloudfrontSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type CloudfrontSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfrontSourceAuthentication)(nil)).Elem()
}

func (o CloudfrontSourceAuthenticationPtrOutput) ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput {
	return o
}

func (o CloudfrontSourceAuthenticationPtrOutput) ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationPtrOutput {
	return o
}

func (o CloudfrontSourceAuthenticationPtrOutput) Elem() CloudfrontSourceAuthenticationOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) CloudfrontSourceAuthentication { return *v }).(CloudfrontSourceAuthenticationOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudfrontSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// CloudfrontSourceDefaultDateFormatInput is an input type that accepts CloudfrontSourceDefaultDateFormatArgs and CloudfrontSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `CloudfrontSourceDefaultDateFormatInput` via:
//
//          CloudfrontSourceDefaultDateFormatArgs{...}
type CloudfrontSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToCloudfrontSourceDefaultDateFormatOutput() CloudfrontSourceDefaultDateFormatOutput
	ToCloudfrontSourceDefaultDateFormatOutputWithContext(context.Context) CloudfrontSourceDefaultDateFormatOutput
}

type CloudfrontSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (CloudfrontSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudfrontSourceDefaultDateFormatArgs) ToCloudfrontSourceDefaultDateFormatOutput() CloudfrontSourceDefaultDateFormatOutput {
	return i.ToCloudfrontSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i CloudfrontSourceDefaultDateFormatArgs) ToCloudfrontSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudfrontSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceDefaultDateFormatOutput)
}

// CloudfrontSourceDefaultDateFormatArrayInput is an input type that accepts CloudfrontSourceDefaultDateFormatArray and CloudfrontSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `CloudfrontSourceDefaultDateFormatArrayInput` via:
//
//          CloudfrontSourceDefaultDateFormatArray{ CloudfrontSourceDefaultDateFormatArgs{...} }
type CloudfrontSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToCloudfrontSourceDefaultDateFormatArrayOutput() CloudfrontSourceDefaultDateFormatArrayOutput
	ToCloudfrontSourceDefaultDateFormatArrayOutputWithContext(context.Context) CloudfrontSourceDefaultDateFormatArrayOutput
}

type CloudfrontSourceDefaultDateFormatArray []CloudfrontSourceDefaultDateFormatInput

func (CloudfrontSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudfrontSourceDefaultDateFormatArray) ToCloudfrontSourceDefaultDateFormatArrayOutput() CloudfrontSourceDefaultDateFormatArrayOutput {
	return i.ToCloudfrontSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i CloudfrontSourceDefaultDateFormatArray) ToCloudfrontSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudfrontSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceDefaultDateFormatArrayOutput)
}

type CloudfrontSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudfrontSourceDefaultDateFormatOutput) ToCloudfrontSourceDefaultDateFormatOutput() CloudfrontSourceDefaultDateFormatOutput {
	return o
}

func (o CloudfrontSourceDefaultDateFormatOutput) ToCloudfrontSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudfrontSourceDefaultDateFormatOutput {
	return o
}

func (o CloudfrontSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o CloudfrontSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type CloudfrontSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudfrontSourceDefaultDateFormatArrayOutput) ToCloudfrontSourceDefaultDateFormatArrayOutput() CloudfrontSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudfrontSourceDefaultDateFormatArrayOutput) ToCloudfrontSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudfrontSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudfrontSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) CloudfrontSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudfrontSourceDefaultDateFormat {
		return vs[0].([]CloudfrontSourceDefaultDateFormat)[vs[1].(int)]
	}).(CloudfrontSourceDefaultDateFormatOutput)
}

type CloudfrontSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// CloudfrontSourceFilterInput is an input type that accepts CloudfrontSourceFilterArgs and CloudfrontSourceFilterOutput values.
// You can construct a concrete instance of `CloudfrontSourceFilterInput` via:
//
//          CloudfrontSourceFilterArgs{...}
type CloudfrontSourceFilterInput interface {
	pulumi.Input

	ToCloudfrontSourceFilterOutput() CloudfrontSourceFilterOutput
	ToCloudfrontSourceFilterOutputWithContext(context.Context) CloudfrontSourceFilterOutput
}

type CloudfrontSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (CloudfrontSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceFilter)(nil)).Elem()
}

func (i CloudfrontSourceFilterArgs) ToCloudfrontSourceFilterOutput() CloudfrontSourceFilterOutput {
	return i.ToCloudfrontSourceFilterOutputWithContext(context.Background())
}

func (i CloudfrontSourceFilterArgs) ToCloudfrontSourceFilterOutputWithContext(ctx context.Context) CloudfrontSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceFilterOutput)
}

// CloudfrontSourceFilterArrayInput is an input type that accepts CloudfrontSourceFilterArray and CloudfrontSourceFilterArrayOutput values.
// You can construct a concrete instance of `CloudfrontSourceFilterArrayInput` via:
//
//          CloudfrontSourceFilterArray{ CloudfrontSourceFilterArgs{...} }
type CloudfrontSourceFilterArrayInput interface {
	pulumi.Input

	ToCloudfrontSourceFilterArrayOutput() CloudfrontSourceFilterArrayOutput
	ToCloudfrontSourceFilterArrayOutputWithContext(context.Context) CloudfrontSourceFilterArrayOutput
}

type CloudfrontSourceFilterArray []CloudfrontSourceFilterInput

func (CloudfrontSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourceFilter)(nil)).Elem()
}

func (i CloudfrontSourceFilterArray) ToCloudfrontSourceFilterArrayOutput() CloudfrontSourceFilterArrayOutput {
	return i.ToCloudfrontSourceFilterArrayOutputWithContext(context.Background())
}

func (i CloudfrontSourceFilterArray) ToCloudfrontSourceFilterArrayOutputWithContext(ctx context.Context) CloudfrontSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceFilterArrayOutput)
}

type CloudfrontSourceFilterOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceFilter)(nil)).Elem()
}

func (o CloudfrontSourceFilterOutput) ToCloudfrontSourceFilterOutput() CloudfrontSourceFilterOutput {
	return o
}

func (o CloudfrontSourceFilterOutput) ToCloudfrontSourceFilterOutputWithContext(ctx context.Context) CloudfrontSourceFilterOutput {
	return o
}

func (o CloudfrontSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o CloudfrontSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CloudfrontSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type CloudfrontSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourceFilter)(nil)).Elem()
}

func (o CloudfrontSourceFilterArrayOutput) ToCloudfrontSourceFilterArrayOutput() CloudfrontSourceFilterArrayOutput {
	return o
}

func (o CloudfrontSourceFilterArrayOutput) ToCloudfrontSourceFilterArrayOutputWithContext(ctx context.Context) CloudfrontSourceFilterArrayOutput {
	return o
}

func (o CloudfrontSourceFilterArrayOutput) Index(i pulumi.IntInput) CloudfrontSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudfrontSourceFilter {
		return vs[0].([]CloudfrontSourceFilter)[vs[1].(int)]
	}).(CloudfrontSourceFilterOutput)
}

type CloudfrontSourcePath struct {
	BucketName        *string                         `pulumi:"bucketName"`
	LimitToNamespaces []string                        `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                        `pulumi:"limitToRegions"`
	PathExpression    *string                         `pulumi:"pathExpression"`
	TagFilters        []CloudfrontSourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                          `pulumi:"type"`
}

// CloudfrontSourcePathInput is an input type that accepts CloudfrontSourcePathArgs and CloudfrontSourcePathOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathInput` via:
//
//          CloudfrontSourcePathArgs{...}
type CloudfrontSourcePathInput interface {
	pulumi.Input

	ToCloudfrontSourcePathOutput() CloudfrontSourcePathOutput
	ToCloudfrontSourcePathOutputWithContext(context.Context) CloudfrontSourcePathOutput
}

type CloudfrontSourcePathArgs struct {
	BucketName        pulumi.StringPtrInput                   `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput                 `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                 `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput                   `pulumi:"pathExpression"`
	TagFilters        CloudfrontSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput                      `pulumi:"type"`
}

func (CloudfrontSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePath)(nil)).Elem()
}

func (i CloudfrontSourcePathArgs) ToCloudfrontSourcePathOutput() CloudfrontSourcePathOutput {
	return i.ToCloudfrontSourcePathOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathArgs) ToCloudfrontSourcePathOutputWithContext(ctx context.Context) CloudfrontSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathOutput)
}

func (i CloudfrontSourcePathArgs) ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput {
	return i.ToCloudfrontSourcePathPtrOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathArgs) ToCloudfrontSourcePathPtrOutputWithContext(ctx context.Context) CloudfrontSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathOutput).ToCloudfrontSourcePathPtrOutputWithContext(ctx)
}

// CloudfrontSourcePathPtrInput is an input type that accepts CloudfrontSourcePathArgs, CloudfrontSourcePathPtr and CloudfrontSourcePathPtrOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathPtrInput` via:
//
//          CloudfrontSourcePathArgs{...}
//
//  or:
//
//          nil
type CloudfrontSourcePathPtrInput interface {
	pulumi.Input

	ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput
	ToCloudfrontSourcePathPtrOutputWithContext(context.Context) CloudfrontSourcePathPtrOutput
}

type cloudfrontSourcePathPtrType CloudfrontSourcePathArgs

func CloudfrontSourcePathPtr(v *CloudfrontSourcePathArgs) CloudfrontSourcePathPtrInput {
	return (*cloudfrontSourcePathPtrType)(v)
}

func (*cloudfrontSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfrontSourcePath)(nil)).Elem()
}

func (i *cloudfrontSourcePathPtrType) ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput {
	return i.ToCloudfrontSourcePathPtrOutputWithContext(context.Background())
}

func (i *cloudfrontSourcePathPtrType) ToCloudfrontSourcePathPtrOutputWithContext(ctx context.Context) CloudfrontSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathPtrOutput)
}

type CloudfrontSourcePathOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePath)(nil)).Elem()
}

func (o CloudfrontSourcePathOutput) ToCloudfrontSourcePathOutput() CloudfrontSourcePathOutput {
	return o
}

func (o CloudfrontSourcePathOutput) ToCloudfrontSourcePathOutputWithContext(ctx context.Context) CloudfrontSourcePathOutput {
	return o
}

func (o CloudfrontSourcePathOutput) ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput {
	return o.ToCloudfrontSourcePathPtrOutputWithContext(context.Background())
}

func (o CloudfrontSourcePathOutput) ToCloudfrontSourcePathPtrOutputWithContext(ctx context.Context) CloudfrontSourcePathPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) *CloudfrontSourcePath {
		return &v
	}).(CloudfrontSourcePathPtrOutput)
}
func (o CloudfrontSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathOutput) TagFilters() CloudfrontSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []CloudfrontSourcePathTagFilter { return v.TagFilters }).(CloudfrontSourcePathTagFilterArrayOutput)
}

func (o CloudfrontSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type CloudfrontSourcePathPtrOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfrontSourcePath)(nil)).Elem()
}

func (o CloudfrontSourcePathPtrOutput) ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput {
	return o
}

func (o CloudfrontSourcePathPtrOutput) ToCloudfrontSourcePathPtrOutputWithContext(ctx context.Context) CloudfrontSourcePathPtrOutput {
	return o
}

func (o CloudfrontSourcePathPtrOutput) Elem() CloudfrontSourcePathOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) CloudfrontSourcePath { return *v }).(CloudfrontSourcePathOutput)
}

func (o CloudfrontSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathPtrOutput) TagFilters() CloudfrontSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []CloudfrontSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(CloudfrontSourcePathTagFilterArrayOutput)
}

func (o CloudfrontSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudfrontSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// CloudfrontSourcePathTagFilterInput is an input type that accepts CloudfrontSourcePathTagFilterArgs and CloudfrontSourcePathTagFilterOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathTagFilterInput` via:
//
//          CloudfrontSourcePathTagFilterArgs{...}
type CloudfrontSourcePathTagFilterInput interface {
	pulumi.Input

	ToCloudfrontSourcePathTagFilterOutput() CloudfrontSourcePathTagFilterOutput
	ToCloudfrontSourcePathTagFilterOutputWithContext(context.Context) CloudfrontSourcePathTagFilterOutput
}

type CloudfrontSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (CloudfrontSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePathTagFilter)(nil)).Elem()
}

func (i CloudfrontSourcePathTagFilterArgs) ToCloudfrontSourcePathTagFilterOutput() CloudfrontSourcePathTagFilterOutput {
	return i.ToCloudfrontSourcePathTagFilterOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathTagFilterArgs) ToCloudfrontSourcePathTagFilterOutputWithContext(ctx context.Context) CloudfrontSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathTagFilterOutput)
}

// CloudfrontSourcePathTagFilterArrayInput is an input type that accepts CloudfrontSourcePathTagFilterArray and CloudfrontSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathTagFilterArrayInput` via:
//
//          CloudfrontSourcePathTagFilterArray{ CloudfrontSourcePathTagFilterArgs{...} }
type CloudfrontSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToCloudfrontSourcePathTagFilterArrayOutput() CloudfrontSourcePathTagFilterArrayOutput
	ToCloudfrontSourcePathTagFilterArrayOutputWithContext(context.Context) CloudfrontSourcePathTagFilterArrayOutput
}

type CloudfrontSourcePathTagFilterArray []CloudfrontSourcePathTagFilterInput

func (CloudfrontSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourcePathTagFilter)(nil)).Elem()
}

func (i CloudfrontSourcePathTagFilterArray) ToCloudfrontSourcePathTagFilterArrayOutput() CloudfrontSourcePathTagFilterArrayOutput {
	return i.ToCloudfrontSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathTagFilterArray) ToCloudfrontSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudfrontSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathTagFilterArrayOutput)
}

type CloudfrontSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePathTagFilter)(nil)).Elem()
}

func (o CloudfrontSourcePathTagFilterOutput) ToCloudfrontSourcePathTagFilterOutput() CloudfrontSourcePathTagFilterOutput {
	return o
}

func (o CloudfrontSourcePathTagFilterOutput) ToCloudfrontSourcePathTagFilterOutputWithContext(ctx context.Context) CloudfrontSourcePathTagFilterOutput {
	return o
}

func (o CloudfrontSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CloudfrontSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourcePathTagFilter)(nil)).Elem()
}

func (o CloudfrontSourcePathTagFilterArrayOutput) ToCloudfrontSourcePathTagFilterArrayOutput() CloudfrontSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudfrontSourcePathTagFilterArrayOutput) ToCloudfrontSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudfrontSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudfrontSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) CloudfrontSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudfrontSourcePathTagFilter {
		return vs[0].([]CloudfrontSourcePathTagFilter)[vs[1].(int)]
	}).(CloudfrontSourcePathTagFilterOutput)
}

type CloudtrailSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// CloudtrailSourceAuthenticationInput is an input type that accepts CloudtrailSourceAuthenticationArgs and CloudtrailSourceAuthenticationOutput values.
// You can construct a concrete instance of `CloudtrailSourceAuthenticationInput` via:
//
//          CloudtrailSourceAuthenticationArgs{...}
type CloudtrailSourceAuthenticationInput interface {
	pulumi.Input

	ToCloudtrailSourceAuthenticationOutput() CloudtrailSourceAuthenticationOutput
	ToCloudtrailSourceAuthenticationOutputWithContext(context.Context) CloudtrailSourceAuthenticationOutput
}

type CloudtrailSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (CloudtrailSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceAuthentication)(nil)).Elem()
}

func (i CloudtrailSourceAuthenticationArgs) ToCloudtrailSourceAuthenticationOutput() CloudtrailSourceAuthenticationOutput {
	return i.ToCloudtrailSourceAuthenticationOutputWithContext(context.Background())
}

func (i CloudtrailSourceAuthenticationArgs) ToCloudtrailSourceAuthenticationOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceAuthenticationOutput)
}

func (i CloudtrailSourceAuthenticationArgs) ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput {
	return i.ToCloudtrailSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i CloudtrailSourceAuthenticationArgs) ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceAuthenticationOutput).ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx)
}

// CloudtrailSourceAuthenticationPtrInput is an input type that accepts CloudtrailSourceAuthenticationArgs, CloudtrailSourceAuthenticationPtr and CloudtrailSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `CloudtrailSourceAuthenticationPtrInput` via:
//
//          CloudtrailSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type CloudtrailSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput
	ToCloudtrailSourceAuthenticationPtrOutputWithContext(context.Context) CloudtrailSourceAuthenticationPtrOutput
}

type cloudtrailSourceAuthenticationPtrType CloudtrailSourceAuthenticationArgs

func CloudtrailSourceAuthenticationPtr(v *CloudtrailSourceAuthenticationArgs) CloudtrailSourceAuthenticationPtrInput {
	return (*cloudtrailSourceAuthenticationPtrType)(v)
}

func (*cloudtrailSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSourceAuthentication)(nil)).Elem()
}

func (i *cloudtrailSourceAuthenticationPtrType) ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput {
	return i.ToCloudtrailSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *cloudtrailSourceAuthenticationPtrType) ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceAuthenticationPtrOutput)
}

type CloudtrailSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceAuthentication)(nil)).Elem()
}

func (o CloudtrailSourceAuthenticationOutput) ToCloudtrailSourceAuthenticationOutput() CloudtrailSourceAuthenticationOutput {
	return o
}

func (o CloudtrailSourceAuthenticationOutput) ToCloudtrailSourceAuthenticationOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationOutput {
	return o
}

func (o CloudtrailSourceAuthenticationOutput) ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput {
	return o.ToCloudtrailSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o CloudtrailSourceAuthenticationOutput) ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *CloudtrailSourceAuthentication {
		return &v
	}).(CloudtrailSourceAuthenticationPtrOutput)
}
func (o CloudtrailSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type CloudtrailSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSourceAuthentication)(nil)).Elem()
}

func (o CloudtrailSourceAuthenticationPtrOutput) ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput {
	return o
}

func (o CloudtrailSourceAuthenticationPtrOutput) ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationPtrOutput {
	return o
}

func (o CloudtrailSourceAuthenticationPtrOutput) Elem() CloudtrailSourceAuthenticationOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) CloudtrailSourceAuthentication { return *v }).(CloudtrailSourceAuthenticationOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudtrailSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// CloudtrailSourceDefaultDateFormatInput is an input type that accepts CloudtrailSourceDefaultDateFormatArgs and CloudtrailSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `CloudtrailSourceDefaultDateFormatInput` via:
//
//          CloudtrailSourceDefaultDateFormatArgs{...}
type CloudtrailSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToCloudtrailSourceDefaultDateFormatOutput() CloudtrailSourceDefaultDateFormatOutput
	ToCloudtrailSourceDefaultDateFormatOutputWithContext(context.Context) CloudtrailSourceDefaultDateFormatOutput
}

type CloudtrailSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (CloudtrailSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudtrailSourceDefaultDateFormatArgs) ToCloudtrailSourceDefaultDateFormatOutput() CloudtrailSourceDefaultDateFormatOutput {
	return i.ToCloudtrailSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i CloudtrailSourceDefaultDateFormatArgs) ToCloudtrailSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudtrailSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceDefaultDateFormatOutput)
}

// CloudtrailSourceDefaultDateFormatArrayInput is an input type that accepts CloudtrailSourceDefaultDateFormatArray and CloudtrailSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourceDefaultDateFormatArrayInput` via:
//
//          CloudtrailSourceDefaultDateFormatArray{ CloudtrailSourceDefaultDateFormatArgs{...} }
type CloudtrailSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToCloudtrailSourceDefaultDateFormatArrayOutput() CloudtrailSourceDefaultDateFormatArrayOutput
	ToCloudtrailSourceDefaultDateFormatArrayOutputWithContext(context.Context) CloudtrailSourceDefaultDateFormatArrayOutput
}

type CloudtrailSourceDefaultDateFormatArray []CloudtrailSourceDefaultDateFormatInput

func (CloudtrailSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudtrailSourceDefaultDateFormatArray) ToCloudtrailSourceDefaultDateFormatArrayOutput() CloudtrailSourceDefaultDateFormatArrayOutput {
	return i.ToCloudtrailSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourceDefaultDateFormatArray) ToCloudtrailSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudtrailSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceDefaultDateFormatArrayOutput)
}

type CloudtrailSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudtrailSourceDefaultDateFormatOutput) ToCloudtrailSourceDefaultDateFormatOutput() CloudtrailSourceDefaultDateFormatOutput {
	return o
}

func (o CloudtrailSourceDefaultDateFormatOutput) ToCloudtrailSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudtrailSourceDefaultDateFormatOutput {
	return o
}

func (o CloudtrailSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o CloudtrailSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type CloudtrailSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudtrailSourceDefaultDateFormatArrayOutput) ToCloudtrailSourceDefaultDateFormatArrayOutput() CloudtrailSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudtrailSourceDefaultDateFormatArrayOutput) ToCloudtrailSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudtrailSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudtrailSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) CloudtrailSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSourceDefaultDateFormat {
		return vs[0].([]CloudtrailSourceDefaultDateFormat)[vs[1].(int)]
	}).(CloudtrailSourceDefaultDateFormatOutput)
}

type CloudtrailSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// CloudtrailSourceFilterInput is an input type that accepts CloudtrailSourceFilterArgs and CloudtrailSourceFilterOutput values.
// You can construct a concrete instance of `CloudtrailSourceFilterInput` via:
//
//          CloudtrailSourceFilterArgs{...}
type CloudtrailSourceFilterInput interface {
	pulumi.Input

	ToCloudtrailSourceFilterOutput() CloudtrailSourceFilterOutput
	ToCloudtrailSourceFilterOutputWithContext(context.Context) CloudtrailSourceFilterOutput
}

type CloudtrailSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (CloudtrailSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceFilter)(nil)).Elem()
}

func (i CloudtrailSourceFilterArgs) ToCloudtrailSourceFilterOutput() CloudtrailSourceFilterOutput {
	return i.ToCloudtrailSourceFilterOutputWithContext(context.Background())
}

func (i CloudtrailSourceFilterArgs) ToCloudtrailSourceFilterOutputWithContext(ctx context.Context) CloudtrailSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceFilterOutput)
}

// CloudtrailSourceFilterArrayInput is an input type that accepts CloudtrailSourceFilterArray and CloudtrailSourceFilterArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourceFilterArrayInput` via:
//
//          CloudtrailSourceFilterArray{ CloudtrailSourceFilterArgs{...} }
type CloudtrailSourceFilterArrayInput interface {
	pulumi.Input

	ToCloudtrailSourceFilterArrayOutput() CloudtrailSourceFilterArrayOutput
	ToCloudtrailSourceFilterArrayOutputWithContext(context.Context) CloudtrailSourceFilterArrayOutput
}

type CloudtrailSourceFilterArray []CloudtrailSourceFilterInput

func (CloudtrailSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourceFilter)(nil)).Elem()
}

func (i CloudtrailSourceFilterArray) ToCloudtrailSourceFilterArrayOutput() CloudtrailSourceFilterArrayOutput {
	return i.ToCloudtrailSourceFilterArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourceFilterArray) ToCloudtrailSourceFilterArrayOutputWithContext(ctx context.Context) CloudtrailSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceFilterArrayOutput)
}

type CloudtrailSourceFilterOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceFilter)(nil)).Elem()
}

func (o CloudtrailSourceFilterOutput) ToCloudtrailSourceFilterOutput() CloudtrailSourceFilterOutput {
	return o
}

func (o CloudtrailSourceFilterOutput) ToCloudtrailSourceFilterOutputWithContext(ctx context.Context) CloudtrailSourceFilterOutput {
	return o
}

func (o CloudtrailSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o CloudtrailSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CloudtrailSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type CloudtrailSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourceFilter)(nil)).Elem()
}

func (o CloudtrailSourceFilterArrayOutput) ToCloudtrailSourceFilterArrayOutput() CloudtrailSourceFilterArrayOutput {
	return o
}

func (o CloudtrailSourceFilterArrayOutput) ToCloudtrailSourceFilterArrayOutputWithContext(ctx context.Context) CloudtrailSourceFilterArrayOutput {
	return o
}

func (o CloudtrailSourceFilterArrayOutput) Index(i pulumi.IntInput) CloudtrailSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSourceFilter {
		return vs[0].([]CloudtrailSourceFilter)[vs[1].(int)]
	}).(CloudtrailSourceFilterOutput)
}

type CloudtrailSourcePath struct {
	BucketName        *string                         `pulumi:"bucketName"`
	LimitToNamespaces []string                        `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                        `pulumi:"limitToRegions"`
	PathExpression    *string                         `pulumi:"pathExpression"`
	TagFilters        []CloudtrailSourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                          `pulumi:"type"`
}

// CloudtrailSourcePathInput is an input type that accepts CloudtrailSourcePathArgs and CloudtrailSourcePathOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathInput` via:
//
//          CloudtrailSourcePathArgs{...}
type CloudtrailSourcePathInput interface {
	pulumi.Input

	ToCloudtrailSourcePathOutput() CloudtrailSourcePathOutput
	ToCloudtrailSourcePathOutputWithContext(context.Context) CloudtrailSourcePathOutput
}

type CloudtrailSourcePathArgs struct {
	BucketName        pulumi.StringPtrInput                   `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput                 `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                 `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput                   `pulumi:"pathExpression"`
	TagFilters        CloudtrailSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput                      `pulumi:"type"`
}

func (CloudtrailSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePath)(nil)).Elem()
}

func (i CloudtrailSourcePathArgs) ToCloudtrailSourcePathOutput() CloudtrailSourcePathOutput {
	return i.ToCloudtrailSourcePathOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathArgs) ToCloudtrailSourcePathOutputWithContext(ctx context.Context) CloudtrailSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathOutput)
}

func (i CloudtrailSourcePathArgs) ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput {
	return i.ToCloudtrailSourcePathPtrOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathArgs) ToCloudtrailSourcePathPtrOutputWithContext(ctx context.Context) CloudtrailSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathOutput).ToCloudtrailSourcePathPtrOutputWithContext(ctx)
}

// CloudtrailSourcePathPtrInput is an input type that accepts CloudtrailSourcePathArgs, CloudtrailSourcePathPtr and CloudtrailSourcePathPtrOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathPtrInput` via:
//
//          CloudtrailSourcePathArgs{...}
//
//  or:
//
//          nil
type CloudtrailSourcePathPtrInput interface {
	pulumi.Input

	ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput
	ToCloudtrailSourcePathPtrOutputWithContext(context.Context) CloudtrailSourcePathPtrOutput
}

type cloudtrailSourcePathPtrType CloudtrailSourcePathArgs

func CloudtrailSourcePathPtr(v *CloudtrailSourcePathArgs) CloudtrailSourcePathPtrInput {
	return (*cloudtrailSourcePathPtrType)(v)
}

func (*cloudtrailSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSourcePath)(nil)).Elem()
}

func (i *cloudtrailSourcePathPtrType) ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput {
	return i.ToCloudtrailSourcePathPtrOutputWithContext(context.Background())
}

func (i *cloudtrailSourcePathPtrType) ToCloudtrailSourcePathPtrOutputWithContext(ctx context.Context) CloudtrailSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathPtrOutput)
}

type CloudtrailSourcePathOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePath)(nil)).Elem()
}

func (o CloudtrailSourcePathOutput) ToCloudtrailSourcePathOutput() CloudtrailSourcePathOutput {
	return o
}

func (o CloudtrailSourcePathOutput) ToCloudtrailSourcePathOutputWithContext(ctx context.Context) CloudtrailSourcePathOutput {
	return o
}

func (o CloudtrailSourcePathOutput) ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput {
	return o.ToCloudtrailSourcePathPtrOutputWithContext(context.Background())
}

func (o CloudtrailSourcePathOutput) ToCloudtrailSourcePathPtrOutputWithContext(ctx context.Context) CloudtrailSourcePathPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) *CloudtrailSourcePath {
		return &v
	}).(CloudtrailSourcePathPtrOutput)
}
func (o CloudtrailSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathOutput) TagFilters() CloudtrailSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []CloudtrailSourcePathTagFilter { return v.TagFilters }).(CloudtrailSourcePathTagFilterArrayOutput)
}

func (o CloudtrailSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type CloudtrailSourcePathPtrOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSourcePath)(nil)).Elem()
}

func (o CloudtrailSourcePathPtrOutput) ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput {
	return o
}

func (o CloudtrailSourcePathPtrOutput) ToCloudtrailSourcePathPtrOutputWithContext(ctx context.Context) CloudtrailSourcePathPtrOutput {
	return o
}

func (o CloudtrailSourcePathPtrOutput) Elem() CloudtrailSourcePathOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) CloudtrailSourcePath { return *v }).(CloudtrailSourcePathOutput)
}

func (o CloudtrailSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathPtrOutput) TagFilters() CloudtrailSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []CloudtrailSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(CloudtrailSourcePathTagFilterArrayOutput)
}

func (o CloudtrailSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudtrailSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// CloudtrailSourcePathTagFilterInput is an input type that accepts CloudtrailSourcePathTagFilterArgs and CloudtrailSourcePathTagFilterOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathTagFilterInput` via:
//
//          CloudtrailSourcePathTagFilterArgs{...}
type CloudtrailSourcePathTagFilterInput interface {
	pulumi.Input

	ToCloudtrailSourcePathTagFilterOutput() CloudtrailSourcePathTagFilterOutput
	ToCloudtrailSourcePathTagFilterOutputWithContext(context.Context) CloudtrailSourcePathTagFilterOutput
}

type CloudtrailSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (CloudtrailSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePathTagFilter)(nil)).Elem()
}

func (i CloudtrailSourcePathTagFilterArgs) ToCloudtrailSourcePathTagFilterOutput() CloudtrailSourcePathTagFilterOutput {
	return i.ToCloudtrailSourcePathTagFilterOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathTagFilterArgs) ToCloudtrailSourcePathTagFilterOutputWithContext(ctx context.Context) CloudtrailSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathTagFilterOutput)
}

// CloudtrailSourcePathTagFilterArrayInput is an input type that accepts CloudtrailSourcePathTagFilterArray and CloudtrailSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathTagFilterArrayInput` via:
//
//          CloudtrailSourcePathTagFilterArray{ CloudtrailSourcePathTagFilterArgs{...} }
type CloudtrailSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToCloudtrailSourcePathTagFilterArrayOutput() CloudtrailSourcePathTagFilterArrayOutput
	ToCloudtrailSourcePathTagFilterArrayOutputWithContext(context.Context) CloudtrailSourcePathTagFilterArrayOutput
}

type CloudtrailSourcePathTagFilterArray []CloudtrailSourcePathTagFilterInput

func (CloudtrailSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourcePathTagFilter)(nil)).Elem()
}

func (i CloudtrailSourcePathTagFilterArray) ToCloudtrailSourcePathTagFilterArrayOutput() CloudtrailSourcePathTagFilterArrayOutput {
	return i.ToCloudtrailSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathTagFilterArray) ToCloudtrailSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudtrailSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathTagFilterArrayOutput)
}

type CloudtrailSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePathTagFilter)(nil)).Elem()
}

func (o CloudtrailSourcePathTagFilterOutput) ToCloudtrailSourcePathTagFilterOutput() CloudtrailSourcePathTagFilterOutput {
	return o
}

func (o CloudtrailSourcePathTagFilterOutput) ToCloudtrailSourcePathTagFilterOutputWithContext(ctx context.Context) CloudtrailSourcePathTagFilterOutput {
	return o
}

func (o CloudtrailSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CloudtrailSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourcePathTagFilter)(nil)).Elem()
}

func (o CloudtrailSourcePathTagFilterArrayOutput) ToCloudtrailSourcePathTagFilterArrayOutput() CloudtrailSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudtrailSourcePathTagFilterArrayOutput) ToCloudtrailSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudtrailSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudtrailSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) CloudtrailSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSourcePathTagFilter {
		return vs[0].([]CloudtrailSourcePathTagFilter)[vs[1].(int)]
	}).(CloudtrailSourcePathTagFilterOutput)
}

type CloudwatchSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// CloudwatchSourceAuthenticationInput is an input type that accepts CloudwatchSourceAuthenticationArgs and CloudwatchSourceAuthenticationOutput values.
// You can construct a concrete instance of `CloudwatchSourceAuthenticationInput` via:
//
//          CloudwatchSourceAuthenticationArgs{...}
type CloudwatchSourceAuthenticationInput interface {
	pulumi.Input

	ToCloudwatchSourceAuthenticationOutput() CloudwatchSourceAuthenticationOutput
	ToCloudwatchSourceAuthenticationOutputWithContext(context.Context) CloudwatchSourceAuthenticationOutput
}

type CloudwatchSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (CloudwatchSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceAuthentication)(nil)).Elem()
}

func (i CloudwatchSourceAuthenticationArgs) ToCloudwatchSourceAuthenticationOutput() CloudwatchSourceAuthenticationOutput {
	return i.ToCloudwatchSourceAuthenticationOutputWithContext(context.Background())
}

func (i CloudwatchSourceAuthenticationArgs) ToCloudwatchSourceAuthenticationOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceAuthenticationOutput)
}

func (i CloudwatchSourceAuthenticationArgs) ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput {
	return i.ToCloudwatchSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i CloudwatchSourceAuthenticationArgs) ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceAuthenticationOutput).ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx)
}

// CloudwatchSourceAuthenticationPtrInput is an input type that accepts CloudwatchSourceAuthenticationArgs, CloudwatchSourceAuthenticationPtr and CloudwatchSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `CloudwatchSourceAuthenticationPtrInput` via:
//
//          CloudwatchSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type CloudwatchSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput
	ToCloudwatchSourceAuthenticationPtrOutputWithContext(context.Context) CloudwatchSourceAuthenticationPtrOutput
}

type cloudwatchSourceAuthenticationPtrType CloudwatchSourceAuthenticationArgs

func CloudwatchSourceAuthenticationPtr(v *CloudwatchSourceAuthenticationArgs) CloudwatchSourceAuthenticationPtrInput {
	return (*cloudwatchSourceAuthenticationPtrType)(v)
}

func (*cloudwatchSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwatchSourceAuthentication)(nil)).Elem()
}

func (i *cloudwatchSourceAuthenticationPtrType) ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput {
	return i.ToCloudwatchSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *cloudwatchSourceAuthenticationPtrType) ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceAuthenticationPtrOutput)
}

type CloudwatchSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceAuthentication)(nil)).Elem()
}

func (o CloudwatchSourceAuthenticationOutput) ToCloudwatchSourceAuthenticationOutput() CloudwatchSourceAuthenticationOutput {
	return o
}

func (o CloudwatchSourceAuthenticationOutput) ToCloudwatchSourceAuthenticationOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationOutput {
	return o
}

func (o CloudwatchSourceAuthenticationOutput) ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput {
	return o.ToCloudwatchSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o CloudwatchSourceAuthenticationOutput) ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *CloudwatchSourceAuthentication {
		return &v
	}).(CloudwatchSourceAuthenticationPtrOutput)
}
func (o CloudwatchSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type CloudwatchSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwatchSourceAuthentication)(nil)).Elem()
}

func (o CloudwatchSourceAuthenticationPtrOutput) ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput {
	return o
}

func (o CloudwatchSourceAuthenticationPtrOutput) ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationPtrOutput {
	return o
}

func (o CloudwatchSourceAuthenticationPtrOutput) Elem() CloudwatchSourceAuthenticationOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) CloudwatchSourceAuthentication { return *v }).(CloudwatchSourceAuthenticationOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudwatchSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// CloudwatchSourceDefaultDateFormatInput is an input type that accepts CloudwatchSourceDefaultDateFormatArgs and CloudwatchSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `CloudwatchSourceDefaultDateFormatInput` via:
//
//          CloudwatchSourceDefaultDateFormatArgs{...}
type CloudwatchSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToCloudwatchSourceDefaultDateFormatOutput() CloudwatchSourceDefaultDateFormatOutput
	ToCloudwatchSourceDefaultDateFormatOutputWithContext(context.Context) CloudwatchSourceDefaultDateFormatOutput
}

type CloudwatchSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (CloudwatchSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudwatchSourceDefaultDateFormatArgs) ToCloudwatchSourceDefaultDateFormatOutput() CloudwatchSourceDefaultDateFormatOutput {
	return i.ToCloudwatchSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i CloudwatchSourceDefaultDateFormatArgs) ToCloudwatchSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudwatchSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceDefaultDateFormatOutput)
}

// CloudwatchSourceDefaultDateFormatArrayInput is an input type that accepts CloudwatchSourceDefaultDateFormatArray and CloudwatchSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `CloudwatchSourceDefaultDateFormatArrayInput` via:
//
//          CloudwatchSourceDefaultDateFormatArray{ CloudwatchSourceDefaultDateFormatArgs{...} }
type CloudwatchSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToCloudwatchSourceDefaultDateFormatArrayOutput() CloudwatchSourceDefaultDateFormatArrayOutput
	ToCloudwatchSourceDefaultDateFormatArrayOutputWithContext(context.Context) CloudwatchSourceDefaultDateFormatArrayOutput
}

type CloudwatchSourceDefaultDateFormatArray []CloudwatchSourceDefaultDateFormatInput

func (CloudwatchSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudwatchSourceDefaultDateFormatArray) ToCloudwatchSourceDefaultDateFormatArrayOutput() CloudwatchSourceDefaultDateFormatArrayOutput {
	return i.ToCloudwatchSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i CloudwatchSourceDefaultDateFormatArray) ToCloudwatchSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudwatchSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceDefaultDateFormatArrayOutput)
}

type CloudwatchSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudwatchSourceDefaultDateFormatOutput) ToCloudwatchSourceDefaultDateFormatOutput() CloudwatchSourceDefaultDateFormatOutput {
	return o
}

func (o CloudwatchSourceDefaultDateFormatOutput) ToCloudwatchSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudwatchSourceDefaultDateFormatOutput {
	return o
}

func (o CloudwatchSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o CloudwatchSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type CloudwatchSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudwatchSourceDefaultDateFormatArrayOutput) ToCloudwatchSourceDefaultDateFormatArrayOutput() CloudwatchSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudwatchSourceDefaultDateFormatArrayOutput) ToCloudwatchSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudwatchSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudwatchSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) CloudwatchSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudwatchSourceDefaultDateFormat {
		return vs[0].([]CloudwatchSourceDefaultDateFormat)[vs[1].(int)]
	}).(CloudwatchSourceDefaultDateFormatOutput)
}

type CloudwatchSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// CloudwatchSourceFilterInput is an input type that accepts CloudwatchSourceFilterArgs and CloudwatchSourceFilterOutput values.
// You can construct a concrete instance of `CloudwatchSourceFilterInput` via:
//
//          CloudwatchSourceFilterArgs{...}
type CloudwatchSourceFilterInput interface {
	pulumi.Input

	ToCloudwatchSourceFilterOutput() CloudwatchSourceFilterOutput
	ToCloudwatchSourceFilterOutputWithContext(context.Context) CloudwatchSourceFilterOutput
}

type CloudwatchSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (CloudwatchSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceFilter)(nil)).Elem()
}

func (i CloudwatchSourceFilterArgs) ToCloudwatchSourceFilterOutput() CloudwatchSourceFilterOutput {
	return i.ToCloudwatchSourceFilterOutputWithContext(context.Background())
}

func (i CloudwatchSourceFilterArgs) ToCloudwatchSourceFilterOutputWithContext(ctx context.Context) CloudwatchSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceFilterOutput)
}

// CloudwatchSourceFilterArrayInput is an input type that accepts CloudwatchSourceFilterArray and CloudwatchSourceFilterArrayOutput values.
// You can construct a concrete instance of `CloudwatchSourceFilterArrayInput` via:
//
//          CloudwatchSourceFilterArray{ CloudwatchSourceFilterArgs{...} }
type CloudwatchSourceFilterArrayInput interface {
	pulumi.Input

	ToCloudwatchSourceFilterArrayOutput() CloudwatchSourceFilterArrayOutput
	ToCloudwatchSourceFilterArrayOutputWithContext(context.Context) CloudwatchSourceFilterArrayOutput
}

type CloudwatchSourceFilterArray []CloudwatchSourceFilterInput

func (CloudwatchSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourceFilter)(nil)).Elem()
}

func (i CloudwatchSourceFilterArray) ToCloudwatchSourceFilterArrayOutput() CloudwatchSourceFilterArrayOutput {
	return i.ToCloudwatchSourceFilterArrayOutputWithContext(context.Background())
}

func (i CloudwatchSourceFilterArray) ToCloudwatchSourceFilterArrayOutputWithContext(ctx context.Context) CloudwatchSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceFilterArrayOutput)
}

type CloudwatchSourceFilterOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceFilter)(nil)).Elem()
}

func (o CloudwatchSourceFilterOutput) ToCloudwatchSourceFilterOutput() CloudwatchSourceFilterOutput {
	return o
}

func (o CloudwatchSourceFilterOutput) ToCloudwatchSourceFilterOutputWithContext(ctx context.Context) CloudwatchSourceFilterOutput {
	return o
}

func (o CloudwatchSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o CloudwatchSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CloudwatchSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type CloudwatchSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourceFilter)(nil)).Elem()
}

func (o CloudwatchSourceFilterArrayOutput) ToCloudwatchSourceFilterArrayOutput() CloudwatchSourceFilterArrayOutput {
	return o
}

func (o CloudwatchSourceFilterArrayOutput) ToCloudwatchSourceFilterArrayOutputWithContext(ctx context.Context) CloudwatchSourceFilterArrayOutput {
	return o
}

func (o CloudwatchSourceFilterArrayOutput) Index(i pulumi.IntInput) CloudwatchSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudwatchSourceFilter {
		return vs[0].([]CloudwatchSourceFilter)[vs[1].(int)]
	}).(CloudwatchSourceFilterOutput)
}

type CloudwatchSourcePath struct {
	BucketName        *string                         `pulumi:"bucketName"`
	LimitToNamespaces []string                        `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                        `pulumi:"limitToRegions"`
	PathExpression    *string                         `pulumi:"pathExpression"`
	TagFilters        []CloudwatchSourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                          `pulumi:"type"`
}

// CloudwatchSourcePathInput is an input type that accepts CloudwatchSourcePathArgs and CloudwatchSourcePathOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathInput` via:
//
//          CloudwatchSourcePathArgs{...}
type CloudwatchSourcePathInput interface {
	pulumi.Input

	ToCloudwatchSourcePathOutput() CloudwatchSourcePathOutput
	ToCloudwatchSourcePathOutputWithContext(context.Context) CloudwatchSourcePathOutput
}

type CloudwatchSourcePathArgs struct {
	BucketName        pulumi.StringPtrInput                   `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput                 `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                 `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput                   `pulumi:"pathExpression"`
	TagFilters        CloudwatchSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput                      `pulumi:"type"`
}

func (CloudwatchSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePath)(nil)).Elem()
}

func (i CloudwatchSourcePathArgs) ToCloudwatchSourcePathOutput() CloudwatchSourcePathOutput {
	return i.ToCloudwatchSourcePathOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathArgs) ToCloudwatchSourcePathOutputWithContext(ctx context.Context) CloudwatchSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathOutput)
}

func (i CloudwatchSourcePathArgs) ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput {
	return i.ToCloudwatchSourcePathPtrOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathArgs) ToCloudwatchSourcePathPtrOutputWithContext(ctx context.Context) CloudwatchSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathOutput).ToCloudwatchSourcePathPtrOutputWithContext(ctx)
}

// CloudwatchSourcePathPtrInput is an input type that accepts CloudwatchSourcePathArgs, CloudwatchSourcePathPtr and CloudwatchSourcePathPtrOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathPtrInput` via:
//
//          CloudwatchSourcePathArgs{...}
//
//  or:
//
//          nil
type CloudwatchSourcePathPtrInput interface {
	pulumi.Input

	ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput
	ToCloudwatchSourcePathPtrOutputWithContext(context.Context) CloudwatchSourcePathPtrOutput
}

type cloudwatchSourcePathPtrType CloudwatchSourcePathArgs

func CloudwatchSourcePathPtr(v *CloudwatchSourcePathArgs) CloudwatchSourcePathPtrInput {
	return (*cloudwatchSourcePathPtrType)(v)
}

func (*cloudwatchSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwatchSourcePath)(nil)).Elem()
}

func (i *cloudwatchSourcePathPtrType) ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput {
	return i.ToCloudwatchSourcePathPtrOutputWithContext(context.Background())
}

func (i *cloudwatchSourcePathPtrType) ToCloudwatchSourcePathPtrOutputWithContext(ctx context.Context) CloudwatchSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathPtrOutput)
}

type CloudwatchSourcePathOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePath)(nil)).Elem()
}

func (o CloudwatchSourcePathOutput) ToCloudwatchSourcePathOutput() CloudwatchSourcePathOutput {
	return o
}

func (o CloudwatchSourcePathOutput) ToCloudwatchSourcePathOutputWithContext(ctx context.Context) CloudwatchSourcePathOutput {
	return o
}

func (o CloudwatchSourcePathOutput) ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput {
	return o.ToCloudwatchSourcePathPtrOutputWithContext(context.Background())
}

func (o CloudwatchSourcePathOutput) ToCloudwatchSourcePathPtrOutputWithContext(ctx context.Context) CloudwatchSourcePathPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) *CloudwatchSourcePath {
		return &v
	}).(CloudwatchSourcePathPtrOutput)
}
func (o CloudwatchSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathOutput) TagFilters() CloudwatchSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []CloudwatchSourcePathTagFilter { return v.TagFilters }).(CloudwatchSourcePathTagFilterArrayOutput)
}

func (o CloudwatchSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type CloudwatchSourcePathPtrOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwatchSourcePath)(nil)).Elem()
}

func (o CloudwatchSourcePathPtrOutput) ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput {
	return o
}

func (o CloudwatchSourcePathPtrOutput) ToCloudwatchSourcePathPtrOutputWithContext(ctx context.Context) CloudwatchSourcePathPtrOutput {
	return o
}

func (o CloudwatchSourcePathPtrOutput) Elem() CloudwatchSourcePathOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) CloudwatchSourcePath { return *v }).(CloudwatchSourcePathOutput)
}

func (o CloudwatchSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathPtrOutput) TagFilters() CloudwatchSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []CloudwatchSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(CloudwatchSourcePathTagFilterArrayOutput)
}

func (o CloudwatchSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudwatchSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// CloudwatchSourcePathTagFilterInput is an input type that accepts CloudwatchSourcePathTagFilterArgs and CloudwatchSourcePathTagFilterOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathTagFilterInput` via:
//
//          CloudwatchSourcePathTagFilterArgs{...}
type CloudwatchSourcePathTagFilterInput interface {
	pulumi.Input

	ToCloudwatchSourcePathTagFilterOutput() CloudwatchSourcePathTagFilterOutput
	ToCloudwatchSourcePathTagFilterOutputWithContext(context.Context) CloudwatchSourcePathTagFilterOutput
}

type CloudwatchSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (CloudwatchSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePathTagFilter)(nil)).Elem()
}

func (i CloudwatchSourcePathTagFilterArgs) ToCloudwatchSourcePathTagFilterOutput() CloudwatchSourcePathTagFilterOutput {
	return i.ToCloudwatchSourcePathTagFilterOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathTagFilterArgs) ToCloudwatchSourcePathTagFilterOutputWithContext(ctx context.Context) CloudwatchSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathTagFilterOutput)
}

// CloudwatchSourcePathTagFilterArrayInput is an input type that accepts CloudwatchSourcePathTagFilterArray and CloudwatchSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathTagFilterArrayInput` via:
//
//          CloudwatchSourcePathTagFilterArray{ CloudwatchSourcePathTagFilterArgs{...} }
type CloudwatchSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToCloudwatchSourcePathTagFilterArrayOutput() CloudwatchSourcePathTagFilterArrayOutput
	ToCloudwatchSourcePathTagFilterArrayOutputWithContext(context.Context) CloudwatchSourcePathTagFilterArrayOutput
}

type CloudwatchSourcePathTagFilterArray []CloudwatchSourcePathTagFilterInput

func (CloudwatchSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourcePathTagFilter)(nil)).Elem()
}

func (i CloudwatchSourcePathTagFilterArray) ToCloudwatchSourcePathTagFilterArrayOutput() CloudwatchSourcePathTagFilterArrayOutput {
	return i.ToCloudwatchSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathTagFilterArray) ToCloudwatchSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudwatchSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathTagFilterArrayOutput)
}

type CloudwatchSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePathTagFilter)(nil)).Elem()
}

func (o CloudwatchSourcePathTagFilterOutput) ToCloudwatchSourcePathTagFilterOutput() CloudwatchSourcePathTagFilterOutput {
	return o
}

func (o CloudwatchSourcePathTagFilterOutput) ToCloudwatchSourcePathTagFilterOutputWithContext(ctx context.Context) CloudwatchSourcePathTagFilterOutput {
	return o
}

func (o CloudwatchSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CloudwatchSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourcePathTagFilter)(nil)).Elem()
}

func (o CloudwatchSourcePathTagFilterArrayOutput) ToCloudwatchSourcePathTagFilterArrayOutput() CloudwatchSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudwatchSourcePathTagFilterArrayOutput) ToCloudwatchSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudwatchSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudwatchSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) CloudwatchSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudwatchSourcePathTagFilter {
		return vs[0].([]CloudwatchSourcePathTagFilter)[vs[1].(int)]
	}).(CloudwatchSourcePathTagFilterOutput)
}

type DashboardColoringRule struct {
	ColorThresholds                 []DashboardColoringRuleColorThreshold `pulumi:"colorThresholds"`
	MultipleSeriesAggregateFunction string                                `pulumi:"multipleSeriesAggregateFunction"`
	Scope                           string                                `pulumi:"scope"`
	SingleSeriesAggregateFunction   string                                `pulumi:"singleSeriesAggregateFunction"`
}

// DashboardColoringRuleInput is an input type that accepts DashboardColoringRuleArgs and DashboardColoringRuleOutput values.
// You can construct a concrete instance of `DashboardColoringRuleInput` via:
//
//          DashboardColoringRuleArgs{...}
type DashboardColoringRuleInput interface {
	pulumi.Input

	ToDashboardColoringRuleOutput() DashboardColoringRuleOutput
	ToDashboardColoringRuleOutputWithContext(context.Context) DashboardColoringRuleOutput
}

type DashboardColoringRuleArgs struct {
	ColorThresholds                 DashboardColoringRuleColorThresholdArrayInput `pulumi:"colorThresholds"`
	MultipleSeriesAggregateFunction pulumi.StringInput                            `pulumi:"multipleSeriesAggregateFunction"`
	Scope                           pulumi.StringInput                            `pulumi:"scope"`
	SingleSeriesAggregateFunction   pulumi.StringInput                            `pulumi:"singleSeriesAggregateFunction"`
}

func (DashboardColoringRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColoringRule)(nil)).Elem()
}

func (i DashboardColoringRuleArgs) ToDashboardColoringRuleOutput() DashboardColoringRuleOutput {
	return i.ToDashboardColoringRuleOutputWithContext(context.Background())
}

func (i DashboardColoringRuleArgs) ToDashboardColoringRuleOutputWithContext(ctx context.Context) DashboardColoringRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColoringRuleOutput)
}

// DashboardColoringRuleArrayInput is an input type that accepts DashboardColoringRuleArray and DashboardColoringRuleArrayOutput values.
// You can construct a concrete instance of `DashboardColoringRuleArrayInput` via:
//
//          DashboardColoringRuleArray{ DashboardColoringRuleArgs{...} }
type DashboardColoringRuleArrayInput interface {
	pulumi.Input

	ToDashboardColoringRuleArrayOutput() DashboardColoringRuleArrayOutput
	ToDashboardColoringRuleArrayOutputWithContext(context.Context) DashboardColoringRuleArrayOutput
}

type DashboardColoringRuleArray []DashboardColoringRuleInput

func (DashboardColoringRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColoringRule)(nil)).Elem()
}

func (i DashboardColoringRuleArray) ToDashboardColoringRuleArrayOutput() DashboardColoringRuleArrayOutput {
	return i.ToDashboardColoringRuleArrayOutputWithContext(context.Background())
}

func (i DashboardColoringRuleArray) ToDashboardColoringRuleArrayOutputWithContext(ctx context.Context) DashboardColoringRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColoringRuleArrayOutput)
}

type DashboardColoringRuleOutput struct{ *pulumi.OutputState }

func (DashboardColoringRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColoringRule)(nil)).Elem()
}

func (o DashboardColoringRuleOutput) ToDashboardColoringRuleOutput() DashboardColoringRuleOutput {
	return o
}

func (o DashboardColoringRuleOutput) ToDashboardColoringRuleOutputWithContext(ctx context.Context) DashboardColoringRuleOutput {
	return o
}

func (o DashboardColoringRuleOutput) ColorThresholds() DashboardColoringRuleColorThresholdArrayOutput {
	return o.ApplyT(func(v DashboardColoringRule) []DashboardColoringRuleColorThreshold { return v.ColorThresholds }).(DashboardColoringRuleColorThresholdArrayOutput)
}

func (o DashboardColoringRuleOutput) MultipleSeriesAggregateFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColoringRule) string { return v.MultipleSeriesAggregateFunction }).(pulumi.StringOutput)
}

func (o DashboardColoringRuleOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColoringRule) string { return v.Scope }).(pulumi.StringOutput)
}

func (o DashboardColoringRuleOutput) SingleSeriesAggregateFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColoringRule) string { return v.SingleSeriesAggregateFunction }).(pulumi.StringOutput)
}

type DashboardColoringRuleArrayOutput struct{ *pulumi.OutputState }

func (DashboardColoringRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColoringRule)(nil)).Elem()
}

func (o DashboardColoringRuleArrayOutput) ToDashboardColoringRuleArrayOutput() DashboardColoringRuleArrayOutput {
	return o
}

func (o DashboardColoringRuleArrayOutput) ToDashboardColoringRuleArrayOutputWithContext(ctx context.Context) DashboardColoringRuleArrayOutput {
	return o
}

func (o DashboardColoringRuleArrayOutput) Index(i pulumi.IntInput) DashboardColoringRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardColoringRule {
		return vs[0].([]DashboardColoringRule)[vs[1].(int)]
	}).(DashboardColoringRuleOutput)
}

type DashboardColoringRuleColorThreshold struct {
	Color string   `pulumi:"color"`
	Max   *float64 `pulumi:"max"`
	Min   *float64 `pulumi:"min"`
}

// DashboardColoringRuleColorThresholdInput is an input type that accepts DashboardColoringRuleColorThresholdArgs and DashboardColoringRuleColorThresholdOutput values.
// You can construct a concrete instance of `DashboardColoringRuleColorThresholdInput` via:
//
//          DashboardColoringRuleColorThresholdArgs{...}
type DashboardColoringRuleColorThresholdInput interface {
	pulumi.Input

	ToDashboardColoringRuleColorThresholdOutput() DashboardColoringRuleColorThresholdOutput
	ToDashboardColoringRuleColorThresholdOutputWithContext(context.Context) DashboardColoringRuleColorThresholdOutput
}

type DashboardColoringRuleColorThresholdArgs struct {
	Color pulumi.StringInput     `pulumi:"color"`
	Max   pulumi.Float64PtrInput `pulumi:"max"`
	Min   pulumi.Float64PtrInput `pulumi:"min"`
}

func (DashboardColoringRuleColorThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColoringRuleColorThreshold)(nil)).Elem()
}

func (i DashboardColoringRuleColorThresholdArgs) ToDashboardColoringRuleColorThresholdOutput() DashboardColoringRuleColorThresholdOutput {
	return i.ToDashboardColoringRuleColorThresholdOutputWithContext(context.Background())
}

func (i DashboardColoringRuleColorThresholdArgs) ToDashboardColoringRuleColorThresholdOutputWithContext(ctx context.Context) DashboardColoringRuleColorThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColoringRuleColorThresholdOutput)
}

// DashboardColoringRuleColorThresholdArrayInput is an input type that accepts DashboardColoringRuleColorThresholdArray and DashboardColoringRuleColorThresholdArrayOutput values.
// You can construct a concrete instance of `DashboardColoringRuleColorThresholdArrayInput` via:
//
//          DashboardColoringRuleColorThresholdArray{ DashboardColoringRuleColorThresholdArgs{...} }
type DashboardColoringRuleColorThresholdArrayInput interface {
	pulumi.Input

	ToDashboardColoringRuleColorThresholdArrayOutput() DashboardColoringRuleColorThresholdArrayOutput
	ToDashboardColoringRuleColorThresholdArrayOutputWithContext(context.Context) DashboardColoringRuleColorThresholdArrayOutput
}

type DashboardColoringRuleColorThresholdArray []DashboardColoringRuleColorThresholdInput

func (DashboardColoringRuleColorThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColoringRuleColorThreshold)(nil)).Elem()
}

func (i DashboardColoringRuleColorThresholdArray) ToDashboardColoringRuleColorThresholdArrayOutput() DashboardColoringRuleColorThresholdArrayOutput {
	return i.ToDashboardColoringRuleColorThresholdArrayOutputWithContext(context.Background())
}

func (i DashboardColoringRuleColorThresholdArray) ToDashboardColoringRuleColorThresholdArrayOutputWithContext(ctx context.Context) DashboardColoringRuleColorThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColoringRuleColorThresholdArrayOutput)
}

type DashboardColoringRuleColorThresholdOutput struct{ *pulumi.OutputState }

func (DashboardColoringRuleColorThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColoringRuleColorThreshold)(nil)).Elem()
}

func (o DashboardColoringRuleColorThresholdOutput) ToDashboardColoringRuleColorThresholdOutput() DashboardColoringRuleColorThresholdOutput {
	return o
}

func (o DashboardColoringRuleColorThresholdOutput) ToDashboardColoringRuleColorThresholdOutputWithContext(ctx context.Context) DashboardColoringRuleColorThresholdOutput {
	return o
}

func (o DashboardColoringRuleColorThresholdOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColoringRuleColorThreshold) string { return v.Color }).(pulumi.StringOutput)
}

func (o DashboardColoringRuleColorThresholdOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardColoringRuleColorThreshold) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o DashboardColoringRuleColorThresholdOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardColoringRuleColorThreshold) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type DashboardColoringRuleColorThresholdArrayOutput struct{ *pulumi.OutputState }

func (DashboardColoringRuleColorThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColoringRuleColorThreshold)(nil)).Elem()
}

func (o DashboardColoringRuleColorThresholdArrayOutput) ToDashboardColoringRuleColorThresholdArrayOutput() DashboardColoringRuleColorThresholdArrayOutput {
	return o
}

func (o DashboardColoringRuleColorThresholdArrayOutput) ToDashboardColoringRuleColorThresholdArrayOutputWithContext(ctx context.Context) DashboardColoringRuleColorThresholdArrayOutput {
	return o
}

func (o DashboardColoringRuleColorThresholdArrayOutput) Index(i pulumi.IntInput) DashboardColoringRuleColorThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardColoringRuleColorThreshold {
		return vs[0].([]DashboardColoringRuleColorThreshold)[vs[1].(int)]
	}).(DashboardColoringRuleColorThresholdOutput)
}

type DashboardLayout struct {
	Grid *DashboardLayoutGrid `pulumi:"grid"`
}

// DashboardLayoutInput is an input type that accepts DashboardLayoutArgs and DashboardLayoutOutput values.
// You can construct a concrete instance of `DashboardLayoutInput` via:
//
//          DashboardLayoutArgs{...}
type DashboardLayoutInput interface {
	pulumi.Input

	ToDashboardLayoutOutput() DashboardLayoutOutput
	ToDashboardLayoutOutputWithContext(context.Context) DashboardLayoutOutput
}

type DashboardLayoutArgs struct {
	Grid DashboardLayoutGridPtrInput `pulumi:"grid"`
}

func (DashboardLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayout)(nil)).Elem()
}

func (i DashboardLayoutArgs) ToDashboardLayoutOutput() DashboardLayoutOutput {
	return i.ToDashboardLayoutOutputWithContext(context.Background())
}

func (i DashboardLayoutArgs) ToDashboardLayoutOutputWithContext(ctx context.Context) DashboardLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutOutput)
}

func (i DashboardLayoutArgs) ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput {
	return i.ToDashboardLayoutPtrOutputWithContext(context.Background())
}

func (i DashboardLayoutArgs) ToDashboardLayoutPtrOutputWithContext(ctx context.Context) DashboardLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutOutput).ToDashboardLayoutPtrOutputWithContext(ctx)
}

// DashboardLayoutPtrInput is an input type that accepts DashboardLayoutArgs, DashboardLayoutPtr and DashboardLayoutPtrOutput values.
// You can construct a concrete instance of `DashboardLayoutPtrInput` via:
//
//          DashboardLayoutArgs{...}
//
//  or:
//
//          nil
type DashboardLayoutPtrInput interface {
	pulumi.Input

	ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput
	ToDashboardLayoutPtrOutputWithContext(context.Context) DashboardLayoutPtrOutput
}

type dashboardLayoutPtrType DashboardLayoutArgs

func DashboardLayoutPtr(v *DashboardLayoutArgs) DashboardLayoutPtrInput {
	return (*dashboardLayoutPtrType)(v)
}

func (*dashboardLayoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayout)(nil)).Elem()
}

func (i *dashboardLayoutPtrType) ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput {
	return i.ToDashboardLayoutPtrOutputWithContext(context.Background())
}

func (i *dashboardLayoutPtrType) ToDashboardLayoutPtrOutputWithContext(ctx context.Context) DashboardLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutPtrOutput)
}

type DashboardLayoutOutput struct{ *pulumi.OutputState }

func (DashboardLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayout)(nil)).Elem()
}

func (o DashboardLayoutOutput) ToDashboardLayoutOutput() DashboardLayoutOutput {
	return o
}

func (o DashboardLayoutOutput) ToDashboardLayoutOutputWithContext(ctx context.Context) DashboardLayoutOutput {
	return o
}

func (o DashboardLayoutOutput) ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput {
	return o.ToDashboardLayoutPtrOutputWithContext(context.Background())
}

func (o DashboardLayoutOutput) ToDashboardLayoutPtrOutputWithContext(ctx context.Context) DashboardLayoutPtrOutput {
	return o.ApplyT(func(v DashboardLayout) *DashboardLayout {
		return &v
	}).(DashboardLayoutPtrOutput)
}
func (o DashboardLayoutOutput) Grid() DashboardLayoutGridPtrOutput {
	return o.ApplyT(func(v DashboardLayout) *DashboardLayoutGrid { return v.Grid }).(DashboardLayoutGridPtrOutput)
}

type DashboardLayoutPtrOutput struct{ *pulumi.OutputState }

func (DashboardLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayout)(nil)).Elem()
}

func (o DashboardLayoutPtrOutput) ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput {
	return o
}

func (o DashboardLayoutPtrOutput) ToDashboardLayoutPtrOutputWithContext(ctx context.Context) DashboardLayoutPtrOutput {
	return o
}

func (o DashboardLayoutPtrOutput) Elem() DashboardLayoutOutput {
	return o.ApplyT(func(v *DashboardLayout) DashboardLayout { return *v }).(DashboardLayoutOutput)
}

func (o DashboardLayoutPtrOutput) Grid() DashboardLayoutGridPtrOutput {
	return o.ApplyT(func(v *DashboardLayout) *DashboardLayoutGrid {
		if v == nil {
			return nil
		}
		return v.Grid
	}).(DashboardLayoutGridPtrOutput)
}

type DashboardLayoutGrid struct {
	LayoutStructures []DashboardLayoutGridLayoutStructure `pulumi:"layoutStructures"`
}

// DashboardLayoutGridInput is an input type that accepts DashboardLayoutGridArgs and DashboardLayoutGridOutput values.
// You can construct a concrete instance of `DashboardLayoutGridInput` via:
//
//          DashboardLayoutGridArgs{...}
type DashboardLayoutGridInput interface {
	pulumi.Input

	ToDashboardLayoutGridOutput() DashboardLayoutGridOutput
	ToDashboardLayoutGridOutputWithContext(context.Context) DashboardLayoutGridOutput
}

type DashboardLayoutGridArgs struct {
	LayoutStructures DashboardLayoutGridLayoutStructureArrayInput `pulumi:"layoutStructures"`
}

func (DashboardLayoutGridArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutGrid)(nil)).Elem()
}

func (i DashboardLayoutGridArgs) ToDashboardLayoutGridOutput() DashboardLayoutGridOutput {
	return i.ToDashboardLayoutGridOutputWithContext(context.Background())
}

func (i DashboardLayoutGridArgs) ToDashboardLayoutGridOutputWithContext(ctx context.Context) DashboardLayoutGridOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridOutput)
}

func (i DashboardLayoutGridArgs) ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput {
	return i.ToDashboardLayoutGridPtrOutputWithContext(context.Background())
}

func (i DashboardLayoutGridArgs) ToDashboardLayoutGridPtrOutputWithContext(ctx context.Context) DashboardLayoutGridPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridOutput).ToDashboardLayoutGridPtrOutputWithContext(ctx)
}

// DashboardLayoutGridPtrInput is an input type that accepts DashboardLayoutGridArgs, DashboardLayoutGridPtr and DashboardLayoutGridPtrOutput values.
// You can construct a concrete instance of `DashboardLayoutGridPtrInput` via:
//
//          DashboardLayoutGridArgs{...}
//
//  or:
//
//          nil
type DashboardLayoutGridPtrInput interface {
	pulumi.Input

	ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput
	ToDashboardLayoutGridPtrOutputWithContext(context.Context) DashboardLayoutGridPtrOutput
}

type dashboardLayoutGridPtrType DashboardLayoutGridArgs

func DashboardLayoutGridPtr(v *DashboardLayoutGridArgs) DashboardLayoutGridPtrInput {
	return (*dashboardLayoutGridPtrType)(v)
}

func (*dashboardLayoutGridPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayoutGrid)(nil)).Elem()
}

func (i *dashboardLayoutGridPtrType) ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput {
	return i.ToDashboardLayoutGridPtrOutputWithContext(context.Background())
}

func (i *dashboardLayoutGridPtrType) ToDashboardLayoutGridPtrOutputWithContext(ctx context.Context) DashboardLayoutGridPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridPtrOutput)
}

type DashboardLayoutGridOutput struct{ *pulumi.OutputState }

func (DashboardLayoutGridOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutGrid)(nil)).Elem()
}

func (o DashboardLayoutGridOutput) ToDashboardLayoutGridOutput() DashboardLayoutGridOutput {
	return o
}

func (o DashboardLayoutGridOutput) ToDashboardLayoutGridOutputWithContext(ctx context.Context) DashboardLayoutGridOutput {
	return o
}

func (o DashboardLayoutGridOutput) ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput {
	return o.ToDashboardLayoutGridPtrOutputWithContext(context.Background())
}

func (o DashboardLayoutGridOutput) ToDashboardLayoutGridPtrOutputWithContext(ctx context.Context) DashboardLayoutGridPtrOutput {
	return o.ApplyT(func(v DashboardLayoutGrid) *DashboardLayoutGrid {
		return &v
	}).(DashboardLayoutGridPtrOutput)
}
func (o DashboardLayoutGridOutput) LayoutStructures() DashboardLayoutGridLayoutStructureArrayOutput {
	return o.ApplyT(func(v DashboardLayoutGrid) []DashboardLayoutGridLayoutStructure { return v.LayoutStructures }).(DashboardLayoutGridLayoutStructureArrayOutput)
}

type DashboardLayoutGridPtrOutput struct{ *pulumi.OutputState }

func (DashboardLayoutGridPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayoutGrid)(nil)).Elem()
}

func (o DashboardLayoutGridPtrOutput) ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput {
	return o
}

func (o DashboardLayoutGridPtrOutput) ToDashboardLayoutGridPtrOutputWithContext(ctx context.Context) DashboardLayoutGridPtrOutput {
	return o
}

func (o DashboardLayoutGridPtrOutput) Elem() DashboardLayoutGridOutput {
	return o.ApplyT(func(v *DashboardLayoutGrid) DashboardLayoutGrid { return *v }).(DashboardLayoutGridOutput)
}

func (o DashboardLayoutGridPtrOutput) LayoutStructures() DashboardLayoutGridLayoutStructureArrayOutput {
	return o.ApplyT(func(v *DashboardLayoutGrid) []DashboardLayoutGridLayoutStructure {
		if v == nil {
			return nil
		}
		return v.LayoutStructures
	}).(DashboardLayoutGridLayoutStructureArrayOutput)
}

type DashboardLayoutGridLayoutStructure struct {
	Key       string `pulumi:"key"`
	Structure string `pulumi:"structure"`
}

// DashboardLayoutGridLayoutStructureInput is an input type that accepts DashboardLayoutGridLayoutStructureArgs and DashboardLayoutGridLayoutStructureOutput values.
// You can construct a concrete instance of `DashboardLayoutGridLayoutStructureInput` via:
//
//          DashboardLayoutGridLayoutStructureArgs{...}
type DashboardLayoutGridLayoutStructureInput interface {
	pulumi.Input

	ToDashboardLayoutGridLayoutStructureOutput() DashboardLayoutGridLayoutStructureOutput
	ToDashboardLayoutGridLayoutStructureOutputWithContext(context.Context) DashboardLayoutGridLayoutStructureOutput
}

type DashboardLayoutGridLayoutStructureArgs struct {
	Key       pulumi.StringInput `pulumi:"key"`
	Structure pulumi.StringInput `pulumi:"structure"`
}

func (DashboardLayoutGridLayoutStructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutGridLayoutStructure)(nil)).Elem()
}

func (i DashboardLayoutGridLayoutStructureArgs) ToDashboardLayoutGridLayoutStructureOutput() DashboardLayoutGridLayoutStructureOutput {
	return i.ToDashboardLayoutGridLayoutStructureOutputWithContext(context.Background())
}

func (i DashboardLayoutGridLayoutStructureArgs) ToDashboardLayoutGridLayoutStructureOutputWithContext(ctx context.Context) DashboardLayoutGridLayoutStructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridLayoutStructureOutput)
}

// DashboardLayoutGridLayoutStructureArrayInput is an input type that accepts DashboardLayoutGridLayoutStructureArray and DashboardLayoutGridLayoutStructureArrayOutput values.
// You can construct a concrete instance of `DashboardLayoutGridLayoutStructureArrayInput` via:
//
//          DashboardLayoutGridLayoutStructureArray{ DashboardLayoutGridLayoutStructureArgs{...} }
type DashboardLayoutGridLayoutStructureArrayInput interface {
	pulumi.Input

	ToDashboardLayoutGridLayoutStructureArrayOutput() DashboardLayoutGridLayoutStructureArrayOutput
	ToDashboardLayoutGridLayoutStructureArrayOutputWithContext(context.Context) DashboardLayoutGridLayoutStructureArrayOutput
}

type DashboardLayoutGridLayoutStructureArray []DashboardLayoutGridLayoutStructureInput

func (DashboardLayoutGridLayoutStructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLayoutGridLayoutStructure)(nil)).Elem()
}

func (i DashboardLayoutGridLayoutStructureArray) ToDashboardLayoutGridLayoutStructureArrayOutput() DashboardLayoutGridLayoutStructureArrayOutput {
	return i.ToDashboardLayoutGridLayoutStructureArrayOutputWithContext(context.Background())
}

func (i DashboardLayoutGridLayoutStructureArray) ToDashboardLayoutGridLayoutStructureArrayOutputWithContext(ctx context.Context) DashboardLayoutGridLayoutStructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridLayoutStructureArrayOutput)
}

type DashboardLayoutGridLayoutStructureOutput struct{ *pulumi.OutputState }

func (DashboardLayoutGridLayoutStructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutGridLayoutStructure)(nil)).Elem()
}

func (o DashboardLayoutGridLayoutStructureOutput) ToDashboardLayoutGridLayoutStructureOutput() DashboardLayoutGridLayoutStructureOutput {
	return o
}

func (o DashboardLayoutGridLayoutStructureOutput) ToDashboardLayoutGridLayoutStructureOutputWithContext(ctx context.Context) DashboardLayoutGridLayoutStructureOutput {
	return o
}

func (o DashboardLayoutGridLayoutStructureOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardLayoutGridLayoutStructure) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardLayoutGridLayoutStructureOutput) Structure() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardLayoutGridLayoutStructure) string { return v.Structure }).(pulumi.StringOutput)
}

type DashboardLayoutGridLayoutStructureArrayOutput struct{ *pulumi.OutputState }

func (DashboardLayoutGridLayoutStructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLayoutGridLayoutStructure)(nil)).Elem()
}

func (o DashboardLayoutGridLayoutStructureArrayOutput) ToDashboardLayoutGridLayoutStructureArrayOutput() DashboardLayoutGridLayoutStructureArrayOutput {
	return o
}

func (o DashboardLayoutGridLayoutStructureArrayOutput) ToDashboardLayoutGridLayoutStructureArrayOutputWithContext(ctx context.Context) DashboardLayoutGridLayoutStructureArrayOutput {
	return o
}

func (o DashboardLayoutGridLayoutStructureArrayOutput) Index(i pulumi.IntInput) DashboardLayoutGridLayoutStructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardLayoutGridLayoutStructure {
		return vs[0].([]DashboardLayoutGridLayoutStructure)[vs[1].(int)]
	}).(DashboardLayoutGridLayoutStructureOutput)
}

type DashboardPanel struct {
	SumoSearchPanel *DashboardPanelSumoSearchPanel `pulumi:"sumoSearchPanel"`
	TextPanel       *DashboardPanelTextPanel       `pulumi:"textPanel"`
}

// DashboardPanelInput is an input type that accepts DashboardPanelArgs and DashboardPanelOutput values.
// You can construct a concrete instance of `DashboardPanelInput` via:
//
//          DashboardPanelArgs{...}
type DashboardPanelInput interface {
	pulumi.Input

	ToDashboardPanelOutput() DashboardPanelOutput
	ToDashboardPanelOutputWithContext(context.Context) DashboardPanelOutput
}

type DashboardPanelArgs struct {
	SumoSearchPanel DashboardPanelSumoSearchPanelPtrInput `pulumi:"sumoSearchPanel"`
	TextPanel       DashboardPanelTextPanelPtrInput       `pulumi:"textPanel"`
}

func (DashboardPanelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanel)(nil)).Elem()
}

func (i DashboardPanelArgs) ToDashboardPanelOutput() DashboardPanelOutput {
	return i.ToDashboardPanelOutputWithContext(context.Background())
}

func (i DashboardPanelArgs) ToDashboardPanelOutputWithContext(ctx context.Context) DashboardPanelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelOutput)
}

// DashboardPanelArrayInput is an input type that accepts DashboardPanelArray and DashboardPanelArrayOutput values.
// You can construct a concrete instance of `DashboardPanelArrayInput` via:
//
//          DashboardPanelArray{ DashboardPanelArgs{...} }
type DashboardPanelArrayInput interface {
	pulumi.Input

	ToDashboardPanelArrayOutput() DashboardPanelArrayOutput
	ToDashboardPanelArrayOutputWithContext(context.Context) DashboardPanelArrayOutput
}

type DashboardPanelArray []DashboardPanelInput

func (DashboardPanelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanel)(nil)).Elem()
}

func (i DashboardPanelArray) ToDashboardPanelArrayOutput() DashboardPanelArrayOutput {
	return i.ToDashboardPanelArrayOutputWithContext(context.Background())
}

func (i DashboardPanelArray) ToDashboardPanelArrayOutputWithContext(ctx context.Context) DashboardPanelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelArrayOutput)
}

type DashboardPanelOutput struct{ *pulumi.OutputState }

func (DashboardPanelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanel)(nil)).Elem()
}

func (o DashboardPanelOutput) ToDashboardPanelOutput() DashboardPanelOutput {
	return o
}

func (o DashboardPanelOutput) ToDashboardPanelOutputWithContext(ctx context.Context) DashboardPanelOutput {
	return o
}

func (o DashboardPanelOutput) SumoSearchPanel() DashboardPanelSumoSearchPanelPtrOutput {
	return o.ApplyT(func(v DashboardPanel) *DashboardPanelSumoSearchPanel { return v.SumoSearchPanel }).(DashboardPanelSumoSearchPanelPtrOutput)
}

func (o DashboardPanelOutput) TextPanel() DashboardPanelTextPanelPtrOutput {
	return o.ApplyT(func(v DashboardPanel) *DashboardPanelTextPanel { return v.TextPanel }).(DashboardPanelTextPanelPtrOutput)
}

type DashboardPanelArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanel)(nil)).Elem()
}

func (o DashboardPanelArrayOutput) ToDashboardPanelArrayOutput() DashboardPanelArrayOutput {
	return o
}

func (o DashboardPanelArrayOutput) ToDashboardPanelArrayOutputWithContext(ctx context.Context) DashboardPanelArrayOutput {
	return o
}

func (o DashboardPanelArrayOutput) Index(i pulumi.IntInput) DashboardPanelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanel {
		return vs[0].([]DashboardPanel)[vs[1].(int)]
	}).(DashboardPanelOutput)
}

type DashboardPanelSumoSearchPanel struct {
	ColoringRule                           *DashboardPanelSumoSearchPanelColoringRule    `pulumi:"coloringRule"`
	Description                            *string                                       `pulumi:"description"`
	Id                                     *string                                       `pulumi:"id"`
	KeepVisualSettingsConsistentWithParent *bool                                         `pulumi:"keepVisualSettingsConsistentWithParent"`
	Key                                    string                                        `pulumi:"key"`
	LinkedDashboard                        *DashboardPanelSumoSearchPanelLinkedDashboard `pulumi:"linkedDashboard"`
	Queries                                []DashboardPanelSumoSearchPanelQuery          `pulumi:"queries"`
	TimeRange                              *DashboardPanelSumoSearchPanelTimeRange       `pulumi:"timeRange"`
	Title                                  *string                                       `pulumi:"title"`
	VisualSettings                         *string                                       `pulumi:"visualSettings"`
}

// DashboardPanelSumoSearchPanelInput is an input type that accepts DashboardPanelSumoSearchPanelArgs and DashboardPanelSumoSearchPanelOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelInput` via:
//
//          DashboardPanelSumoSearchPanelArgs{...}
type DashboardPanelSumoSearchPanelInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelOutput() DashboardPanelSumoSearchPanelOutput
	ToDashboardPanelSumoSearchPanelOutputWithContext(context.Context) DashboardPanelSumoSearchPanelOutput
}

type DashboardPanelSumoSearchPanelArgs struct {
	ColoringRule                           DashboardPanelSumoSearchPanelColoringRulePtrInput    `pulumi:"coloringRule"`
	Description                            pulumi.StringPtrInput                                `pulumi:"description"`
	Id                                     pulumi.StringPtrInput                                `pulumi:"id"`
	KeepVisualSettingsConsistentWithParent pulumi.BoolPtrInput                                  `pulumi:"keepVisualSettingsConsistentWithParent"`
	Key                                    pulumi.StringInput                                   `pulumi:"key"`
	LinkedDashboard                        DashboardPanelSumoSearchPanelLinkedDashboardPtrInput `pulumi:"linkedDashboard"`
	Queries                                DashboardPanelSumoSearchPanelQueryArrayInput         `pulumi:"queries"`
	TimeRange                              DashboardPanelSumoSearchPanelTimeRangePtrInput       `pulumi:"timeRange"`
	Title                                  pulumi.StringPtrInput                                `pulumi:"title"`
	VisualSettings                         pulumi.StringPtrInput                                `pulumi:"visualSettings"`
}

func (DashboardPanelSumoSearchPanelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanel)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelArgs) ToDashboardPanelSumoSearchPanelOutput() DashboardPanelSumoSearchPanelOutput {
	return i.ToDashboardPanelSumoSearchPanelOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelArgs) ToDashboardPanelSumoSearchPanelOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelOutput)
}

func (i DashboardPanelSumoSearchPanelArgs) ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelArgs) ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelOutput).ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelPtrInput is an input type that accepts DashboardPanelSumoSearchPanelArgs, DashboardPanelSumoSearchPanelPtr and DashboardPanelSumoSearchPanelPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelPtrInput` via:
//
//          DashboardPanelSumoSearchPanelArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput
	ToDashboardPanelSumoSearchPanelPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelPtrOutput
}

type dashboardPanelSumoSearchPanelPtrType DashboardPanelSumoSearchPanelArgs

func DashboardPanelSumoSearchPanelPtr(v *DashboardPanelSumoSearchPanelArgs) DashboardPanelSumoSearchPanelPtrInput {
	return (*dashboardPanelSumoSearchPanelPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanel)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelPtrType) ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelPtrType) ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelPtrOutput)
}

type DashboardPanelSumoSearchPanelOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanel)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelOutput) ToDashboardPanelSumoSearchPanelOutput() DashboardPanelSumoSearchPanelOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelOutput) ToDashboardPanelSumoSearchPanelOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelOutput) ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelOutput) ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanel {
		return &v
	}).(DashboardPanelSumoSearchPanelPtrOutput)
}
func (o DashboardPanelSumoSearchPanelOutput) ColoringRule() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelColoringRule {
		return v.ColoringRule
	}).(DashboardPanelSumoSearchPanelColoringRulePtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) KeepVisualSettingsConsistentWithParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *bool { return v.KeepVisualSettingsConsistentWithParent }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) LinkedDashboard() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelLinkedDashboard {
		return v.LinkedDashboard
	}).(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) Queries() DashboardPanelSumoSearchPanelQueryArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) []DashboardPanelSumoSearchPanelQuery { return v.Queries }).(DashboardPanelSumoSearchPanelQueryArrayOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) TimeRange() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelTimeRange { return v.TimeRange }).(DashboardPanelSumoSearchPanelTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) VisualSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *string { return v.VisualSettings }).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanel)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelPtrOutput) ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelPtrOutput) ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Elem() DashboardPanelSumoSearchPanelOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) DashboardPanelSumoSearchPanel { return *v }).(DashboardPanelSumoSearchPanelOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) ColoringRule() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelColoringRule {
		if v == nil {
			return nil
		}
		return v.ColoringRule
	}).(DashboardPanelSumoSearchPanelColoringRulePtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) KeepVisualSettingsConsistentWithParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *bool {
		if v == nil {
			return nil
		}
		return v.KeepVisualSettingsConsistentWithParent
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) LinkedDashboard() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelLinkedDashboard {
		if v == nil {
			return nil
		}
		return v.LinkedDashboard
	}).(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Queries() DashboardPanelSumoSearchPanelQueryArrayOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) []DashboardPanelSumoSearchPanelQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(DashboardPanelSumoSearchPanelQueryArrayOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) TimeRange() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelTimeRange {
		if v == nil {
			return nil
		}
		return v.TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) VisualSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return v.VisualSettings
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelColoringRule struct {
	ColorThresholds                 []DashboardPanelSumoSearchPanelColoringRuleColorThreshold `pulumi:"colorThresholds"`
	MultipleSeriesAggregateFunction string                                                    `pulumi:"multipleSeriesAggregateFunction"`
	Scope                           string                                                    `pulumi:"scope"`
	SingleSeriesAggregateFunction   string                                                    `pulumi:"singleSeriesAggregateFunction"`
}

// DashboardPanelSumoSearchPanelColoringRuleInput is an input type that accepts DashboardPanelSumoSearchPanelColoringRuleArgs and DashboardPanelSumoSearchPanelColoringRuleOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelColoringRuleInput` via:
//
//          DashboardPanelSumoSearchPanelColoringRuleArgs{...}
type DashboardPanelSumoSearchPanelColoringRuleInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelColoringRuleOutput() DashboardPanelSumoSearchPanelColoringRuleOutput
	ToDashboardPanelSumoSearchPanelColoringRuleOutputWithContext(context.Context) DashboardPanelSumoSearchPanelColoringRuleOutput
}

type DashboardPanelSumoSearchPanelColoringRuleArgs struct {
	ColorThresholds                 DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput `pulumi:"colorThresholds"`
	MultipleSeriesAggregateFunction pulumi.StringInput                                                `pulumi:"multipleSeriesAggregateFunction"`
	Scope                           pulumi.StringInput                                                `pulumi:"scope"`
	SingleSeriesAggregateFunction   pulumi.StringInput                                                `pulumi:"singleSeriesAggregateFunction"`
}

func (DashboardPanelSumoSearchPanelColoringRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRule)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelColoringRuleArgs) ToDashboardPanelSumoSearchPanelColoringRuleOutput() DashboardPanelSumoSearchPanelColoringRuleOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRuleOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelColoringRuleArgs) ToDashboardPanelSumoSearchPanelColoringRuleOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRuleOutput)
}

func (i DashboardPanelSumoSearchPanelColoringRuleArgs) ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelColoringRuleArgs) ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRuleOutput).ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelColoringRulePtrInput is an input type that accepts DashboardPanelSumoSearchPanelColoringRuleArgs, DashboardPanelSumoSearchPanelColoringRulePtr and DashboardPanelSumoSearchPanelColoringRulePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelColoringRulePtrInput` via:
//
//          DashboardPanelSumoSearchPanelColoringRuleArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelColoringRulePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput
	ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput
}

type dashboardPanelSumoSearchPanelColoringRulePtrType DashboardPanelSumoSearchPanelColoringRuleArgs

func DashboardPanelSumoSearchPanelColoringRulePtr(v *DashboardPanelSumoSearchPanelColoringRuleArgs) DashboardPanelSumoSearchPanelColoringRulePtrInput {
	return (*dashboardPanelSumoSearchPanelColoringRulePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelColoringRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelColoringRule)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelColoringRulePtrType) ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelColoringRulePtrType) ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRulePtrOutput)
}

type DashboardPanelSumoSearchPanelColoringRuleOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelColoringRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRule)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ToDashboardPanelSumoSearchPanelColoringRuleOutput() DashboardPanelSumoSearchPanelColoringRuleOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ToDashboardPanelSumoSearchPanelColoringRuleOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) *DashboardPanelSumoSearchPanelColoringRule {
		return &v
	}).(DashboardPanelSumoSearchPanelColoringRulePtrOutput)
}
func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ColorThresholds() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) []DashboardPanelSumoSearchPanelColoringRuleColorThreshold {
		return v.ColorThresholds
	}).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) MultipleSeriesAggregateFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) string { return v.MultipleSeriesAggregateFunction }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) string { return v.Scope }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) SingleSeriesAggregateFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) string { return v.SingleSeriesAggregateFunction }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelColoringRulePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelColoringRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelColoringRule)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) Elem() DashboardPanelSumoSearchPanelColoringRuleOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) DashboardPanelSumoSearchPanelColoringRule {
		return *v
	}).(DashboardPanelSumoSearchPanelColoringRuleOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) ColorThresholds() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) []DashboardPanelSumoSearchPanelColoringRuleColorThreshold {
		if v == nil {
			return nil
		}
		return v.ColorThresholds
	}).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) MultipleSeriesAggregateFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) *string {
		if v == nil {
			return nil
		}
		return &v.MultipleSeriesAggregateFunction
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) SingleSeriesAggregateFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) *string {
		if v == nil {
			return nil
		}
		return &v.SingleSeriesAggregateFunction
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelColoringRuleColorThreshold struct {
	Color string   `pulumi:"color"`
	Max   *float64 `pulumi:"max"`
	Min   *float64 `pulumi:"min"`
}

// DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput is an input type that accepts DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs and DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput` via:
//
//          DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs{...}
type DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput
	ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutputWithContext(context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput
}

type DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs struct {
	Color pulumi.StringInput     `pulumi:"color"`
	Max   pulumi.Float64PtrInput `pulumi:"max"`
	Min   pulumi.Float64PtrInput `pulumi:"min"`
}

func (DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRuleColorThreshold)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput)
}

// DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput is an input type that accepts DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray and DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput` via:
//
//          DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray{ DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs{...} }
type DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput
	ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput
}

type DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray []DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput

func (DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelColoringRuleColorThreshold)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput)
}

type DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRuleColorThreshold)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRuleColorThreshold) string { return v.Color }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRuleColorThreshold) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRuleColorThreshold) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelColoringRuleColorThreshold)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelColoringRuleColorThreshold {
		return vs[0].([]DashboardPanelSumoSearchPanelColoringRuleColorThreshold)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput)
}

type DashboardPanelSumoSearchPanelLinkedDashboard struct {
	Id               string  `pulumi:"id"`
	IncludeTimeRange *bool   `pulumi:"includeTimeRange"`
	IncludeVariables *bool   `pulumi:"includeVariables"`
	RelativePath     *string `pulumi:"relativePath"`
}

// DashboardPanelSumoSearchPanelLinkedDashboardInput is an input type that accepts DashboardPanelSumoSearchPanelLinkedDashboardArgs and DashboardPanelSumoSearchPanelLinkedDashboardOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelLinkedDashboardInput` via:
//
//          DashboardPanelSumoSearchPanelLinkedDashboardArgs{...}
type DashboardPanelSumoSearchPanelLinkedDashboardInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelLinkedDashboardOutput() DashboardPanelSumoSearchPanelLinkedDashboardOutput
	ToDashboardPanelSumoSearchPanelLinkedDashboardOutputWithContext(context.Context) DashboardPanelSumoSearchPanelLinkedDashboardOutput
}

type DashboardPanelSumoSearchPanelLinkedDashboardArgs struct {
	Id               pulumi.StringInput    `pulumi:"id"`
	IncludeTimeRange pulumi.BoolPtrInput   `pulumi:"includeTimeRange"`
	IncludeVariables pulumi.BoolPtrInput   `pulumi:"includeVariables"`
	RelativePath     pulumi.StringPtrInput `pulumi:"relativePath"`
}

func (DashboardPanelSumoSearchPanelLinkedDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelLinkedDashboard)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelLinkedDashboardArgs) ToDashboardPanelSumoSearchPanelLinkedDashboardOutput() DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return i.ToDashboardPanelSumoSearchPanelLinkedDashboardOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelLinkedDashboardArgs) ToDashboardPanelSumoSearchPanelLinkedDashboardOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelLinkedDashboardOutput)
}

func (i DashboardPanelSumoSearchPanelLinkedDashboardArgs) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelLinkedDashboardArgs) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelLinkedDashboardOutput).ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelLinkedDashboardPtrInput is an input type that accepts DashboardPanelSumoSearchPanelLinkedDashboardArgs, DashboardPanelSumoSearchPanelLinkedDashboardPtr and DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelLinkedDashboardPtrInput` via:
//
//          DashboardPanelSumoSearchPanelLinkedDashboardArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelLinkedDashboardPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput
	ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput
}

type dashboardPanelSumoSearchPanelLinkedDashboardPtrType DashboardPanelSumoSearchPanelLinkedDashboardArgs

func DashboardPanelSumoSearchPanelLinkedDashboardPtr(v *DashboardPanelSumoSearchPanelLinkedDashboardArgs) DashboardPanelSumoSearchPanelLinkedDashboardPtrInput {
	return (*dashboardPanelSumoSearchPanelLinkedDashboardPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelLinkedDashboardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelLinkedDashboard)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelLinkedDashboardPtrType) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelLinkedDashboardPtrType) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput)
}

type DashboardPanelSumoSearchPanelLinkedDashboardOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelLinkedDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelLinkedDashboard)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardOutput() DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) *DashboardPanelSumoSearchPanelLinkedDashboard {
		return &v
	}).(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput)
}
func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) string { return v.Id }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) IncludeTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) *bool { return v.IncludeTimeRange }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) IncludeVariables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) *bool { return v.IncludeVariables }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelLinkedDashboard)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) Elem() DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) DashboardPanelSumoSearchPanelLinkedDashboard {
		return *v
	}).(DashboardPanelSumoSearchPanelLinkedDashboardOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) IncludeTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeTimeRange
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) IncludeVariables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeVariables
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelQuery struct {
	MetricsQueryData *DashboardPanelSumoSearchPanelQueryMetricsQueryData `pulumi:"metricsQueryData"`
	MetricsQueryMode *string                                             `pulumi:"metricsQueryMode"`
	QueryKey         string                                              `pulumi:"queryKey"`
	QueryString      string                                              `pulumi:"queryString"`
	QueryType        string                                              `pulumi:"queryType"`
}

// DashboardPanelSumoSearchPanelQueryInput is an input type that accepts DashboardPanelSumoSearchPanelQueryArgs and DashboardPanelSumoSearchPanelQueryOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryInput` via:
//
//          DashboardPanelSumoSearchPanelQueryArgs{...}
type DashboardPanelSumoSearchPanelQueryInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryOutput() DashboardPanelSumoSearchPanelQueryOutput
	ToDashboardPanelSumoSearchPanelQueryOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryOutput
}

type DashboardPanelSumoSearchPanelQueryArgs struct {
	MetricsQueryData DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput `pulumi:"metricsQueryData"`
	MetricsQueryMode pulumi.StringPtrInput                                      `pulumi:"metricsQueryMode"`
	QueryKey         pulumi.StringInput                                         `pulumi:"queryKey"`
	QueryString      pulumi.StringInput                                         `pulumi:"queryString"`
	QueryType        pulumi.StringInput                                         `pulumi:"queryType"`
}

func (DashboardPanelSumoSearchPanelQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQuery)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryArgs) ToDashboardPanelSumoSearchPanelQueryOutput() DashboardPanelSumoSearchPanelQueryOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryArgs) ToDashboardPanelSumoSearchPanelQueryOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryOutput)
}

// DashboardPanelSumoSearchPanelQueryArrayInput is an input type that accepts DashboardPanelSumoSearchPanelQueryArray and DashboardPanelSumoSearchPanelQueryArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryArrayInput` via:
//
//          DashboardPanelSumoSearchPanelQueryArray{ DashboardPanelSumoSearchPanelQueryArgs{...} }
type DashboardPanelSumoSearchPanelQueryArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryArrayOutput() DashboardPanelSumoSearchPanelQueryArrayOutput
	ToDashboardPanelSumoSearchPanelQueryArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryArrayOutput
}

type DashboardPanelSumoSearchPanelQueryArray []DashboardPanelSumoSearchPanelQueryInput

func (DashboardPanelSumoSearchPanelQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQuery)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryArray) ToDashboardPanelSumoSearchPanelQueryArrayOutput() DashboardPanelSumoSearchPanelQueryArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryArray) ToDashboardPanelSumoSearchPanelQueryArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQuery)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryOutput) ToDashboardPanelSumoSearchPanelQueryOutput() DashboardPanelSumoSearchPanelQueryOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryOutput) ToDashboardPanelSumoSearchPanelQueryOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryOutput) MetricsQueryData() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) *DashboardPanelSumoSearchPanelQueryMetricsQueryData {
		return v.MetricsQueryData
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryOutput) MetricsQueryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) *string { return v.MetricsQueryMode }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryOutput) QueryKey() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) string { return v.QueryKey }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) string { return v.QueryString }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) string { return v.QueryType }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelQueryArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQuery)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryArrayOutput) ToDashboardPanelSumoSearchPanelQueryArrayOutput() DashboardPanelSumoSearchPanelQueryArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryArrayOutput) ToDashboardPanelSumoSearchPanelQueryArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelQuery {
		return vs[0].([]DashboardPanelSumoSearchPanelQuery)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelQueryOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryData struct {
	AggregationType *string                                                      `pulumi:"aggregationType"`
	Filters         []DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter   `pulumi:"filters"`
	GroupBy         *string                                                      `pulumi:"groupBy"`
	Metric          string                                                       `pulumi:"metric"`
	Operators       []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator `pulumi:"operators"`
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs{...}
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs struct {
	AggregationType pulumi.StringPtrInput                                                `pulumi:"aggregationType"`
	Filters         DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput   `pulumi:"filters"`
	GroupBy         pulumi.StringPtrInput                                                `pulumi:"groupBy"`
	Metric          pulumi.StringInput                                                   `pulumi:"metric"`
	Operators       DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput `pulumi:"operators"`
}

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryData)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput)
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput).ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs, DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtr and DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput
}

type dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs

func DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtr(v *DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput {
	return (*dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelQueryMetricsQueryData)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryData)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) *DashboardPanelSumoSearchPanelQueryMetricsQueryData {
		return &v
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput)
}
func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string { return v.AggregationType }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) Filters() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter {
		return v.Filters
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string { return v.GroupBy }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) string { return v.Metric }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) Operators() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator {
		return v.Operators
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelQueryMetricsQueryData)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) Elem() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) DashboardPanelSumoSearchPanelQueryMetricsQueryData {
		return *v
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string {
		if v == nil {
			return nil
		}
		return v.AggregationType
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) Filters() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string {
		if v == nil {
			return nil
		}
		return &v.Metric
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) Operators() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator {
		if v == nil {
			return nil
		}
		return v.Operators
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter struct {
	Key      string `pulumi:"key"`
	Negation *bool  `pulumi:"negation"`
	Value    string `pulumi:"value"`
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs and DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs{...}
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs struct {
	Key      pulumi.StringInput  `pulumi:"key"`
	Negation pulumi.BoolPtrInput `pulumi:"negation"`
	Value    pulumi.StringInput  `pulumi:"value"`
}

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput)
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray and DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray{ DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs{...} }
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray []DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) Negation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter) *bool { return v.Negation }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter) string { return v.Value }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter {
		return vs[0].([]DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator struct {
	OperatorName string                                                                `pulumi:"operatorName"`
	Parameters   []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter `pulumi:"parameters"`
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs{...}
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs struct {
	OperatorName pulumi.StringInput                                                            `pulumi:"operatorName"`
	Parameters   DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput `pulumi:"parameters"`
}

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput)
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray{ DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs{...} }
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) OperatorName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator) string { return v.OperatorName }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) Parameters() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter {
		return v.Parameters
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator {
		return vs[0].([]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs{...}
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput)
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray{ DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs{...} }
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter) string { return v.Value }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter {
		return vs[0].([]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput)
}

type DashboardPanelSumoSearchPanelTimeRange struct {
	BeginBoundedTimeRange    *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange    `pulumi:"beginBoundedTimeRange"`
	CompleteLiteralTimeRange *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange `pulumi:"completeLiteralTimeRange"`
}

// DashboardPanelSumoSearchPanelTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeArgs struct {
	BeginBoundedTimeRange    DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput    `pulumi:"beginBoundedTimeRange"`
	CompleteLiteralTimeRange DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput `pulumi:"completeLiteralTimeRange"`
}

func (DashboardPanelSumoSearchPanelTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeOutput) BeginBoundedTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
		return v.BeginBoundedTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) CompleteLiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
		return v.CompleteLiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRange) DashboardPanelSumoSearchPanelTimeRange { return *v }).(DashboardPanelSumoSearchPanelTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) BeginBoundedTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
		if v == nil {
			return nil
		}
		return v.BeginBoundedTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) CompleteLiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.CompleteLiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange struct {
	From DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom `pulumi:"from"`
	To   *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo  `pulumi:"to"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs struct {
	From DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput  `pulumi:"from"`
	To   DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput `pulumi:"to"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) From() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
		return v.From
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) To() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
		return v.To
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) From() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
		if v == nil {
			return nil
		}
		return &v.From
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) To() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
		if v == nil {
			return nil
		}
		return v.To
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom struct {
	EpochTimeRange    *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange  `pulumi:"literalTimeRange"`
	RelativeTimeRange *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs struct {
	EpochTimeRange    DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput  `pulumi:"literalTimeRange"`
	RelativeTimeRange DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) EpochTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return v.EpochTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) Iso8601TimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) LiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return v.LiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) RelativeTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return v.RelativeTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) EpochTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) Iso8601TimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) LiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) RelativeTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange struct {
	EpochMillis int `pulumi:"epochMillis"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs struct {
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) int {
		return v.EpochMillis
	}).(pulumi.IntOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange struct {
	Iso8601Time string `pulumi:"iso8601Time"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs struct {
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) string {
		return v.Iso8601Time
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) string {
		return v.RangeName
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange struct {
	RelativeTime string `pulumi:"relativeTime"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs struct {
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) string {
		return v.RelativeTime
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo struct {
	EpochTimeRange    *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange  `pulumi:"literalTimeRange"`
	RelativeTimeRange *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs struct {
	EpochTimeRange    DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput  `pulumi:"literalTimeRange"`
	RelativeTimeRange DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) EpochTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return v.EpochTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) Iso8601TimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) LiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return v.LiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) RelativeTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return v.RelativeTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) EpochTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) Iso8601TimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) LiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) RelativeTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange struct {
	EpochMillis int `pulumi:"epochMillis"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs struct {
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange) int {
		return v.EpochMillis
	}).(pulumi.IntOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange struct {
	Iso8601Time string `pulumi:"iso8601Time"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs struct {
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) string {
		return v.Iso8601Time
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) string {
		return v.RangeName
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange struct {
	RelativeTime string `pulumi:"relativeTime"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs struct {
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) string {
		return v.RelativeTime
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange) *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput)
}
func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
		return *v
	}).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelTextPanel struct {
	Id                                     *string `pulumi:"id"`
	KeepVisualSettingsConsistentWithParent *bool   `pulumi:"keepVisualSettingsConsistentWithParent"`
	Key                                    string  `pulumi:"key"`
	Text                                   *string `pulumi:"text"`
	Title                                  *string `pulumi:"title"`
	VisualSettings                         *string `pulumi:"visualSettings"`
}

// DashboardPanelTextPanelInput is an input type that accepts DashboardPanelTextPanelArgs and DashboardPanelTextPanelOutput values.
// You can construct a concrete instance of `DashboardPanelTextPanelInput` via:
//
//          DashboardPanelTextPanelArgs{...}
type DashboardPanelTextPanelInput interface {
	pulumi.Input

	ToDashboardPanelTextPanelOutput() DashboardPanelTextPanelOutput
	ToDashboardPanelTextPanelOutputWithContext(context.Context) DashboardPanelTextPanelOutput
}

type DashboardPanelTextPanelArgs struct {
	Id                                     pulumi.StringPtrInput `pulumi:"id"`
	KeepVisualSettingsConsistentWithParent pulumi.BoolPtrInput   `pulumi:"keepVisualSettingsConsistentWithParent"`
	Key                                    pulumi.StringInput    `pulumi:"key"`
	Text                                   pulumi.StringPtrInput `pulumi:"text"`
	Title                                  pulumi.StringPtrInput `pulumi:"title"`
	VisualSettings                         pulumi.StringPtrInput `pulumi:"visualSettings"`
}

func (DashboardPanelTextPanelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelTextPanel)(nil)).Elem()
}

func (i DashboardPanelTextPanelArgs) ToDashboardPanelTextPanelOutput() DashboardPanelTextPanelOutput {
	return i.ToDashboardPanelTextPanelOutputWithContext(context.Background())
}

func (i DashboardPanelTextPanelArgs) ToDashboardPanelTextPanelOutputWithContext(ctx context.Context) DashboardPanelTextPanelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTextPanelOutput)
}

func (i DashboardPanelTextPanelArgs) ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput {
	return i.ToDashboardPanelTextPanelPtrOutputWithContext(context.Background())
}

func (i DashboardPanelTextPanelArgs) ToDashboardPanelTextPanelPtrOutputWithContext(ctx context.Context) DashboardPanelTextPanelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTextPanelOutput).ToDashboardPanelTextPanelPtrOutputWithContext(ctx)
}

// DashboardPanelTextPanelPtrInput is an input type that accepts DashboardPanelTextPanelArgs, DashboardPanelTextPanelPtr and DashboardPanelTextPanelPtrOutput values.
// You can construct a concrete instance of `DashboardPanelTextPanelPtrInput` via:
//
//          DashboardPanelTextPanelArgs{...}
//
//  or:
//
//          nil
type DashboardPanelTextPanelPtrInput interface {
	pulumi.Input

	ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput
	ToDashboardPanelTextPanelPtrOutputWithContext(context.Context) DashboardPanelTextPanelPtrOutput
}

type dashboardPanelTextPanelPtrType DashboardPanelTextPanelArgs

func DashboardPanelTextPanelPtr(v *DashboardPanelTextPanelArgs) DashboardPanelTextPanelPtrInput {
	return (*dashboardPanelTextPanelPtrType)(v)
}

func (*dashboardPanelTextPanelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelTextPanel)(nil)).Elem()
}

func (i *dashboardPanelTextPanelPtrType) ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput {
	return i.ToDashboardPanelTextPanelPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelTextPanelPtrType) ToDashboardPanelTextPanelPtrOutputWithContext(ctx context.Context) DashboardPanelTextPanelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTextPanelPtrOutput)
}

type DashboardPanelTextPanelOutput struct{ *pulumi.OutputState }

func (DashboardPanelTextPanelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelTextPanel)(nil)).Elem()
}

func (o DashboardPanelTextPanelOutput) ToDashboardPanelTextPanelOutput() DashboardPanelTextPanelOutput {
	return o
}

func (o DashboardPanelTextPanelOutput) ToDashboardPanelTextPanelOutputWithContext(ctx context.Context) DashboardPanelTextPanelOutput {
	return o
}

func (o DashboardPanelTextPanelOutput) ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput {
	return o.ToDashboardPanelTextPanelPtrOutputWithContext(context.Background())
}

func (o DashboardPanelTextPanelOutput) ToDashboardPanelTextPanelPtrOutputWithContext(ctx context.Context) DashboardPanelTextPanelPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *DashboardPanelTextPanel {
		return &v
	}).(DashboardPanelTextPanelPtrOutput)
}
func (o DashboardPanelTextPanelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelOutput) KeepVisualSettingsConsistentWithParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *bool { return v.KeepVisualSettingsConsistentWithParent }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelTextPanelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelTextPanelOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *string { return v.Text }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelOutput) VisualSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *string { return v.VisualSettings }).(pulumi.StringPtrOutput)
}

type DashboardPanelTextPanelPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelTextPanelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelTextPanel)(nil)).Elem()
}

func (o DashboardPanelTextPanelPtrOutput) ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput {
	return o
}

func (o DashboardPanelTextPanelPtrOutput) ToDashboardPanelTextPanelPtrOutputWithContext(ctx context.Context) DashboardPanelTextPanelPtrOutput {
	return o
}

func (o DashboardPanelTextPanelPtrOutput) Elem() DashboardPanelTextPanelOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) DashboardPanelTextPanel { return *v }).(DashboardPanelTextPanelOutput)
}

func (o DashboardPanelTextPanelPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) KeepVisualSettingsConsistentWithParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *bool {
		if v == nil {
			return nil
		}
		return v.KeepVisualSettingsConsistentWithParent
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) VisualSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return v.VisualSettings
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRange struct {
	BeginBoundedTimeRange    *DashboardTimeRangeBeginBoundedTimeRange    `pulumi:"beginBoundedTimeRange"`
	CompleteLiteralTimeRange *DashboardTimeRangeCompleteLiteralTimeRange `pulumi:"completeLiteralTimeRange"`
}

// DashboardTimeRangeInput is an input type that accepts DashboardTimeRangeArgs and DashboardTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeInput` via:
//
//          DashboardTimeRangeArgs{...}
type DashboardTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeOutput() DashboardTimeRangeOutput
	ToDashboardTimeRangeOutputWithContext(context.Context) DashboardTimeRangeOutput
}

type DashboardTimeRangeArgs struct {
	BeginBoundedTimeRange    DashboardTimeRangeBeginBoundedTimeRangePtrInput    `pulumi:"beginBoundedTimeRange"`
	CompleteLiteralTimeRange DashboardTimeRangeCompleteLiteralTimeRangePtrInput `pulumi:"completeLiteralTimeRange"`
}

func (DashboardTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeArgs) ToDashboardTimeRangeOutput() DashboardTimeRangeOutput {
	return i.ToDashboardTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeArgs) ToDashboardTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeOutput)
}

func (i DashboardTimeRangeArgs) ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput {
	return i.ToDashboardTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeArgs) ToDashboardTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeOutput).ToDashboardTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangePtrInput is an input type that accepts DashboardTimeRangeArgs, DashboardTimeRangePtr and DashboardTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangePtrInput` via:
//
//          DashboardTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput
	ToDashboardTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangePtrOutput
}

type dashboardTimeRangePtrType DashboardTimeRangeArgs

func DashboardTimeRangePtr(v *DashboardTimeRangeArgs) DashboardTimeRangePtrInput {
	return (*dashboardTimeRangePtrType)(v)
}

func (*dashboardTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangePtrType) ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput {
	return i.ToDashboardTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangePtrType) ToDashboardTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangePtrOutput)
}

type DashboardTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeOutput) ToDashboardTimeRangeOutput() DashboardTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeOutput) ToDashboardTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeOutput) ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput {
	return o.ToDashboardTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeOutput) ToDashboardTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRange) *DashboardTimeRange {
		return &v
	}).(DashboardTimeRangePtrOutput)
}
func (o DashboardTimeRangeOutput) BeginBoundedTimeRange() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRange) *DashboardTimeRangeBeginBoundedTimeRange { return v.BeginBoundedTimeRange }).(DashboardTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardTimeRangeOutput) CompleteLiteralTimeRange() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRange) *DashboardTimeRangeCompleteLiteralTimeRange {
		return v.CompleteLiteralTimeRange
	}).(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangePtrOutput) ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangePtrOutput) ToDashboardTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangePtrOutput) Elem() DashboardTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRange) DashboardTimeRange { return *v }).(DashboardTimeRangeOutput)
}

func (o DashboardTimeRangePtrOutput) BeginBoundedTimeRange() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRange) *DashboardTimeRangeBeginBoundedTimeRange {
		if v == nil {
			return nil
		}
		return v.BeginBoundedTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardTimeRangePtrOutput) CompleteLiteralTimeRange() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRange) *DashboardTimeRangeCompleteLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.CompleteLiteralTimeRange
	}).(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRange struct {
	From DashboardTimeRangeBeginBoundedTimeRangeFrom `pulumi:"from"`
	To   *DashboardTimeRangeBeginBoundedTimeRangeTo  `pulumi:"to"`
}

// DashboardTimeRangeBeginBoundedTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeArgs struct {
	From DashboardTimeRangeBeginBoundedTimeRangeFromInput  `pulumi:"from"`
	To   DashboardTimeRangeBeginBoundedTimeRangeToPtrInput `pulumi:"to"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRange) *DashboardTimeRangeBeginBoundedTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) From() DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRange) DashboardTimeRangeBeginBoundedTimeRangeFrom {
		return v.From
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) To() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeTo {
		return v.To
	}).(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRange) DashboardTimeRangeBeginBoundedTimeRange { return *v }).(DashboardTimeRangeBeginBoundedTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) From() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFrom {
		if v == nil {
			return nil
		}
		return &v.From
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) To() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeTo {
		if v == nil {
			return nil
		}
		return v.To
	}).(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFrom struct {
	EpochTimeRange    *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange  `pulumi:"literalTimeRange"`
	RelativeTimeRange *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromArgs and DashboardTimeRangeBeginBoundedTimeRangeFromOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromOutput() DashboardTimeRangeBeginBoundedTimeRangeFromOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromArgs struct {
	EpochTimeRange    DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput  `pulumi:"literalTimeRange"`
	RelativeTimeRange DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromOutput() DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromArgs, DashboardTimeRangeBeginBoundedTimeRangeFromPtr and DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromPtrType DashboardTimeRangeBeginBoundedTimeRangeFromArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromPtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromArgs) DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromPtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromPtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromPtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromOutput() DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFrom {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) EpochTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return v.EpochTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) Iso8601TimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) LiteralTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return v.LiteralTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) RelativeTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return v.RelativeTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) DashboardTimeRangeBeginBoundedTimeRangeFrom {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) EpochTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) Iso8601TimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) LiteralTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) RelativeTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange struct {
	EpochMillis int `pulumi:"epochMillis"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs struct {
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) int { return v.EpochMillis }).(pulumi.IntOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange struct {
	Iso8601Time string `pulumi:"iso8601Time"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs struct {
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) string { return v.Iso8601Time }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange struct {
	RelativeTime string `pulumi:"relativeTime"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs struct {
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) string { return v.RelativeTime }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeTo struct {
	EpochTimeRange    *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange  `pulumi:"literalTimeRange"`
	RelativeTimeRange *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToArgs and DashboardTimeRangeBeginBoundedTimeRangeToOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToOutput() DashboardTimeRangeBeginBoundedTimeRangeToOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToArgs struct {
	EpochTimeRange    DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput  `pulumi:"literalTimeRange"`
	RelativeTimeRange DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToOutput() DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToPtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToArgs, DashboardTimeRangeBeginBoundedTimeRangeToPtr and DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToPtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToPtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToPtrType DashboardTimeRangeBeginBoundedTimeRangeToArgs

func DashboardTimeRangeBeginBoundedTimeRangeToPtr(v *DashboardTimeRangeBeginBoundedTimeRangeToArgs) DashboardTimeRangeBeginBoundedTimeRangeToPtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToPtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToPtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToPtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToOutput() DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeTo {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) EpochTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return v.EpochTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) Iso8601TimeRange() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) LiteralTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return v.LiteralTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) RelativeTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return v.RelativeTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) DashboardTimeRangeBeginBoundedTimeRangeTo {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) EpochTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) Iso8601TimeRange() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) LiteralTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) RelativeTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange struct {
	EpochMillis int `pulumi:"epochMillis"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs struct {
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange) int { return v.EpochMillis }).(pulumi.IntOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange struct {
	Iso8601Time string `pulumi:"iso8601Time"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs struct {
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) string { return v.Iso8601Time }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange struct {
	RelativeTime string `pulumi:"relativeTime"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs struct {
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}
func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) string { return v.RelativeTime }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return *v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeCompleteLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardTimeRangeCompleteLiteralTimeRangeInput is an input type that accepts DashboardTimeRangeCompleteLiteralTimeRangeArgs and DashboardTimeRangeCompleteLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeCompleteLiteralTimeRangeInput` via:
//
//          DashboardTimeRangeCompleteLiteralTimeRangeArgs{...}
type DashboardTimeRangeCompleteLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeCompleteLiteralTimeRangeOutput() DashboardTimeRangeCompleteLiteralTimeRangeOutput
	ToDashboardTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Context) DashboardTimeRangeCompleteLiteralTimeRangeOutput
}

type DashboardTimeRangeCompleteLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardTimeRangeCompleteLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardTimeRangeCompleteLiteralTimeRangeOutput() DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return i.ToDashboardTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeCompleteLiteralTimeRangeOutput)
}

func (i DashboardTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeCompleteLiteralTimeRangeOutput).ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeCompleteLiteralTimeRangePtrInput is an input type that accepts DashboardTimeRangeCompleteLiteralTimeRangeArgs, DashboardTimeRangeCompleteLiteralTimeRangePtr and DashboardTimeRangeCompleteLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeCompleteLiteralTimeRangePtrInput` via:
//
//          DashboardTimeRangeCompleteLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeCompleteLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput
	ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput
}

type dashboardTimeRangeCompleteLiteralTimeRangePtrType DashboardTimeRangeCompleteLiteralTimeRangeArgs

func DashboardTimeRangeCompleteLiteralTimeRangePtr(v *DashboardTimeRangeCompleteLiteralTimeRangeArgs) DashboardTimeRangeCompleteLiteralTimeRangePtrInput {
	return (*dashboardTimeRangeCompleteLiteralTimeRangePtrType)(v)
}

func (*dashboardTimeRangeCompleteLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeCompleteLiteralTimeRangePtrType) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeCompleteLiteralTimeRangePtrType) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardTimeRangeCompleteLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeCompleteLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardTimeRangeCompleteLiteralTimeRangeOutput() DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeCompleteLiteralTimeRange) *DashboardTimeRangeCompleteLiteralTimeRange {
		return &v
	}).(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput)
}
func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeCompleteLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type DashboardTimeRangeCompleteLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) Elem() DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeCompleteLiteralTimeRange) DashboardTimeRangeCompleteLiteralTimeRange {
		return *v
	}).(DashboardTimeRangeCompleteLiteralTimeRangeOutput)
}

func (o DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeCompleteLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardTopologyLabelMap struct {
	Datas []DashboardTopologyLabelMapData `pulumi:"datas"`
}

// DashboardTopologyLabelMapInput is an input type that accepts DashboardTopologyLabelMap and DashboardTopologyLabelMapOutput values.
// You can construct a concrete instance of `DashboardTopologyLabelMapInput` via:
//
//          DashboardTopologyLabelMap{ "key": DashboardTopologyLabelArgs{...} }
type DashboardTopologyLabelMapInput interface {
	pulumi.Input

	ToDashboardTopologyLabelMapOutput() DashboardTopologyLabelMapOutput
	ToDashboardTopologyLabelMapOutputWithContext(context.Context) DashboardTopologyLabelMapOutput
}

type DashboardTopologyLabelMapArgs struct {
	Datas DashboardTopologyLabelMapDataArrayInput `pulumi:"datas"`
}

func (DashboardTopologyLabelMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopologyLabelMap)(nil)).Elem()
}

func (i DashboardTopologyLabelMapArgs) ToDashboardTopologyLabelMapOutput() DashboardTopologyLabelMapOutput {
	return i.ToDashboardTopologyLabelMapOutputWithContext(context.Background())
}

func (i DashboardTopologyLabelMapArgs) ToDashboardTopologyLabelMapOutputWithContext(ctx context.Context) DashboardTopologyLabelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapOutput)
}

func (i DashboardTopologyLabelMapArgs) ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput {
	return i.ToDashboardTopologyLabelMapPtrOutputWithContext(context.Background())
}

func (i DashboardTopologyLabelMapArgs) ToDashboardTopologyLabelMapPtrOutputWithContext(ctx context.Context) DashboardTopologyLabelMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapOutput).ToDashboardTopologyLabelMapPtrOutputWithContext(ctx)
}

// DashboardTopologyLabelMapPtrInput is an input type that accepts DashboardTopologyLabelMapArgs, DashboardTopologyLabelMapPtr and DashboardTopologyLabelMapPtrOutput values.
// You can construct a concrete instance of `DashboardTopologyLabelMapPtrInput` via:
//
//          DashboardTopologyLabelMapArgs{...}
//
//  or:
//
//          nil
type DashboardTopologyLabelMapPtrInput interface {
	pulumi.Input

	ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput
	ToDashboardTopologyLabelMapPtrOutputWithContext(context.Context) DashboardTopologyLabelMapPtrOutput
}

type dashboardTopologyLabelMapPtrType DashboardTopologyLabelMapArgs

func DashboardTopologyLabelMapPtr(v *DashboardTopologyLabelMapArgs) DashboardTopologyLabelMapPtrInput {
	return (*dashboardTopologyLabelMapPtrType)(v)
}

func (*dashboardTopologyLabelMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopologyLabelMap)(nil)).Elem()
}

func (i *dashboardTopologyLabelMapPtrType) ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput {
	return i.ToDashboardTopologyLabelMapPtrOutputWithContext(context.Background())
}

func (i *dashboardTopologyLabelMapPtrType) ToDashboardTopologyLabelMapPtrOutputWithContext(ctx context.Context) DashboardTopologyLabelMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapPtrOutput)
}

type DashboardTopologyLabelMapOutput struct{ *pulumi.OutputState }

func (DashboardTopologyLabelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopologyLabelMap)(nil)).Elem()
}

func (o DashboardTopologyLabelMapOutput) ToDashboardTopologyLabelMapOutput() DashboardTopologyLabelMapOutput {
	return o
}

func (o DashboardTopologyLabelMapOutput) ToDashboardTopologyLabelMapOutputWithContext(ctx context.Context) DashboardTopologyLabelMapOutput {
	return o
}

func (o DashboardTopologyLabelMapOutput) ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput {
	return o.ToDashboardTopologyLabelMapPtrOutputWithContext(context.Background())
}

func (o DashboardTopologyLabelMapOutput) ToDashboardTopologyLabelMapPtrOutputWithContext(ctx context.Context) DashboardTopologyLabelMapPtrOutput {
	return o.ApplyT(func(v DashboardTopologyLabelMap) *DashboardTopologyLabelMap {
		return &v
	}).(DashboardTopologyLabelMapPtrOutput)
}
func (o DashboardTopologyLabelMapOutput) Datas() DashboardTopologyLabelMapDataArrayOutput {
	return o.ApplyT(func(v DashboardTopologyLabelMap) []DashboardTopologyLabelMapData { return v.Datas }).(DashboardTopologyLabelMapDataArrayOutput)
}

type DashboardTopologyLabelMapPtrOutput struct{ *pulumi.OutputState }

func (DashboardTopologyLabelMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopologyLabelMap)(nil)).Elem()
}

func (o DashboardTopologyLabelMapPtrOutput) ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput {
	return o
}

func (o DashboardTopologyLabelMapPtrOutput) ToDashboardTopologyLabelMapPtrOutputWithContext(ctx context.Context) DashboardTopologyLabelMapPtrOutput {
	return o
}

func (o DashboardTopologyLabelMapPtrOutput) Elem() DashboardTopologyLabelMapOutput {
	return o.ApplyT(func(v *DashboardTopologyLabelMap) DashboardTopologyLabelMap { return *v }).(DashboardTopologyLabelMapOutput)
}

func (o DashboardTopologyLabelMapPtrOutput) Datas() DashboardTopologyLabelMapDataArrayOutput {
	return o.ApplyT(func(v *DashboardTopologyLabelMap) []DashboardTopologyLabelMapData {
		if v == nil {
			return nil
		}
		return v.Datas
	}).(DashboardTopologyLabelMapDataArrayOutput)
}

type DashboardTopologyLabelMapData struct {
	Label  string   `pulumi:"label"`
	Values []string `pulumi:"values"`
}

// DashboardTopologyLabelMapDataInput is an input type that accepts DashboardTopologyLabelMapDataArgs and DashboardTopologyLabelMapDataOutput values.
// You can construct a concrete instance of `DashboardTopologyLabelMapDataInput` via:
//
//          DashboardTopologyLabelMapDataArgs{...}
type DashboardTopologyLabelMapDataInput interface {
	pulumi.Input

	ToDashboardTopologyLabelMapDataOutput() DashboardTopologyLabelMapDataOutput
	ToDashboardTopologyLabelMapDataOutputWithContext(context.Context) DashboardTopologyLabelMapDataOutput
}

type DashboardTopologyLabelMapDataArgs struct {
	Label  pulumi.StringInput      `pulumi:"label"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DashboardTopologyLabelMapDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopologyLabelMapData)(nil)).Elem()
}

func (i DashboardTopologyLabelMapDataArgs) ToDashboardTopologyLabelMapDataOutput() DashboardTopologyLabelMapDataOutput {
	return i.ToDashboardTopologyLabelMapDataOutputWithContext(context.Background())
}

func (i DashboardTopologyLabelMapDataArgs) ToDashboardTopologyLabelMapDataOutputWithContext(ctx context.Context) DashboardTopologyLabelMapDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapDataOutput)
}

// DashboardTopologyLabelMapDataArrayInput is an input type that accepts DashboardTopologyLabelMapDataArray and DashboardTopologyLabelMapDataArrayOutput values.
// You can construct a concrete instance of `DashboardTopologyLabelMapDataArrayInput` via:
//
//          DashboardTopologyLabelMapDataArray{ DashboardTopologyLabelMapDataArgs{...} }
type DashboardTopologyLabelMapDataArrayInput interface {
	pulumi.Input

	ToDashboardTopologyLabelMapDataArrayOutput() DashboardTopologyLabelMapDataArrayOutput
	ToDashboardTopologyLabelMapDataArrayOutputWithContext(context.Context) DashboardTopologyLabelMapDataArrayOutput
}

type DashboardTopologyLabelMapDataArray []DashboardTopologyLabelMapDataInput

func (DashboardTopologyLabelMapDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTopologyLabelMapData)(nil)).Elem()
}

func (i DashboardTopologyLabelMapDataArray) ToDashboardTopologyLabelMapDataArrayOutput() DashboardTopologyLabelMapDataArrayOutput {
	return i.ToDashboardTopologyLabelMapDataArrayOutputWithContext(context.Background())
}

func (i DashboardTopologyLabelMapDataArray) ToDashboardTopologyLabelMapDataArrayOutputWithContext(ctx context.Context) DashboardTopologyLabelMapDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapDataArrayOutput)
}

type DashboardTopologyLabelMapDataOutput struct{ *pulumi.OutputState }

func (DashboardTopologyLabelMapDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopologyLabelMapData)(nil)).Elem()
}

func (o DashboardTopologyLabelMapDataOutput) ToDashboardTopologyLabelMapDataOutput() DashboardTopologyLabelMapDataOutput {
	return o
}

func (o DashboardTopologyLabelMapDataOutput) ToDashboardTopologyLabelMapDataOutputWithContext(ctx context.Context) DashboardTopologyLabelMapDataOutput {
	return o
}

func (o DashboardTopologyLabelMapDataOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTopologyLabelMapData) string { return v.Label }).(pulumi.StringOutput)
}

func (o DashboardTopologyLabelMapDataOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardTopologyLabelMapData) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DashboardTopologyLabelMapDataArrayOutput struct{ *pulumi.OutputState }

func (DashboardTopologyLabelMapDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTopologyLabelMapData)(nil)).Elem()
}

func (o DashboardTopologyLabelMapDataArrayOutput) ToDashboardTopologyLabelMapDataArrayOutput() DashboardTopologyLabelMapDataArrayOutput {
	return o
}

func (o DashboardTopologyLabelMapDataArrayOutput) ToDashboardTopologyLabelMapDataArrayOutputWithContext(ctx context.Context) DashboardTopologyLabelMapDataArrayOutput {
	return o
}

func (o DashboardTopologyLabelMapDataArrayOutput) Index(i pulumi.IntInput) DashboardTopologyLabelMapDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardTopologyLabelMapData {
		return vs[0].([]DashboardTopologyLabelMapData)[vs[1].(int)]
	}).(DashboardTopologyLabelMapDataOutput)
}

type DashboardVariable struct {
	AllowMultiSelect *bool                             `pulumi:"allowMultiSelect"`
	DefaultValue     *string                           `pulumi:"defaultValue"`
	DisplayName      *string                           `pulumi:"displayName"`
	HideFromUi       *bool                             `pulumi:"hideFromUi"`
	Id               *string                           `pulumi:"id"`
	IncludeAllOption *bool                             `pulumi:"includeAllOption"`
	Name             string                            `pulumi:"name"`
	SourceDefinition DashboardVariableSourceDefinition `pulumi:"sourceDefinition"`
}

// DashboardVariableInput is an input type that accepts DashboardVariableArgs and DashboardVariableOutput values.
// You can construct a concrete instance of `DashboardVariableInput` via:
//
//          DashboardVariableArgs{...}
type DashboardVariableInput interface {
	pulumi.Input

	ToDashboardVariableOutput() DashboardVariableOutput
	ToDashboardVariableOutputWithContext(context.Context) DashboardVariableOutput
}

type DashboardVariableArgs struct {
	AllowMultiSelect pulumi.BoolPtrInput                    `pulumi:"allowMultiSelect"`
	DefaultValue     pulumi.StringPtrInput                  `pulumi:"defaultValue"`
	DisplayName      pulumi.StringPtrInput                  `pulumi:"displayName"`
	HideFromUi       pulumi.BoolPtrInput                    `pulumi:"hideFromUi"`
	Id               pulumi.StringPtrInput                  `pulumi:"id"`
	IncludeAllOption pulumi.BoolPtrInput                    `pulumi:"includeAllOption"`
	Name             pulumi.StringInput                     `pulumi:"name"`
	SourceDefinition DashboardVariableSourceDefinitionInput `pulumi:"sourceDefinition"`
}

func (DashboardVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariable)(nil)).Elem()
}

func (i DashboardVariableArgs) ToDashboardVariableOutput() DashboardVariableOutput {
	return i.ToDashboardVariableOutputWithContext(context.Background())
}

func (i DashboardVariableArgs) ToDashboardVariableOutputWithContext(ctx context.Context) DashboardVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableOutput)
}

// DashboardVariableArrayInput is an input type that accepts DashboardVariableArray and DashboardVariableArrayOutput values.
// You can construct a concrete instance of `DashboardVariableArrayInput` via:
//
//          DashboardVariableArray{ DashboardVariableArgs{...} }
type DashboardVariableArrayInput interface {
	pulumi.Input

	ToDashboardVariableArrayOutput() DashboardVariableArrayOutput
	ToDashboardVariableArrayOutputWithContext(context.Context) DashboardVariableArrayOutput
}

type DashboardVariableArray []DashboardVariableInput

func (DashboardVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVariable)(nil)).Elem()
}

func (i DashboardVariableArray) ToDashboardVariableArrayOutput() DashboardVariableArrayOutput {
	return i.ToDashboardVariableArrayOutputWithContext(context.Background())
}

func (i DashboardVariableArray) ToDashboardVariableArrayOutputWithContext(ctx context.Context) DashboardVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableArrayOutput)
}

type DashboardVariableOutput struct{ *pulumi.OutputState }

func (DashboardVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariable)(nil)).Elem()
}

func (o DashboardVariableOutput) ToDashboardVariableOutput() DashboardVariableOutput {
	return o
}

func (o DashboardVariableOutput) ToDashboardVariableOutputWithContext(ctx context.Context) DashboardVariableOutput {
	return o
}

func (o DashboardVariableOutput) AllowMultiSelect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *bool { return v.AllowMultiSelect }).(pulumi.BoolPtrOutput)
}

func (o DashboardVariableOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

func (o DashboardVariableOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o DashboardVariableOutput) HideFromUi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *bool { return v.HideFromUi }).(pulumi.BoolPtrOutput)
}

func (o DashboardVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DashboardVariableOutput) IncludeAllOption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *bool { return v.IncludeAllOption }).(pulumi.BoolPtrOutput)
}

func (o DashboardVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardVariableOutput) SourceDefinition() DashboardVariableSourceDefinitionOutput {
	return o.ApplyT(func(v DashboardVariable) DashboardVariableSourceDefinition { return v.SourceDefinition }).(DashboardVariableSourceDefinitionOutput)
}

type DashboardVariableArrayOutput struct{ *pulumi.OutputState }

func (DashboardVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVariable)(nil)).Elem()
}

func (o DashboardVariableArrayOutput) ToDashboardVariableArrayOutput() DashboardVariableArrayOutput {
	return o
}

func (o DashboardVariableArrayOutput) ToDashboardVariableArrayOutputWithContext(ctx context.Context) DashboardVariableArrayOutput {
	return o
}

func (o DashboardVariableArrayOutput) Index(i pulumi.IntInput) DashboardVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardVariable {
		return vs[0].([]DashboardVariable)[vs[1].(int)]
	}).(DashboardVariableOutput)
}

type DashboardVariableSourceDefinition struct {
	CsvVariableSourceDefinition      *DashboardVariableSourceDefinitionCsvVariableSourceDefinition      `pulumi:"csvVariableSourceDefinition"`
	LogQueryVariableSourceDefinition *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition `pulumi:"logQueryVariableSourceDefinition"`
	MetadataVariableSourceDefinition *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition `pulumi:"metadataVariableSourceDefinition"`
}

// DashboardVariableSourceDefinitionInput is an input type that accepts DashboardVariableSourceDefinitionArgs and DashboardVariableSourceDefinitionOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionInput` via:
//
//          DashboardVariableSourceDefinitionArgs{...}
type DashboardVariableSourceDefinitionInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionOutput
	ToDashboardVariableSourceDefinitionOutputWithContext(context.Context) DashboardVariableSourceDefinitionOutput
}

type DashboardVariableSourceDefinitionArgs struct {
	CsvVariableSourceDefinition      DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput      `pulumi:"csvVariableSourceDefinition"`
	LogQueryVariableSourceDefinition DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput `pulumi:"logQueryVariableSourceDefinition"`
	MetadataVariableSourceDefinition DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput `pulumi:"metadataVariableSourceDefinition"`
}

func (DashboardVariableSourceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinition)(nil)).Elem()
}

func (i DashboardVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionOutput {
	return i.ToDashboardVariableSourceDefinitionOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionOutput)
}

type DashboardVariableSourceDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionOutput) CsvVariableSourceDefinition() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinition) *DashboardVariableSourceDefinitionCsvVariableSourceDefinition {
		return v.CsvVariableSourceDefinition
	}).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput)
}

func (o DashboardVariableSourceDefinitionOutput) LogQueryVariableSourceDefinition() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinition) *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition {
		return v.LogQueryVariableSourceDefinition
	}).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput)
}

func (o DashboardVariableSourceDefinitionOutput) MetadataVariableSourceDefinition() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinition) *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition {
		return v.MetadataVariableSourceDefinition
	}).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput)
}

type DashboardVariableSourceDefinitionCsvVariableSourceDefinition struct {
	Values string `pulumi:"values"`
}

// DashboardVariableSourceDefinitionCsvVariableSourceDefinitionInput is an input type that accepts DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs and DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionCsvVariableSourceDefinitionInput` via:
//
//          DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs{...}
type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput
	ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutputWithContext(context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput
}

type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs struct {
	Values pulumi.StringInput `pulumi:"values"`
}

func (DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionCsvVariableSourceDefinition)(nil)).Elem()
}

func (i DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return i.ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput)
}

func (i DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput).ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx)
}

// DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput is an input type that accepts DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs, DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtr and DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput` via:
//
//          DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs{...}
//
//  or:
//
//          nil
type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput
	ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput
}

type dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs

func DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtr(v *DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput {
	return (*dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType)(v)
}

func (*dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionCsvVariableSourceDefinition)(nil)).Elem()
}

func (i *dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i *dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput)
}

type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionCsvVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o.ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionCsvVariableSourceDefinition) *DashboardVariableSourceDefinitionCsvVariableSourceDefinition {
		return &v
	}).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput)
}
func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) Values() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionCsvVariableSourceDefinition) string { return v.Values }).(pulumi.StringOutput)
}

type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionCsvVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) Elem() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionCsvVariableSourceDefinition) DashboardVariableSourceDefinitionCsvVariableSourceDefinition {
		return *v
	}).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput)
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionCsvVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Values
	}).(pulumi.StringPtrOutput)
}

type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition struct {
	Field string `pulumi:"field"`
	Query string `pulumi:"query"`
}

// DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionInput is an input type that accepts DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs and DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionInput` via:
//
//          DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs{...}
type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput
	ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutputWithContext(context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput
}

type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs struct {
	Field pulumi.StringInput `pulumi:"field"`
	Query pulumi.StringInput `pulumi:"query"`
}

func (DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition)(nil)).Elem()
}

func (i DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return i.ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput)
}

func (i DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput).ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx)
}

// DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput is an input type that accepts DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs, DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtr and DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput` via:
//
//          DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs{...}
//
//  or:
//
//          nil
type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput
	ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput
}

type dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs

func DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtr(v *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput {
	return (*dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType)(v)
}

func (*dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition)(nil)).Elem()
}

func (i *dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i *dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput)
}

type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o.ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition {
		return &v
	}).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput)
}
func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) string { return v.Field }).(pulumi.StringOutput)
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) string { return v.Query }).(pulumi.StringOutput)
}

type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) Elem() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition {
		return *v
	}).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput)
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Field
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type DashboardVariableSourceDefinitionMetadataVariableSourceDefinition struct {
	Filter string `pulumi:"filter"`
	Key    string `pulumi:"key"`
}

// DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionInput is an input type that accepts DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs and DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionInput` via:
//
//          DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs{...}
type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput
	ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutputWithContext(context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput
}

type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs struct {
	Filter pulumi.StringInput `pulumi:"filter"`
	Key    pulumi.StringInput `pulumi:"key"`
}

func (DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionMetadataVariableSourceDefinition)(nil)).Elem()
}

func (i DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return i.ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput)
}

func (i DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput).ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx)
}

// DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput is an input type that accepts DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs, DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtr and DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput` via:
//
//          DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs{...}
//
//  or:
//
//          nil
type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput
	ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput
}

type dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs

func DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtr(v *DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput {
	return (*dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType)(v)
}

func (*dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionMetadataVariableSourceDefinition)(nil)).Elem()
}

func (i *dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i *dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput)
}

type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionMetadataVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o.ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition {
		return &v
	}).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput)
}
func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) string { return v.Filter }).(pulumi.StringOutput)
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) string { return v.Key }).(pulumi.StringOutput)
}

type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionMetadataVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) Elem() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) DashboardVariableSourceDefinitionMetadataVariableSourceDefinition {
		return *v
	}).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput)
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Filter
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type ElbSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// ElbSourceAuthenticationInput is an input type that accepts ElbSourceAuthenticationArgs and ElbSourceAuthenticationOutput values.
// You can construct a concrete instance of `ElbSourceAuthenticationInput` via:
//
//          ElbSourceAuthenticationArgs{...}
type ElbSourceAuthenticationInput interface {
	pulumi.Input

	ToElbSourceAuthenticationOutput() ElbSourceAuthenticationOutput
	ToElbSourceAuthenticationOutputWithContext(context.Context) ElbSourceAuthenticationOutput
}

type ElbSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (ElbSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceAuthentication)(nil)).Elem()
}

func (i ElbSourceAuthenticationArgs) ToElbSourceAuthenticationOutput() ElbSourceAuthenticationOutput {
	return i.ToElbSourceAuthenticationOutputWithContext(context.Background())
}

func (i ElbSourceAuthenticationArgs) ToElbSourceAuthenticationOutputWithContext(ctx context.Context) ElbSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceAuthenticationOutput)
}

func (i ElbSourceAuthenticationArgs) ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput {
	return i.ToElbSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i ElbSourceAuthenticationArgs) ToElbSourceAuthenticationPtrOutputWithContext(ctx context.Context) ElbSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceAuthenticationOutput).ToElbSourceAuthenticationPtrOutputWithContext(ctx)
}

// ElbSourceAuthenticationPtrInput is an input type that accepts ElbSourceAuthenticationArgs, ElbSourceAuthenticationPtr and ElbSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `ElbSourceAuthenticationPtrInput` via:
//
//          ElbSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type ElbSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput
	ToElbSourceAuthenticationPtrOutputWithContext(context.Context) ElbSourceAuthenticationPtrOutput
}

type elbSourceAuthenticationPtrType ElbSourceAuthenticationArgs

func ElbSourceAuthenticationPtr(v *ElbSourceAuthenticationArgs) ElbSourceAuthenticationPtrInput {
	return (*elbSourceAuthenticationPtrType)(v)
}

func (*elbSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbSourceAuthentication)(nil)).Elem()
}

func (i *elbSourceAuthenticationPtrType) ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput {
	return i.ToElbSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *elbSourceAuthenticationPtrType) ToElbSourceAuthenticationPtrOutputWithContext(ctx context.Context) ElbSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceAuthenticationPtrOutput)
}

type ElbSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (ElbSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceAuthentication)(nil)).Elem()
}

func (o ElbSourceAuthenticationOutput) ToElbSourceAuthenticationOutput() ElbSourceAuthenticationOutput {
	return o
}

func (o ElbSourceAuthenticationOutput) ToElbSourceAuthenticationOutputWithContext(ctx context.Context) ElbSourceAuthenticationOutput {
	return o
}

func (o ElbSourceAuthenticationOutput) ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput {
	return o.ToElbSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o ElbSourceAuthenticationOutput) ToElbSourceAuthenticationPtrOutputWithContext(ctx context.Context) ElbSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *ElbSourceAuthentication {
		return &v
	}).(ElbSourceAuthenticationPtrOutput)
}
func (o ElbSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type ElbSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ElbSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbSourceAuthentication)(nil)).Elem()
}

func (o ElbSourceAuthenticationPtrOutput) ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput {
	return o
}

func (o ElbSourceAuthenticationPtrOutput) ToElbSourceAuthenticationPtrOutputWithContext(ctx context.Context) ElbSourceAuthenticationPtrOutput {
	return o
}

func (o ElbSourceAuthenticationPtrOutput) Elem() ElbSourceAuthenticationOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) ElbSourceAuthentication { return *v }).(ElbSourceAuthenticationOutput)
}

func (o ElbSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ElbSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// ElbSourceDefaultDateFormatInput is an input type that accepts ElbSourceDefaultDateFormatArgs and ElbSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `ElbSourceDefaultDateFormatInput` via:
//
//          ElbSourceDefaultDateFormatArgs{...}
type ElbSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToElbSourceDefaultDateFormatOutput() ElbSourceDefaultDateFormatOutput
	ToElbSourceDefaultDateFormatOutputWithContext(context.Context) ElbSourceDefaultDateFormatOutput
}

type ElbSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (ElbSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceDefaultDateFormat)(nil)).Elem()
}

func (i ElbSourceDefaultDateFormatArgs) ToElbSourceDefaultDateFormatOutput() ElbSourceDefaultDateFormatOutput {
	return i.ToElbSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i ElbSourceDefaultDateFormatArgs) ToElbSourceDefaultDateFormatOutputWithContext(ctx context.Context) ElbSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceDefaultDateFormatOutput)
}

// ElbSourceDefaultDateFormatArrayInput is an input type that accepts ElbSourceDefaultDateFormatArray and ElbSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `ElbSourceDefaultDateFormatArrayInput` via:
//
//          ElbSourceDefaultDateFormatArray{ ElbSourceDefaultDateFormatArgs{...} }
type ElbSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToElbSourceDefaultDateFormatArrayOutput() ElbSourceDefaultDateFormatArrayOutput
	ToElbSourceDefaultDateFormatArrayOutputWithContext(context.Context) ElbSourceDefaultDateFormatArrayOutput
}

type ElbSourceDefaultDateFormatArray []ElbSourceDefaultDateFormatInput

func (ElbSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourceDefaultDateFormat)(nil)).Elem()
}

func (i ElbSourceDefaultDateFormatArray) ToElbSourceDefaultDateFormatArrayOutput() ElbSourceDefaultDateFormatArrayOutput {
	return i.ToElbSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i ElbSourceDefaultDateFormatArray) ToElbSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) ElbSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceDefaultDateFormatArrayOutput)
}

type ElbSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (ElbSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceDefaultDateFormat)(nil)).Elem()
}

func (o ElbSourceDefaultDateFormatOutput) ToElbSourceDefaultDateFormatOutput() ElbSourceDefaultDateFormatOutput {
	return o
}

func (o ElbSourceDefaultDateFormatOutput) ToElbSourceDefaultDateFormatOutputWithContext(ctx context.Context) ElbSourceDefaultDateFormatOutput {
	return o
}

func (o ElbSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o ElbSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type ElbSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (ElbSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourceDefaultDateFormat)(nil)).Elem()
}

func (o ElbSourceDefaultDateFormatArrayOutput) ToElbSourceDefaultDateFormatArrayOutput() ElbSourceDefaultDateFormatArrayOutput {
	return o
}

func (o ElbSourceDefaultDateFormatArrayOutput) ToElbSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) ElbSourceDefaultDateFormatArrayOutput {
	return o
}

func (o ElbSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) ElbSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSourceDefaultDateFormat {
		return vs[0].([]ElbSourceDefaultDateFormat)[vs[1].(int)]
	}).(ElbSourceDefaultDateFormatOutput)
}

type ElbSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// ElbSourceFilterInput is an input type that accepts ElbSourceFilterArgs and ElbSourceFilterOutput values.
// You can construct a concrete instance of `ElbSourceFilterInput` via:
//
//          ElbSourceFilterArgs{...}
type ElbSourceFilterInput interface {
	pulumi.Input

	ToElbSourceFilterOutput() ElbSourceFilterOutput
	ToElbSourceFilterOutputWithContext(context.Context) ElbSourceFilterOutput
}

type ElbSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (ElbSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceFilter)(nil)).Elem()
}

func (i ElbSourceFilterArgs) ToElbSourceFilterOutput() ElbSourceFilterOutput {
	return i.ToElbSourceFilterOutputWithContext(context.Background())
}

func (i ElbSourceFilterArgs) ToElbSourceFilterOutputWithContext(ctx context.Context) ElbSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceFilterOutput)
}

// ElbSourceFilterArrayInput is an input type that accepts ElbSourceFilterArray and ElbSourceFilterArrayOutput values.
// You can construct a concrete instance of `ElbSourceFilterArrayInput` via:
//
//          ElbSourceFilterArray{ ElbSourceFilterArgs{...} }
type ElbSourceFilterArrayInput interface {
	pulumi.Input

	ToElbSourceFilterArrayOutput() ElbSourceFilterArrayOutput
	ToElbSourceFilterArrayOutputWithContext(context.Context) ElbSourceFilterArrayOutput
}

type ElbSourceFilterArray []ElbSourceFilterInput

func (ElbSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourceFilter)(nil)).Elem()
}

func (i ElbSourceFilterArray) ToElbSourceFilterArrayOutput() ElbSourceFilterArrayOutput {
	return i.ToElbSourceFilterArrayOutputWithContext(context.Background())
}

func (i ElbSourceFilterArray) ToElbSourceFilterArrayOutputWithContext(ctx context.Context) ElbSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceFilterArrayOutput)
}

type ElbSourceFilterOutput struct{ *pulumi.OutputState }

func (ElbSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceFilter)(nil)).Elem()
}

func (o ElbSourceFilterOutput) ToElbSourceFilterOutput() ElbSourceFilterOutput {
	return o
}

func (o ElbSourceFilterOutput) ToElbSourceFilterOutputWithContext(ctx context.Context) ElbSourceFilterOutput {
	return o
}

func (o ElbSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o ElbSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o ElbSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o ElbSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type ElbSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (ElbSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourceFilter)(nil)).Elem()
}

func (o ElbSourceFilterArrayOutput) ToElbSourceFilterArrayOutput() ElbSourceFilterArrayOutput {
	return o
}

func (o ElbSourceFilterArrayOutput) ToElbSourceFilterArrayOutputWithContext(ctx context.Context) ElbSourceFilterArrayOutput {
	return o
}

func (o ElbSourceFilterArrayOutput) Index(i pulumi.IntInput) ElbSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSourceFilter {
		return vs[0].([]ElbSourceFilter)[vs[1].(int)]
	}).(ElbSourceFilterOutput)
}

type ElbSourcePath struct {
	BucketName        *string                  `pulumi:"bucketName"`
	LimitToNamespaces []string                 `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                 `pulumi:"limitToRegions"`
	PathExpression    *string                  `pulumi:"pathExpression"`
	TagFilters        []ElbSourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                   `pulumi:"type"`
}

// ElbSourcePathInput is an input type that accepts ElbSourcePathArgs and ElbSourcePathOutput values.
// You can construct a concrete instance of `ElbSourcePathInput` via:
//
//          ElbSourcePathArgs{...}
type ElbSourcePathInput interface {
	pulumi.Input

	ToElbSourcePathOutput() ElbSourcePathOutput
	ToElbSourcePathOutputWithContext(context.Context) ElbSourcePathOutput
}

type ElbSourcePathArgs struct {
	BucketName        pulumi.StringPtrInput            `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput          `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput          `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput            `pulumi:"pathExpression"`
	TagFilters        ElbSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput               `pulumi:"type"`
}

func (ElbSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePath)(nil)).Elem()
}

func (i ElbSourcePathArgs) ToElbSourcePathOutput() ElbSourcePathOutput {
	return i.ToElbSourcePathOutputWithContext(context.Background())
}

func (i ElbSourcePathArgs) ToElbSourcePathOutputWithContext(ctx context.Context) ElbSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathOutput)
}

func (i ElbSourcePathArgs) ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput {
	return i.ToElbSourcePathPtrOutputWithContext(context.Background())
}

func (i ElbSourcePathArgs) ToElbSourcePathPtrOutputWithContext(ctx context.Context) ElbSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathOutput).ToElbSourcePathPtrOutputWithContext(ctx)
}

// ElbSourcePathPtrInput is an input type that accepts ElbSourcePathArgs, ElbSourcePathPtr and ElbSourcePathPtrOutput values.
// You can construct a concrete instance of `ElbSourcePathPtrInput` via:
//
//          ElbSourcePathArgs{...}
//
//  or:
//
//          nil
type ElbSourcePathPtrInput interface {
	pulumi.Input

	ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput
	ToElbSourcePathPtrOutputWithContext(context.Context) ElbSourcePathPtrOutput
}

type elbSourcePathPtrType ElbSourcePathArgs

func ElbSourcePathPtr(v *ElbSourcePathArgs) ElbSourcePathPtrInput {
	return (*elbSourcePathPtrType)(v)
}

func (*elbSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbSourcePath)(nil)).Elem()
}

func (i *elbSourcePathPtrType) ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput {
	return i.ToElbSourcePathPtrOutputWithContext(context.Background())
}

func (i *elbSourcePathPtrType) ToElbSourcePathPtrOutputWithContext(ctx context.Context) ElbSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathPtrOutput)
}

type ElbSourcePathOutput struct{ *pulumi.OutputState }

func (ElbSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePath)(nil)).Elem()
}

func (o ElbSourcePathOutput) ToElbSourcePathOutput() ElbSourcePathOutput {
	return o
}

func (o ElbSourcePathOutput) ToElbSourcePathOutputWithContext(ctx context.Context) ElbSourcePathOutput {
	return o
}

func (o ElbSourcePathOutput) ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput {
	return o.ToElbSourcePathPtrOutputWithContext(context.Background())
}

func (o ElbSourcePathOutput) ToElbSourcePathPtrOutputWithContext(ctx context.Context) ElbSourcePathPtrOutput {
	return o.ApplyT(func(v ElbSourcePath) *ElbSourcePath {
		return &v
	}).(ElbSourcePathPtrOutput)
}
func (o ElbSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathOutput) TagFilters() ElbSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []ElbSourcePathTagFilter { return v.TagFilters }).(ElbSourcePathTagFilterArrayOutput)
}

func (o ElbSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type ElbSourcePathPtrOutput struct{ *pulumi.OutputState }

func (ElbSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbSourcePath)(nil)).Elem()
}

func (o ElbSourcePathPtrOutput) ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput {
	return o
}

func (o ElbSourcePathPtrOutput) ToElbSourcePathPtrOutputWithContext(ctx context.Context) ElbSourcePathPtrOutput {
	return o
}

func (o ElbSourcePathPtrOutput) Elem() ElbSourcePathOutput {
	return o.ApplyT(func(v *ElbSourcePath) ElbSourcePath { return *v }).(ElbSourcePathOutput)
}

func (o ElbSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathPtrOutput) TagFilters() ElbSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []ElbSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(ElbSourcePathTagFilterArrayOutput)
}

func (o ElbSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ElbSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// ElbSourcePathTagFilterInput is an input type that accepts ElbSourcePathTagFilterArgs and ElbSourcePathTagFilterOutput values.
// You can construct a concrete instance of `ElbSourcePathTagFilterInput` via:
//
//          ElbSourcePathTagFilterArgs{...}
type ElbSourcePathTagFilterInput interface {
	pulumi.Input

	ToElbSourcePathTagFilterOutput() ElbSourcePathTagFilterOutput
	ToElbSourcePathTagFilterOutputWithContext(context.Context) ElbSourcePathTagFilterOutput
}

type ElbSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (ElbSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePathTagFilter)(nil)).Elem()
}

func (i ElbSourcePathTagFilterArgs) ToElbSourcePathTagFilterOutput() ElbSourcePathTagFilterOutput {
	return i.ToElbSourcePathTagFilterOutputWithContext(context.Background())
}

func (i ElbSourcePathTagFilterArgs) ToElbSourcePathTagFilterOutputWithContext(ctx context.Context) ElbSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathTagFilterOutput)
}

// ElbSourcePathTagFilterArrayInput is an input type that accepts ElbSourcePathTagFilterArray and ElbSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `ElbSourcePathTagFilterArrayInput` via:
//
//          ElbSourcePathTagFilterArray{ ElbSourcePathTagFilterArgs{...} }
type ElbSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToElbSourcePathTagFilterArrayOutput() ElbSourcePathTagFilterArrayOutput
	ToElbSourcePathTagFilterArrayOutputWithContext(context.Context) ElbSourcePathTagFilterArrayOutput
}

type ElbSourcePathTagFilterArray []ElbSourcePathTagFilterInput

func (ElbSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourcePathTagFilter)(nil)).Elem()
}

func (i ElbSourcePathTagFilterArray) ToElbSourcePathTagFilterArrayOutput() ElbSourcePathTagFilterArrayOutput {
	return i.ToElbSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i ElbSourcePathTagFilterArray) ToElbSourcePathTagFilterArrayOutputWithContext(ctx context.Context) ElbSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathTagFilterArrayOutput)
}

type ElbSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (ElbSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePathTagFilter)(nil)).Elem()
}

func (o ElbSourcePathTagFilterOutput) ToElbSourcePathTagFilterOutput() ElbSourcePathTagFilterOutput {
	return o
}

func (o ElbSourcePathTagFilterOutput) ToElbSourcePathTagFilterOutputWithContext(ctx context.Context) ElbSourcePathTagFilterOutput {
	return o
}

func (o ElbSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElbSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ElbSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (ElbSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourcePathTagFilter)(nil)).Elem()
}

func (o ElbSourcePathTagFilterArrayOutput) ToElbSourcePathTagFilterArrayOutput() ElbSourcePathTagFilterArrayOutput {
	return o
}

func (o ElbSourcePathTagFilterArrayOutput) ToElbSourcePathTagFilterArrayOutputWithContext(ctx context.Context) ElbSourcePathTagFilterArrayOutput {
	return o
}

func (o ElbSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) ElbSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSourcePathTagFilter {
		return vs[0].([]ElbSourcePathTagFilter)[vs[1].(int)]
	}).(ElbSourcePathTagFilterOutput)
}

type GcpSourceAuthentication struct {
	Type *string `pulumi:"type"`
}

// GcpSourceAuthenticationInput is an input type that accepts GcpSourceAuthenticationArgs and GcpSourceAuthenticationOutput values.
// You can construct a concrete instance of `GcpSourceAuthenticationInput` via:
//
//          GcpSourceAuthenticationArgs{...}
type GcpSourceAuthenticationInput interface {
	pulumi.Input

	ToGcpSourceAuthenticationOutput() GcpSourceAuthenticationOutput
	ToGcpSourceAuthenticationOutputWithContext(context.Context) GcpSourceAuthenticationOutput
}

type GcpSourceAuthenticationArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GcpSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceAuthentication)(nil)).Elem()
}

func (i GcpSourceAuthenticationArgs) ToGcpSourceAuthenticationOutput() GcpSourceAuthenticationOutput {
	return i.ToGcpSourceAuthenticationOutputWithContext(context.Background())
}

func (i GcpSourceAuthenticationArgs) ToGcpSourceAuthenticationOutputWithContext(ctx context.Context) GcpSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceAuthenticationOutput)
}

func (i GcpSourceAuthenticationArgs) ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput {
	return i.ToGcpSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i GcpSourceAuthenticationArgs) ToGcpSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceAuthenticationOutput).ToGcpSourceAuthenticationPtrOutputWithContext(ctx)
}

// GcpSourceAuthenticationPtrInput is an input type that accepts GcpSourceAuthenticationArgs, GcpSourceAuthenticationPtr and GcpSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `GcpSourceAuthenticationPtrInput` via:
//
//          GcpSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type GcpSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput
	ToGcpSourceAuthenticationPtrOutputWithContext(context.Context) GcpSourceAuthenticationPtrOutput
}

type gcpSourceAuthenticationPtrType GcpSourceAuthenticationArgs

func GcpSourceAuthenticationPtr(v *GcpSourceAuthenticationArgs) GcpSourceAuthenticationPtrInput {
	return (*gcpSourceAuthenticationPtrType)(v)
}

func (*gcpSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSourceAuthentication)(nil)).Elem()
}

func (i *gcpSourceAuthenticationPtrType) ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput {
	return i.ToGcpSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *gcpSourceAuthenticationPtrType) ToGcpSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceAuthenticationPtrOutput)
}

type GcpSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (GcpSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceAuthentication)(nil)).Elem()
}

func (o GcpSourceAuthenticationOutput) ToGcpSourceAuthenticationOutput() GcpSourceAuthenticationOutput {
	return o
}

func (o GcpSourceAuthenticationOutput) ToGcpSourceAuthenticationOutputWithContext(ctx context.Context) GcpSourceAuthenticationOutput {
	return o
}

func (o GcpSourceAuthenticationOutput) ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput {
	return o.ToGcpSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o GcpSourceAuthenticationOutput) ToGcpSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v GcpSourceAuthentication) *GcpSourceAuthentication {
		return &v
	}).(GcpSourceAuthenticationPtrOutput)
}
func (o GcpSourceAuthenticationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpSourceAuthentication) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GcpSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (GcpSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSourceAuthentication)(nil)).Elem()
}

func (o GcpSourceAuthenticationPtrOutput) ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput {
	return o
}

func (o GcpSourceAuthenticationPtrOutput) ToGcpSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpSourceAuthenticationPtrOutput {
	return o
}

func (o GcpSourceAuthenticationPtrOutput) Elem() GcpSourceAuthenticationOutput {
	return o.ApplyT(func(v *GcpSourceAuthentication) GcpSourceAuthentication { return *v }).(GcpSourceAuthenticationOutput)
}

func (o GcpSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GcpSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// GcpSourceDefaultDateFormatInput is an input type that accepts GcpSourceDefaultDateFormatArgs and GcpSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `GcpSourceDefaultDateFormatInput` via:
//
//          GcpSourceDefaultDateFormatArgs{...}
type GcpSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToGcpSourceDefaultDateFormatOutput() GcpSourceDefaultDateFormatOutput
	ToGcpSourceDefaultDateFormatOutputWithContext(context.Context) GcpSourceDefaultDateFormatOutput
}

type GcpSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (GcpSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceDefaultDateFormat)(nil)).Elem()
}

func (i GcpSourceDefaultDateFormatArgs) ToGcpSourceDefaultDateFormatOutput() GcpSourceDefaultDateFormatOutput {
	return i.ToGcpSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i GcpSourceDefaultDateFormatArgs) ToGcpSourceDefaultDateFormatOutputWithContext(ctx context.Context) GcpSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceDefaultDateFormatOutput)
}

// GcpSourceDefaultDateFormatArrayInput is an input type that accepts GcpSourceDefaultDateFormatArray and GcpSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `GcpSourceDefaultDateFormatArrayInput` via:
//
//          GcpSourceDefaultDateFormatArray{ GcpSourceDefaultDateFormatArgs{...} }
type GcpSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToGcpSourceDefaultDateFormatArrayOutput() GcpSourceDefaultDateFormatArrayOutput
	ToGcpSourceDefaultDateFormatArrayOutputWithContext(context.Context) GcpSourceDefaultDateFormatArrayOutput
}

type GcpSourceDefaultDateFormatArray []GcpSourceDefaultDateFormatInput

func (GcpSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpSourceDefaultDateFormat)(nil)).Elem()
}

func (i GcpSourceDefaultDateFormatArray) ToGcpSourceDefaultDateFormatArrayOutput() GcpSourceDefaultDateFormatArrayOutput {
	return i.ToGcpSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i GcpSourceDefaultDateFormatArray) ToGcpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) GcpSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceDefaultDateFormatArrayOutput)
}

type GcpSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (GcpSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceDefaultDateFormat)(nil)).Elem()
}

func (o GcpSourceDefaultDateFormatOutput) ToGcpSourceDefaultDateFormatOutput() GcpSourceDefaultDateFormatOutput {
	return o
}

func (o GcpSourceDefaultDateFormatOutput) ToGcpSourceDefaultDateFormatOutputWithContext(ctx context.Context) GcpSourceDefaultDateFormatOutput {
	return o
}

func (o GcpSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GcpSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o GcpSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type GcpSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (GcpSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpSourceDefaultDateFormat)(nil)).Elem()
}

func (o GcpSourceDefaultDateFormatArrayOutput) ToGcpSourceDefaultDateFormatArrayOutput() GcpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o GcpSourceDefaultDateFormatArrayOutput) ToGcpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) GcpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o GcpSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) GcpSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpSourceDefaultDateFormat {
		return vs[0].([]GcpSourceDefaultDateFormat)[vs[1].(int)]
	}).(GcpSourceDefaultDateFormatOutput)
}

type GcpSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// GcpSourceFilterInput is an input type that accepts GcpSourceFilterArgs and GcpSourceFilterOutput values.
// You can construct a concrete instance of `GcpSourceFilterInput` via:
//
//          GcpSourceFilterArgs{...}
type GcpSourceFilterInput interface {
	pulumi.Input

	ToGcpSourceFilterOutput() GcpSourceFilterOutput
	ToGcpSourceFilterOutputWithContext(context.Context) GcpSourceFilterOutput
}

type GcpSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (GcpSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceFilter)(nil)).Elem()
}

func (i GcpSourceFilterArgs) ToGcpSourceFilterOutput() GcpSourceFilterOutput {
	return i.ToGcpSourceFilterOutputWithContext(context.Background())
}

func (i GcpSourceFilterArgs) ToGcpSourceFilterOutputWithContext(ctx context.Context) GcpSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceFilterOutput)
}

// GcpSourceFilterArrayInput is an input type that accepts GcpSourceFilterArray and GcpSourceFilterArrayOutput values.
// You can construct a concrete instance of `GcpSourceFilterArrayInput` via:
//
//          GcpSourceFilterArray{ GcpSourceFilterArgs{...} }
type GcpSourceFilterArrayInput interface {
	pulumi.Input

	ToGcpSourceFilterArrayOutput() GcpSourceFilterArrayOutput
	ToGcpSourceFilterArrayOutputWithContext(context.Context) GcpSourceFilterArrayOutput
}

type GcpSourceFilterArray []GcpSourceFilterInput

func (GcpSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpSourceFilter)(nil)).Elem()
}

func (i GcpSourceFilterArray) ToGcpSourceFilterArrayOutput() GcpSourceFilterArrayOutput {
	return i.ToGcpSourceFilterArrayOutputWithContext(context.Background())
}

func (i GcpSourceFilterArray) ToGcpSourceFilterArrayOutputWithContext(ctx context.Context) GcpSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceFilterArrayOutput)
}

type GcpSourceFilterOutput struct{ *pulumi.OutputState }

func (GcpSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceFilter)(nil)).Elem()
}

func (o GcpSourceFilterOutput) ToGcpSourceFilterOutput() GcpSourceFilterOutput {
	return o
}

func (o GcpSourceFilterOutput) ToGcpSourceFilterOutputWithContext(ctx context.Context) GcpSourceFilterOutput {
	return o
}

func (o GcpSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GcpSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o GcpSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o GcpSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GcpSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GcpSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v GcpSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type GcpSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (GcpSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpSourceFilter)(nil)).Elem()
}

func (o GcpSourceFilterArrayOutput) ToGcpSourceFilterArrayOutput() GcpSourceFilterArrayOutput {
	return o
}

func (o GcpSourceFilterArrayOutput) ToGcpSourceFilterArrayOutputWithContext(ctx context.Context) GcpSourceFilterArrayOutput {
	return o
}

func (o GcpSourceFilterArrayOutput) Index(i pulumi.IntInput) GcpSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpSourceFilter {
		return vs[0].([]GcpSourceFilter)[vs[1].(int)]
	}).(GcpSourceFilterOutput)
}

type GcpSourcePath struct {
	Type *string `pulumi:"type"`
}

// GcpSourcePathInput is an input type that accepts GcpSourcePathArgs and GcpSourcePathOutput values.
// You can construct a concrete instance of `GcpSourcePathInput` via:
//
//          GcpSourcePathArgs{...}
type GcpSourcePathInput interface {
	pulumi.Input

	ToGcpSourcePathOutput() GcpSourcePathOutput
	ToGcpSourcePathOutputWithContext(context.Context) GcpSourcePathOutput
}

type GcpSourcePathArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GcpSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourcePath)(nil)).Elem()
}

func (i GcpSourcePathArgs) ToGcpSourcePathOutput() GcpSourcePathOutput {
	return i.ToGcpSourcePathOutputWithContext(context.Background())
}

func (i GcpSourcePathArgs) ToGcpSourcePathOutputWithContext(ctx context.Context) GcpSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourcePathOutput)
}

func (i GcpSourcePathArgs) ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput {
	return i.ToGcpSourcePathPtrOutputWithContext(context.Background())
}

func (i GcpSourcePathArgs) ToGcpSourcePathPtrOutputWithContext(ctx context.Context) GcpSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourcePathOutput).ToGcpSourcePathPtrOutputWithContext(ctx)
}

// GcpSourcePathPtrInput is an input type that accepts GcpSourcePathArgs, GcpSourcePathPtr and GcpSourcePathPtrOutput values.
// You can construct a concrete instance of `GcpSourcePathPtrInput` via:
//
//          GcpSourcePathArgs{...}
//
//  or:
//
//          nil
type GcpSourcePathPtrInput interface {
	pulumi.Input

	ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput
	ToGcpSourcePathPtrOutputWithContext(context.Context) GcpSourcePathPtrOutput
}

type gcpSourcePathPtrType GcpSourcePathArgs

func GcpSourcePathPtr(v *GcpSourcePathArgs) GcpSourcePathPtrInput {
	return (*gcpSourcePathPtrType)(v)
}

func (*gcpSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSourcePath)(nil)).Elem()
}

func (i *gcpSourcePathPtrType) ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput {
	return i.ToGcpSourcePathPtrOutputWithContext(context.Background())
}

func (i *gcpSourcePathPtrType) ToGcpSourcePathPtrOutputWithContext(ctx context.Context) GcpSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourcePathPtrOutput)
}

type GcpSourcePathOutput struct{ *pulumi.OutputState }

func (GcpSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourcePath)(nil)).Elem()
}

func (o GcpSourcePathOutput) ToGcpSourcePathOutput() GcpSourcePathOutput {
	return o
}

func (o GcpSourcePathOutput) ToGcpSourcePathOutputWithContext(ctx context.Context) GcpSourcePathOutput {
	return o
}

func (o GcpSourcePathOutput) ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput {
	return o.ToGcpSourcePathPtrOutputWithContext(context.Background())
}

func (o GcpSourcePathOutput) ToGcpSourcePathPtrOutputWithContext(ctx context.Context) GcpSourcePathPtrOutput {
	return o.ApplyT(func(v GcpSourcePath) *GcpSourcePath {
		return &v
	}).(GcpSourcePathPtrOutput)
}
func (o GcpSourcePathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpSourcePath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GcpSourcePathPtrOutput struct{ *pulumi.OutputState }

func (GcpSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSourcePath)(nil)).Elem()
}

func (o GcpSourcePathPtrOutput) ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput {
	return o
}

func (o GcpSourcePathPtrOutput) ToGcpSourcePathPtrOutputWithContext(ctx context.Context) GcpSourcePathPtrOutput {
	return o
}

func (o GcpSourcePathPtrOutput) Elem() GcpSourcePathOutput {
	return o.ApplyT(func(v *GcpSourcePath) GcpSourcePath { return *v }).(GcpSourcePathOutput)
}

func (o GcpSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type HttpSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// HttpSourceDefaultDateFormatInput is an input type that accepts HttpSourceDefaultDateFormatArgs and HttpSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `HttpSourceDefaultDateFormatInput` via:
//
//          HttpSourceDefaultDateFormatArgs{...}
type HttpSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput
	ToHttpSourceDefaultDateFormatOutputWithContext(context.Context) HttpSourceDefaultDateFormatOutput
}

type HttpSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (HttpSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (i HttpSourceDefaultDateFormatArgs) ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput {
	return i.ToHttpSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i HttpSourceDefaultDateFormatArgs) ToHttpSourceDefaultDateFormatOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceDefaultDateFormatOutput)
}

// HttpSourceDefaultDateFormatArrayInput is an input type that accepts HttpSourceDefaultDateFormatArray and HttpSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `HttpSourceDefaultDateFormatArrayInput` via:
//
//          HttpSourceDefaultDateFormatArray{ HttpSourceDefaultDateFormatArgs{...} }
type HttpSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput
	ToHttpSourceDefaultDateFormatArrayOutputWithContext(context.Context) HttpSourceDefaultDateFormatArrayOutput
}

type HttpSourceDefaultDateFormatArray []HttpSourceDefaultDateFormatInput

func (HttpSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (i HttpSourceDefaultDateFormatArray) ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput {
	return i.ToHttpSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i HttpSourceDefaultDateFormatArray) ToHttpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceDefaultDateFormatArrayOutput)
}

type HttpSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (HttpSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (o HttpSourceDefaultDateFormatOutput) ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput {
	return o
}

func (o HttpSourceDefaultDateFormatOutput) ToHttpSourceDefaultDateFormatOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatOutput {
	return o
}

func (o HttpSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o HttpSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type HttpSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (HttpSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (o HttpSourceDefaultDateFormatArrayOutput) ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o HttpSourceDefaultDateFormatArrayOutput) ToHttpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o HttpSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) HttpSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpSourceDefaultDateFormat {
		return vs[0].([]HttpSourceDefaultDateFormat)[vs[1].(int)]
	}).(HttpSourceDefaultDateFormatOutput)
}

type HttpSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// HttpSourceFilterInput is an input type that accepts HttpSourceFilterArgs and HttpSourceFilterOutput values.
// You can construct a concrete instance of `HttpSourceFilterInput` via:
//
//          HttpSourceFilterArgs{...}
type HttpSourceFilterInput interface {
	pulumi.Input

	ToHttpSourceFilterOutput() HttpSourceFilterOutput
	ToHttpSourceFilterOutputWithContext(context.Context) HttpSourceFilterOutput
}

type HttpSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (HttpSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceFilter)(nil)).Elem()
}

func (i HttpSourceFilterArgs) ToHttpSourceFilterOutput() HttpSourceFilterOutput {
	return i.ToHttpSourceFilterOutputWithContext(context.Background())
}

func (i HttpSourceFilterArgs) ToHttpSourceFilterOutputWithContext(ctx context.Context) HttpSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceFilterOutput)
}

// HttpSourceFilterArrayInput is an input type that accepts HttpSourceFilterArray and HttpSourceFilterArrayOutput values.
// You can construct a concrete instance of `HttpSourceFilterArrayInput` via:
//
//          HttpSourceFilterArray{ HttpSourceFilterArgs{...} }
type HttpSourceFilterArrayInput interface {
	pulumi.Input

	ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput
	ToHttpSourceFilterArrayOutputWithContext(context.Context) HttpSourceFilterArrayOutput
}

type HttpSourceFilterArray []HttpSourceFilterInput

func (HttpSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceFilter)(nil)).Elem()
}

func (i HttpSourceFilterArray) ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput {
	return i.ToHttpSourceFilterArrayOutputWithContext(context.Background())
}

func (i HttpSourceFilterArray) ToHttpSourceFilterArrayOutputWithContext(ctx context.Context) HttpSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceFilterArrayOutput)
}

type HttpSourceFilterOutput struct{ *pulumi.OutputState }

func (HttpSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceFilter)(nil)).Elem()
}

func (o HttpSourceFilterOutput) ToHttpSourceFilterOutput() HttpSourceFilterOutput {
	return o
}

func (o HttpSourceFilterOutput) ToHttpSourceFilterOutputWithContext(ctx context.Context) HttpSourceFilterOutput {
	return o
}

func (o HttpSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o HttpSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o HttpSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o HttpSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type HttpSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (HttpSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceFilter)(nil)).Elem()
}

func (o HttpSourceFilterArrayOutput) ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput {
	return o
}

func (o HttpSourceFilterArrayOutput) ToHttpSourceFilterArrayOutputWithContext(ctx context.Context) HttpSourceFilterArrayOutput {
	return o
}

func (o HttpSourceFilterArrayOutput) Index(i pulumi.IntInput) HttpSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpSourceFilter {
		return vs[0].([]HttpSourceFilter)[vs[1].(int)]
	}).(HttpSourceFilterOutput)
}

type KinesisMetricsSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// KinesisMetricsSourceAuthenticationInput is an input type that accepts KinesisMetricsSourceAuthenticationArgs and KinesisMetricsSourceAuthenticationOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceAuthenticationInput` via:
//
//          KinesisMetricsSourceAuthenticationArgs{...}
type KinesisMetricsSourceAuthenticationInput interface {
	pulumi.Input

	ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput
	ToKinesisMetricsSourceAuthenticationOutputWithContext(context.Context) KinesisMetricsSourceAuthenticationOutput
}

type KinesisMetricsSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (KinesisMetricsSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput {
	return i.ToKinesisMetricsSourceAuthenticationOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationOutput)
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return i.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationOutput).ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx)
}

// KinesisMetricsSourceAuthenticationPtrInput is an input type that accepts KinesisMetricsSourceAuthenticationArgs, KinesisMetricsSourceAuthenticationPtr and KinesisMetricsSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceAuthenticationPtrInput` via:
//
//          KinesisMetricsSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type KinesisMetricsSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput
	ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Context) KinesisMetricsSourceAuthenticationPtrOutput
}

type kinesisMetricsSourceAuthenticationPtrType KinesisMetricsSourceAuthenticationArgs

func KinesisMetricsSourceAuthenticationPtr(v *KinesisMetricsSourceAuthenticationArgs) KinesisMetricsSourceAuthenticationPtrInput {
	return (*kinesisMetricsSourceAuthenticationPtrType)(v)
}

func (*kinesisMetricsSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (i *kinesisMetricsSourceAuthenticationPtrType) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return i.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *kinesisMetricsSourceAuthenticationPtrType) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationPtrOutput)
}

type KinesisMetricsSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return o.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *KinesisMetricsSourceAuthentication {
		return &v
	}).(KinesisMetricsSourceAuthenticationPtrOutput)
}
func (o KinesisMetricsSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type KinesisMetricsSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) Elem() KinesisMetricsSourceAuthenticationOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) KinesisMetricsSourceAuthentication { return *v }).(KinesisMetricsSourceAuthenticationOutput)
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// KinesisMetricsSourceDefaultDateFormatInput is an input type that accepts KinesisMetricsSourceDefaultDateFormatArgs and KinesisMetricsSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceDefaultDateFormatInput` via:
//
//          KinesisMetricsSourceDefaultDateFormatArgs{...}
type KinesisMetricsSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput
	ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(context.Context) KinesisMetricsSourceDefaultDateFormatOutput
}

type KinesisMetricsSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (KinesisMetricsSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (i KinesisMetricsSourceDefaultDateFormatArgs) ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput {
	return i.ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceDefaultDateFormatArgs) ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceDefaultDateFormatOutput)
}

// KinesisMetricsSourceDefaultDateFormatArrayInput is an input type that accepts KinesisMetricsSourceDefaultDateFormatArray and KinesisMetricsSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceDefaultDateFormatArrayInput` via:
//
//          KinesisMetricsSourceDefaultDateFormatArray{ KinesisMetricsSourceDefaultDateFormatArgs{...} }
type KinesisMetricsSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput
	ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput
}

type KinesisMetricsSourceDefaultDateFormatArray []KinesisMetricsSourceDefaultDateFormatInput

func (KinesisMetricsSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (i KinesisMetricsSourceDefaultDateFormatArray) ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return i.ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceDefaultDateFormatArray) ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceDefaultDateFormatArrayOutput)
}

type KinesisMetricsSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourceDefaultDateFormat {
		return vs[0].([]KinesisMetricsSourceDefaultDateFormat)[vs[1].(int)]
	}).(KinesisMetricsSourceDefaultDateFormatOutput)
}

type KinesisMetricsSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// KinesisMetricsSourceFilterInput is an input type that accepts KinesisMetricsSourceFilterArgs and KinesisMetricsSourceFilterOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceFilterInput` via:
//
//          KinesisMetricsSourceFilterArgs{...}
type KinesisMetricsSourceFilterInput interface {
	pulumi.Input

	ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput
	ToKinesisMetricsSourceFilterOutputWithContext(context.Context) KinesisMetricsSourceFilterOutput
}

type KinesisMetricsSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (KinesisMetricsSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceFilter)(nil)).Elem()
}

func (i KinesisMetricsSourceFilterArgs) ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput {
	return i.ToKinesisMetricsSourceFilterOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceFilterArgs) ToKinesisMetricsSourceFilterOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceFilterOutput)
}

// KinesisMetricsSourceFilterArrayInput is an input type that accepts KinesisMetricsSourceFilterArray and KinesisMetricsSourceFilterArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceFilterArrayInput` via:
//
//          KinesisMetricsSourceFilterArray{ KinesisMetricsSourceFilterArgs{...} }
type KinesisMetricsSourceFilterArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput
	ToKinesisMetricsSourceFilterArrayOutputWithContext(context.Context) KinesisMetricsSourceFilterArrayOutput
}

type KinesisMetricsSourceFilterArray []KinesisMetricsSourceFilterInput

func (KinesisMetricsSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceFilter)(nil)).Elem()
}

func (i KinesisMetricsSourceFilterArray) ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput {
	return i.ToKinesisMetricsSourceFilterArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceFilterArray) ToKinesisMetricsSourceFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceFilterArrayOutput)
}

type KinesisMetricsSourceFilterOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceFilter)(nil)).Elem()
}

func (o KinesisMetricsSourceFilterOutput) ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput {
	return o
}

func (o KinesisMetricsSourceFilterOutput) ToKinesisMetricsSourceFilterOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterOutput {
	return o
}

func (o KinesisMetricsSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type KinesisMetricsSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceFilter)(nil)).Elem()
}

func (o KinesisMetricsSourceFilterArrayOutput) ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourceFilterArrayOutput) ToKinesisMetricsSourceFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourceFilterArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourceFilter {
		return vs[0].([]KinesisMetricsSourceFilter)[vs[1].(int)]
	}).(KinesisMetricsSourceFilterOutput)
}

type KinesisMetricsSourcePath struct {
	TagFilters []KinesisMetricsSourcePathTagFilter `pulumi:"tagFilters"`
	Type       string                              `pulumi:"type"`
}

// KinesisMetricsSourcePathInput is an input type that accepts KinesisMetricsSourcePathArgs and KinesisMetricsSourcePathOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathInput` via:
//
//          KinesisMetricsSourcePathArgs{...}
type KinesisMetricsSourcePathInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput
	ToKinesisMetricsSourcePathOutputWithContext(context.Context) KinesisMetricsSourcePathOutput
}

type KinesisMetricsSourcePathArgs struct {
	TagFilters KinesisMetricsSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type       pulumi.StringInput                          `pulumi:"type"`
}

func (KinesisMetricsSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePath)(nil)).Elem()
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput {
	return i.ToKinesisMetricsSourcePathOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathOutputWithContext(ctx context.Context) KinesisMetricsSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathOutput)
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return i.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathOutput).ToKinesisMetricsSourcePathPtrOutputWithContext(ctx)
}

// KinesisMetricsSourcePathPtrInput is an input type that accepts KinesisMetricsSourcePathArgs, KinesisMetricsSourcePathPtr and KinesisMetricsSourcePathPtrOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathPtrInput` via:
//
//          KinesisMetricsSourcePathArgs{...}
//
//  or:
//
//          nil
type KinesisMetricsSourcePathPtrInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput
	ToKinesisMetricsSourcePathPtrOutputWithContext(context.Context) KinesisMetricsSourcePathPtrOutput
}

type kinesisMetricsSourcePathPtrType KinesisMetricsSourcePathArgs

func KinesisMetricsSourcePathPtr(v *KinesisMetricsSourcePathArgs) KinesisMetricsSourcePathPtrInput {
	return (*kinesisMetricsSourcePathPtrType)(v)
}

func (*kinesisMetricsSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourcePath)(nil)).Elem()
}

func (i *kinesisMetricsSourcePathPtrType) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return i.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (i *kinesisMetricsSourcePathPtrType) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathPtrOutput)
}

type KinesisMetricsSourcePathOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePath)(nil)).Elem()
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput {
	return o
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathOutputWithContext(ctx context.Context) KinesisMetricsSourcePathOutput {
	return o
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return o.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePath) *KinesisMetricsSourcePath {
		return &v
	}).(KinesisMetricsSourcePathPtrOutput)
}
func (o KinesisMetricsSourcePathOutput) TagFilters() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePath) []KinesisMetricsSourcePathTagFilter { return v.TagFilters }).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

func (o KinesisMetricsSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type KinesisMetricsSourcePathPtrOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourcePath)(nil)).Elem()
}

func (o KinesisMetricsSourcePathPtrOutput) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return o
}

func (o KinesisMetricsSourcePathPtrOutput) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return o
}

func (o KinesisMetricsSourcePathPtrOutput) Elem() KinesisMetricsSourcePathOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) KinesisMetricsSourcePath { return *v }).(KinesisMetricsSourcePathOutput)
}

func (o KinesisMetricsSourcePathPtrOutput) TagFilters() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) []KinesisMetricsSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

func (o KinesisMetricsSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// KinesisMetricsSourcePathTagFilterInput is an input type that accepts KinesisMetricsSourcePathTagFilterArgs and KinesisMetricsSourcePathTagFilterOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathTagFilterInput` via:
//
//          KinesisMetricsSourcePathTagFilterArgs{...}
type KinesisMetricsSourcePathTagFilterInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput
	ToKinesisMetricsSourcePathTagFilterOutputWithContext(context.Context) KinesisMetricsSourcePathTagFilterOutput
}

type KinesisMetricsSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (KinesisMetricsSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (i KinesisMetricsSourcePathTagFilterArgs) ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput {
	return i.ToKinesisMetricsSourcePathTagFilterOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathTagFilterArgs) ToKinesisMetricsSourcePathTagFilterOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathTagFilterOutput)
}

// KinesisMetricsSourcePathTagFilterArrayInput is an input type that accepts KinesisMetricsSourcePathTagFilterArray and KinesisMetricsSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathTagFilterArrayInput` via:
//
//          KinesisMetricsSourcePathTagFilterArray{ KinesisMetricsSourcePathTagFilterArgs{...} }
type KinesisMetricsSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput
	ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(context.Context) KinesisMetricsSourcePathTagFilterArrayOutput
}

type KinesisMetricsSourcePathTagFilterArray []KinesisMetricsSourcePathTagFilterInput

func (KinesisMetricsSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (i KinesisMetricsSourcePathTagFilterArray) ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput {
	return i.ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathTagFilterArray) ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

type KinesisMetricsSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (o KinesisMetricsSourcePathTagFilterOutput) ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterOutput) ToKinesisMetricsSourcePathTagFilterOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o KinesisMetricsSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourcePathTagFilter {
		return vs[0].([]KinesisMetricsSourcePathTagFilter)[vs[1].(int)]
	}).(KinesisMetricsSourcePathTagFilterOutput)
}

type LookupTableField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
}

// LookupTableFieldInput is an input type that accepts LookupTableFieldArgs and LookupTableFieldOutput values.
// You can construct a concrete instance of `LookupTableFieldInput` via:
//
//          LookupTableFieldArgs{...}
type LookupTableFieldInput interface {
	pulumi.Input

	ToLookupTableFieldOutput() LookupTableFieldOutput
	ToLookupTableFieldOutputWithContext(context.Context) LookupTableFieldOutput
}

type LookupTableFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
}

func (LookupTableFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableField)(nil)).Elem()
}

func (i LookupTableFieldArgs) ToLookupTableFieldOutput() LookupTableFieldOutput {
	return i.ToLookupTableFieldOutputWithContext(context.Background())
}

func (i LookupTableFieldArgs) ToLookupTableFieldOutputWithContext(ctx context.Context) LookupTableFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupTableFieldOutput)
}

// LookupTableFieldArrayInput is an input type that accepts LookupTableFieldArray and LookupTableFieldArrayOutput values.
// You can construct a concrete instance of `LookupTableFieldArrayInput` via:
//
//          LookupTableFieldArray{ LookupTableFieldArgs{...} }
type LookupTableFieldArrayInput interface {
	pulumi.Input

	ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput
	ToLookupTableFieldArrayOutputWithContext(context.Context) LookupTableFieldArrayOutput
}

type LookupTableFieldArray []LookupTableFieldInput

func (LookupTableFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupTableField)(nil)).Elem()
}

func (i LookupTableFieldArray) ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput {
	return i.ToLookupTableFieldArrayOutputWithContext(context.Background())
}

func (i LookupTableFieldArray) ToLookupTableFieldArrayOutputWithContext(ctx context.Context) LookupTableFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupTableFieldArrayOutput)
}

type LookupTableFieldOutput struct{ *pulumi.OutputState }

func (LookupTableFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableField)(nil)).Elem()
}

func (o LookupTableFieldOutput) ToLookupTableFieldOutput() LookupTableFieldOutput {
	return o
}

func (o LookupTableFieldOutput) ToLookupTableFieldOutputWithContext(ctx context.Context) LookupTableFieldOutput {
	return o
}

func (o LookupTableFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o LookupTableFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableField) string { return v.FieldType }).(pulumi.StringOutput)
}

type LookupTableFieldArrayOutput struct{ *pulumi.OutputState }

func (LookupTableFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupTableField)(nil)).Elem()
}

func (o LookupTableFieldArrayOutput) ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput {
	return o
}

func (o LookupTableFieldArrayOutput) ToLookupTableFieldArrayOutputWithContext(ctx context.Context) LookupTableFieldArrayOutput {
	return o
}

func (o LookupTableFieldArrayOutput) Index(i pulumi.IntInput) LookupTableFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupTableField {
		return vs[0].([]LookupTableField)[vs[1].(int)]
	}).(LookupTableFieldOutput)
}

type MetadataSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// MetadataSourceAuthenticationInput is an input type that accepts MetadataSourceAuthenticationArgs and MetadataSourceAuthenticationOutput values.
// You can construct a concrete instance of `MetadataSourceAuthenticationInput` via:
//
//          MetadataSourceAuthenticationArgs{...}
type MetadataSourceAuthenticationInput interface {
	pulumi.Input

	ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput
	ToMetadataSourceAuthenticationOutputWithContext(context.Context) MetadataSourceAuthenticationOutput
}

type MetadataSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (MetadataSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceAuthentication)(nil)).Elem()
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput {
	return i.ToMetadataSourceAuthenticationOutputWithContext(context.Background())
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationOutputWithContext(ctx context.Context) MetadataSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationOutput)
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return i.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationOutput).ToMetadataSourceAuthenticationPtrOutputWithContext(ctx)
}

// MetadataSourceAuthenticationPtrInput is an input type that accepts MetadataSourceAuthenticationArgs, MetadataSourceAuthenticationPtr and MetadataSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `MetadataSourceAuthenticationPtrInput` via:
//
//          MetadataSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type MetadataSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput
	ToMetadataSourceAuthenticationPtrOutputWithContext(context.Context) MetadataSourceAuthenticationPtrOutput
}

type metadataSourceAuthenticationPtrType MetadataSourceAuthenticationArgs

func MetadataSourceAuthenticationPtr(v *MetadataSourceAuthenticationArgs) MetadataSourceAuthenticationPtrInput {
	return (*metadataSourceAuthenticationPtrType)(v)
}

func (*metadataSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourceAuthentication)(nil)).Elem()
}

func (i *metadataSourceAuthenticationPtrType) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return i.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *metadataSourceAuthenticationPtrType) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationPtrOutput)
}

type MetadataSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (MetadataSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceAuthentication)(nil)).Elem()
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput {
	return o
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationOutputWithContext(ctx context.Context) MetadataSourceAuthenticationOutput {
	return o
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return o.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *MetadataSourceAuthentication {
		return &v
	}).(MetadataSourceAuthenticationPtrOutput)
}
func (o MetadataSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o MetadataSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o MetadataSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o MetadataSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type MetadataSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (MetadataSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourceAuthentication)(nil)).Elem()
}

func (o MetadataSourceAuthenticationPtrOutput) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return o
}

func (o MetadataSourceAuthenticationPtrOutput) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return o
}

func (o MetadataSourceAuthenticationPtrOutput) Elem() MetadataSourceAuthenticationOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) MetadataSourceAuthentication { return *v }).(MetadataSourceAuthenticationOutput)
}

func (o MetadataSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o MetadataSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o MetadataSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o MetadataSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type MetadataSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// MetadataSourceDefaultDateFormatInput is an input type that accepts MetadataSourceDefaultDateFormatArgs and MetadataSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `MetadataSourceDefaultDateFormatInput` via:
//
//          MetadataSourceDefaultDateFormatArgs{...}
type MetadataSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput
	ToMetadataSourceDefaultDateFormatOutputWithContext(context.Context) MetadataSourceDefaultDateFormatOutput
}

type MetadataSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (MetadataSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (i MetadataSourceDefaultDateFormatArgs) ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput {
	return i.ToMetadataSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i MetadataSourceDefaultDateFormatArgs) ToMetadataSourceDefaultDateFormatOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceDefaultDateFormatOutput)
}

// MetadataSourceDefaultDateFormatArrayInput is an input type that accepts MetadataSourceDefaultDateFormatArray and MetadataSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `MetadataSourceDefaultDateFormatArrayInput` via:
//
//          MetadataSourceDefaultDateFormatArray{ MetadataSourceDefaultDateFormatArgs{...} }
type MetadataSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput
	ToMetadataSourceDefaultDateFormatArrayOutputWithContext(context.Context) MetadataSourceDefaultDateFormatArrayOutput
}

type MetadataSourceDefaultDateFormatArray []MetadataSourceDefaultDateFormatInput

func (MetadataSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (i MetadataSourceDefaultDateFormatArray) ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput {
	return i.ToMetadataSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i MetadataSourceDefaultDateFormatArray) ToMetadataSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceDefaultDateFormatArrayOutput)
}

type MetadataSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (MetadataSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (o MetadataSourceDefaultDateFormatOutput) ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatOutput) ToMetadataSourceDefaultDateFormatOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o MetadataSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type MetadataSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (MetadataSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (o MetadataSourceDefaultDateFormatArrayOutput) ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatArrayOutput) ToMetadataSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatArrayOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) MetadataSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataSourceDefaultDateFormat {
		return vs[0].([]MetadataSourceDefaultDateFormat)[vs[1].(int)]
	}).(MetadataSourceDefaultDateFormatOutput)
}

type MetadataSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// MetadataSourceFilterInput is an input type that accepts MetadataSourceFilterArgs and MetadataSourceFilterOutput values.
// You can construct a concrete instance of `MetadataSourceFilterInput` via:
//
//          MetadataSourceFilterArgs{...}
type MetadataSourceFilterInput interface {
	pulumi.Input

	ToMetadataSourceFilterOutput() MetadataSourceFilterOutput
	ToMetadataSourceFilterOutputWithContext(context.Context) MetadataSourceFilterOutput
}

type MetadataSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (MetadataSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceFilter)(nil)).Elem()
}

func (i MetadataSourceFilterArgs) ToMetadataSourceFilterOutput() MetadataSourceFilterOutput {
	return i.ToMetadataSourceFilterOutputWithContext(context.Background())
}

func (i MetadataSourceFilterArgs) ToMetadataSourceFilterOutputWithContext(ctx context.Context) MetadataSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceFilterOutput)
}

// MetadataSourceFilterArrayInput is an input type that accepts MetadataSourceFilterArray and MetadataSourceFilterArrayOutput values.
// You can construct a concrete instance of `MetadataSourceFilterArrayInput` via:
//
//          MetadataSourceFilterArray{ MetadataSourceFilterArgs{...} }
type MetadataSourceFilterArrayInput interface {
	pulumi.Input

	ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput
	ToMetadataSourceFilterArrayOutputWithContext(context.Context) MetadataSourceFilterArrayOutput
}

type MetadataSourceFilterArray []MetadataSourceFilterInput

func (MetadataSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceFilter)(nil)).Elem()
}

func (i MetadataSourceFilterArray) ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput {
	return i.ToMetadataSourceFilterArrayOutputWithContext(context.Background())
}

func (i MetadataSourceFilterArray) ToMetadataSourceFilterArrayOutputWithContext(ctx context.Context) MetadataSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceFilterArrayOutput)
}

type MetadataSourceFilterOutput struct{ *pulumi.OutputState }

func (MetadataSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceFilter)(nil)).Elem()
}

func (o MetadataSourceFilterOutput) ToMetadataSourceFilterOutput() MetadataSourceFilterOutput {
	return o
}

func (o MetadataSourceFilterOutput) ToMetadataSourceFilterOutputWithContext(ctx context.Context) MetadataSourceFilterOutput {
	return o
}

func (o MetadataSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o MetadataSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o MetadataSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o MetadataSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type MetadataSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (MetadataSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceFilter)(nil)).Elem()
}

func (o MetadataSourceFilterArrayOutput) ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput {
	return o
}

func (o MetadataSourceFilterArrayOutput) ToMetadataSourceFilterArrayOutputWithContext(ctx context.Context) MetadataSourceFilterArrayOutput {
	return o
}

func (o MetadataSourceFilterArrayOutput) Index(i pulumi.IntInput) MetadataSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataSourceFilter {
		return vs[0].([]MetadataSourceFilter)[vs[1].(int)]
	}).(MetadataSourceFilterOutput)
}

type MetadataSourcePath struct {
	LimitToNamespaces []string `pulumi:"limitToNamespaces"`
	LimitToRegions    []string `pulumi:"limitToRegions"`
	TagFilters        []string `pulumi:"tagFilters"`
	Type              string   `pulumi:"type"`
}

// MetadataSourcePathInput is an input type that accepts MetadataSourcePathArgs and MetadataSourcePathOutput values.
// You can construct a concrete instance of `MetadataSourcePathInput` via:
//
//          MetadataSourcePathArgs{...}
type MetadataSourcePathInput interface {
	pulumi.Input

	ToMetadataSourcePathOutput() MetadataSourcePathOutput
	ToMetadataSourcePathOutputWithContext(context.Context) MetadataSourcePathOutput
}

type MetadataSourcePathArgs struct {
	LimitToNamespaces pulumi.StringArrayInput `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput `pulumi:"limitToRegions"`
	TagFilters        pulumi.StringArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput      `pulumi:"type"`
}

func (MetadataSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourcePath)(nil)).Elem()
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathOutput() MetadataSourcePathOutput {
	return i.ToMetadataSourcePathOutputWithContext(context.Background())
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathOutputWithContext(ctx context.Context) MetadataSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathOutput)
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return i.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathOutput).ToMetadataSourcePathPtrOutputWithContext(ctx)
}

// MetadataSourcePathPtrInput is an input type that accepts MetadataSourcePathArgs, MetadataSourcePathPtr and MetadataSourcePathPtrOutput values.
// You can construct a concrete instance of `MetadataSourcePathPtrInput` via:
//
//          MetadataSourcePathArgs{...}
//
//  or:
//
//          nil
type MetadataSourcePathPtrInput interface {
	pulumi.Input

	ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput
	ToMetadataSourcePathPtrOutputWithContext(context.Context) MetadataSourcePathPtrOutput
}

type metadataSourcePathPtrType MetadataSourcePathArgs

func MetadataSourcePathPtr(v *MetadataSourcePathArgs) MetadataSourcePathPtrInput {
	return (*metadataSourcePathPtrType)(v)
}

func (*metadataSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourcePath)(nil)).Elem()
}

func (i *metadataSourcePathPtrType) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return i.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (i *metadataSourcePathPtrType) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathPtrOutput)
}

type MetadataSourcePathOutput struct{ *pulumi.OutputState }

func (MetadataSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourcePath)(nil)).Elem()
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathOutput() MetadataSourcePathOutput {
	return o
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathOutputWithContext(ctx context.Context) MetadataSourcePathOutput {
	return o
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return o.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return o.ApplyT(func(v MetadataSourcePath) *MetadataSourcePath {
		return &v
	}).(MetadataSourcePathPtrOutput)
}
func (o MetadataSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o MetadataSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o MetadataSourcePathOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.TagFilters }).(pulumi.StringArrayOutput)
}

func (o MetadataSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type MetadataSourcePathPtrOutput struct{ *pulumi.OutputState }

func (MetadataSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourcePath)(nil)).Elem()
}

func (o MetadataSourcePathPtrOutput) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return o
}

func (o MetadataSourcePathPtrOutput) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return o
}

func (o MetadataSourcePathPtrOutput) Elem() MetadataSourcePathOutput {
	return o.ApplyT(func(v *MetadataSourcePath) MetadataSourcePath { return *v }).(MetadataSourcePathOutput)
}

func (o MetadataSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o MetadataSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o MetadataSourcePathPtrOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(pulumi.StringArrayOutput)
}

func (o MetadataSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type MonitorNotification struct {
	Notification       MonitorNotificationNotification `pulumi:"notification"`
	RunForTriggerTypes []string                        `pulumi:"runForTriggerTypes"`
}

// MonitorNotificationInput is an input type that accepts MonitorNotificationArgs and MonitorNotificationOutput values.
// You can construct a concrete instance of `MonitorNotificationInput` via:
//
//          MonitorNotificationArgs{...}
type MonitorNotificationInput interface {
	pulumi.Input

	ToMonitorNotificationOutput() MonitorNotificationOutput
	ToMonitorNotificationOutputWithContext(context.Context) MonitorNotificationOutput
}

type MonitorNotificationArgs struct {
	Notification       MonitorNotificationNotificationInput `pulumi:"notification"`
	RunForTriggerTypes pulumi.StringArrayInput              `pulumi:"runForTriggerTypes"`
}

func (MonitorNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotification)(nil)).Elem()
}

func (i MonitorNotificationArgs) ToMonitorNotificationOutput() MonitorNotificationOutput {
	return i.ToMonitorNotificationOutputWithContext(context.Background())
}

func (i MonitorNotificationArgs) ToMonitorNotificationOutputWithContext(ctx context.Context) MonitorNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationOutput)
}

// MonitorNotificationArrayInput is an input type that accepts MonitorNotificationArray and MonitorNotificationArrayOutput values.
// You can construct a concrete instance of `MonitorNotificationArrayInput` via:
//
//          MonitorNotificationArray{ MonitorNotificationArgs{...} }
type MonitorNotificationArrayInput interface {
	pulumi.Input

	ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput
	ToMonitorNotificationArrayOutputWithContext(context.Context) MonitorNotificationArrayOutput
}

type MonitorNotificationArray []MonitorNotificationInput

func (MonitorNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorNotification)(nil)).Elem()
}

func (i MonitorNotificationArray) ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput {
	return i.ToMonitorNotificationArrayOutputWithContext(context.Background())
}

func (i MonitorNotificationArray) ToMonitorNotificationArrayOutputWithContext(ctx context.Context) MonitorNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationArrayOutput)
}

type MonitorNotificationOutput struct{ *pulumi.OutputState }

func (MonitorNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotification)(nil)).Elem()
}

func (o MonitorNotificationOutput) ToMonitorNotificationOutput() MonitorNotificationOutput {
	return o
}

func (o MonitorNotificationOutput) ToMonitorNotificationOutputWithContext(ctx context.Context) MonitorNotificationOutput {
	return o
}

func (o MonitorNotificationOutput) Notification() MonitorNotificationNotificationOutput {
	return o.ApplyT(func(v MonitorNotification) MonitorNotificationNotification { return v.Notification }).(MonitorNotificationNotificationOutput)
}

func (o MonitorNotificationOutput) RunForTriggerTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorNotification) []string { return v.RunForTriggerTypes }).(pulumi.StringArrayOutput)
}

type MonitorNotificationArrayOutput struct{ *pulumi.OutputState }

func (MonitorNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorNotification)(nil)).Elem()
}

func (o MonitorNotificationArrayOutput) ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput {
	return o
}

func (o MonitorNotificationArrayOutput) ToMonitorNotificationArrayOutputWithContext(ctx context.Context) MonitorNotificationArrayOutput {
	return o
}

func (o MonitorNotificationArrayOutput) Index(i pulumi.IntInput) MonitorNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorNotification {
		return vs[0].([]MonitorNotification)[vs[1].(int)]
	}).(MonitorNotificationOutput)
}

type MonitorNotificationNotification struct {
	// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
	ActionType      *string  `pulumi:"actionType"`
	ConnectionId    *string  `pulumi:"connectionId"`
	ConnectionType  *string  `pulumi:"connectionType"`
	MessageBody     *string  `pulumi:"messageBody"`
	PayloadOverride *string  `pulumi:"payloadOverride"`
	Recipients      []string `pulumi:"recipients"`
	Subject         *string  `pulumi:"subject"`
	TimeZone        *string  `pulumi:"timeZone"`
}

// MonitorNotificationNotificationInput is an input type that accepts MonitorNotificationNotificationArgs and MonitorNotificationNotificationOutput values.
// You can construct a concrete instance of `MonitorNotificationNotificationInput` via:
//
//          MonitorNotificationNotificationArgs{...}
type MonitorNotificationNotificationInput interface {
	pulumi.Input

	ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput
	ToMonitorNotificationNotificationOutputWithContext(context.Context) MonitorNotificationNotificationOutput
}

type MonitorNotificationNotificationArgs struct {
	// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
	ActionType      pulumi.StringPtrInput   `pulumi:"actionType"`
	ConnectionId    pulumi.StringPtrInput   `pulumi:"connectionId"`
	ConnectionType  pulumi.StringPtrInput   `pulumi:"connectionType"`
	MessageBody     pulumi.StringPtrInput   `pulumi:"messageBody"`
	PayloadOverride pulumi.StringPtrInput   `pulumi:"payloadOverride"`
	Recipients      pulumi.StringArrayInput `pulumi:"recipients"`
	Subject         pulumi.StringPtrInput   `pulumi:"subject"`
	TimeZone        pulumi.StringPtrInput   `pulumi:"timeZone"`
}

func (MonitorNotificationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotificationNotification)(nil)).Elem()
}

func (i MonitorNotificationNotificationArgs) ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput {
	return i.ToMonitorNotificationNotificationOutputWithContext(context.Background())
}

func (i MonitorNotificationNotificationArgs) ToMonitorNotificationNotificationOutputWithContext(ctx context.Context) MonitorNotificationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationNotificationOutput)
}

type MonitorNotificationNotificationOutput struct{ *pulumi.OutputState }

func (MonitorNotificationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotificationNotification)(nil)).Elem()
}

func (o MonitorNotificationNotificationOutput) ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput {
	return o
}

func (o MonitorNotificationNotificationOutput) ToMonitorNotificationNotificationOutputWithContext(ctx context.Context) MonitorNotificationNotificationOutput {
	return o
}

// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
func (o MonitorNotificationNotificationOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ConnectionId }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) PayloadOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.PayloadOverride }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) Recipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) []string { return v.Recipients }).(pulumi.StringArrayOutput)
}

func (o MonitorNotificationNotificationOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type MonitorQuery struct {
	Query string `pulumi:"query"`
	RowId string `pulumi:"rowId"`
}

// MonitorQueryInput is an input type that accepts MonitorQueryArgs and MonitorQueryOutput values.
// You can construct a concrete instance of `MonitorQueryInput` via:
//
//          MonitorQueryArgs{...}
type MonitorQueryInput interface {
	pulumi.Input

	ToMonitorQueryOutput() MonitorQueryOutput
	ToMonitorQueryOutputWithContext(context.Context) MonitorQueryOutput
}

type MonitorQueryArgs struct {
	Query pulumi.StringInput `pulumi:"query"`
	RowId pulumi.StringInput `pulumi:"rowId"`
}

func (MonitorQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorQuery)(nil)).Elem()
}

func (i MonitorQueryArgs) ToMonitorQueryOutput() MonitorQueryOutput {
	return i.ToMonitorQueryOutputWithContext(context.Background())
}

func (i MonitorQueryArgs) ToMonitorQueryOutputWithContext(ctx context.Context) MonitorQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryOutput)
}

// MonitorQueryArrayInput is an input type that accepts MonitorQueryArray and MonitorQueryArrayOutput values.
// You can construct a concrete instance of `MonitorQueryArrayInput` via:
//
//          MonitorQueryArray{ MonitorQueryArgs{...} }
type MonitorQueryArrayInput interface {
	pulumi.Input

	ToMonitorQueryArrayOutput() MonitorQueryArrayOutput
	ToMonitorQueryArrayOutputWithContext(context.Context) MonitorQueryArrayOutput
}

type MonitorQueryArray []MonitorQueryInput

func (MonitorQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorQuery)(nil)).Elem()
}

func (i MonitorQueryArray) ToMonitorQueryArrayOutput() MonitorQueryArrayOutput {
	return i.ToMonitorQueryArrayOutputWithContext(context.Background())
}

func (i MonitorQueryArray) ToMonitorQueryArrayOutputWithContext(ctx context.Context) MonitorQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryArrayOutput)
}

type MonitorQueryOutput struct{ *pulumi.OutputState }

func (MonitorQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorQuery)(nil)).Elem()
}

func (o MonitorQueryOutput) ToMonitorQueryOutput() MonitorQueryOutput {
	return o
}

func (o MonitorQueryOutput) ToMonitorQueryOutputWithContext(ctx context.Context) MonitorQueryOutput {
	return o
}

func (o MonitorQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorQuery) string { return v.Query }).(pulumi.StringOutput)
}

func (o MonitorQueryOutput) RowId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorQuery) string { return v.RowId }).(pulumi.StringOutput)
}

type MonitorQueryArrayOutput struct{ *pulumi.OutputState }

func (MonitorQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorQuery)(nil)).Elem()
}

func (o MonitorQueryArrayOutput) ToMonitorQueryArrayOutput() MonitorQueryArrayOutput {
	return o
}

func (o MonitorQueryArrayOutput) ToMonitorQueryArrayOutputWithContext(ctx context.Context) MonitorQueryArrayOutput {
	return o
}

func (o MonitorQueryArrayOutput) Index(i pulumi.IntInput) MonitorQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorQuery {
		return vs[0].([]MonitorQuery)[vs[1].(int)]
	}).(MonitorQueryOutput)
}

type MonitorTrigger struct {
	DetectionMethod *string  `pulumi:"detectionMethod"`
	OccurrenceType  *string  `pulumi:"occurrenceType"`
	Threshold       *float64 `pulumi:"threshold"`
	ThresholdType   *string  `pulumi:"thresholdType"`
	TimeRange       *string  `pulumi:"timeRange"`
	TriggerSource   *string  `pulumi:"triggerSource"`
	TriggerType     *string  `pulumi:"triggerType"`
}

// MonitorTriggerInput is an input type that accepts MonitorTriggerArgs and MonitorTriggerOutput values.
// You can construct a concrete instance of `MonitorTriggerInput` via:
//
//          MonitorTriggerArgs{...}
type MonitorTriggerInput interface {
	pulumi.Input

	ToMonitorTriggerOutput() MonitorTriggerOutput
	ToMonitorTriggerOutputWithContext(context.Context) MonitorTriggerOutput
}

type MonitorTriggerArgs struct {
	DetectionMethod pulumi.StringPtrInput  `pulumi:"detectionMethod"`
	OccurrenceType  pulumi.StringPtrInput  `pulumi:"occurrenceType"`
	Threshold       pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType   pulumi.StringPtrInput  `pulumi:"thresholdType"`
	TimeRange       pulumi.StringPtrInput  `pulumi:"timeRange"`
	TriggerSource   pulumi.StringPtrInput  `pulumi:"triggerSource"`
	TriggerType     pulumi.StringPtrInput  `pulumi:"triggerType"`
}

func (MonitorTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTrigger)(nil)).Elem()
}

func (i MonitorTriggerArgs) ToMonitorTriggerOutput() MonitorTriggerOutput {
	return i.ToMonitorTriggerOutputWithContext(context.Background())
}

func (i MonitorTriggerArgs) ToMonitorTriggerOutputWithContext(ctx context.Context) MonitorTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerOutput)
}

// MonitorTriggerArrayInput is an input type that accepts MonitorTriggerArray and MonitorTriggerArrayOutput values.
// You can construct a concrete instance of `MonitorTriggerArrayInput` via:
//
//          MonitorTriggerArray{ MonitorTriggerArgs{...} }
type MonitorTriggerArrayInput interface {
	pulumi.Input

	ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput
	ToMonitorTriggerArrayOutputWithContext(context.Context) MonitorTriggerArrayOutput
}

type MonitorTriggerArray []MonitorTriggerInput

func (MonitorTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTrigger)(nil)).Elem()
}

func (i MonitorTriggerArray) ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput {
	return i.ToMonitorTriggerArrayOutputWithContext(context.Background())
}

func (i MonitorTriggerArray) ToMonitorTriggerArrayOutputWithContext(ctx context.Context) MonitorTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerArrayOutput)
}

type MonitorTriggerOutput struct{ *pulumi.OutputState }

func (MonitorTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTrigger)(nil)).Elem()
}

func (o MonitorTriggerOutput) ToMonitorTriggerOutput() MonitorTriggerOutput {
	return o
}

func (o MonitorTriggerOutput) ToMonitorTriggerOutputWithContext(ctx context.Context) MonitorTriggerOutput {
	return o
}

func (o MonitorTriggerOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.DetectionMethod }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.OccurrenceType }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TimeRange }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TriggerSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TriggerSource }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerArrayOutput struct{ *pulumi.OutputState }

func (MonitorTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTrigger)(nil)).Elem()
}

func (o MonitorTriggerArrayOutput) ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput {
	return o
}

func (o MonitorTriggerArrayOutput) ToMonitorTriggerArrayOutputWithContext(ctx context.Context) MonitorTriggerArrayOutput {
	return o
}

func (o MonitorTriggerArrayOutput) Index(i pulumi.IntInput) MonitorTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorTrigger {
		return vs[0].([]MonitorTrigger)[vs[1].(int)]
	}).(MonitorTriggerOutput)
}

type PollingSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// PollingSourceAuthenticationInput is an input type that accepts PollingSourceAuthenticationArgs and PollingSourceAuthenticationOutput values.
// You can construct a concrete instance of `PollingSourceAuthenticationInput` via:
//
//          PollingSourceAuthenticationArgs{...}
type PollingSourceAuthenticationInput interface {
	pulumi.Input

	ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput
	ToPollingSourceAuthenticationOutputWithContext(context.Context) PollingSourceAuthenticationOutput
}

type PollingSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (PollingSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceAuthentication)(nil)).Elem()
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput {
	return i.ToPollingSourceAuthenticationOutputWithContext(context.Background())
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationOutputWithContext(ctx context.Context) PollingSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationOutput)
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return i.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationOutput).ToPollingSourceAuthenticationPtrOutputWithContext(ctx)
}

// PollingSourceAuthenticationPtrInput is an input type that accepts PollingSourceAuthenticationArgs, PollingSourceAuthenticationPtr and PollingSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `PollingSourceAuthenticationPtrInput` via:
//
//          PollingSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type PollingSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput
	ToPollingSourceAuthenticationPtrOutputWithContext(context.Context) PollingSourceAuthenticationPtrOutput
}

type pollingSourceAuthenticationPtrType PollingSourceAuthenticationArgs

func PollingSourceAuthenticationPtr(v *PollingSourceAuthenticationArgs) PollingSourceAuthenticationPtrInput {
	return (*pollingSourceAuthenticationPtrType)(v)
}

func (*pollingSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourceAuthentication)(nil)).Elem()
}

func (i *pollingSourceAuthenticationPtrType) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return i.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *pollingSourceAuthenticationPtrType) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationPtrOutput)
}

type PollingSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (PollingSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceAuthentication)(nil)).Elem()
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput {
	return o
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationOutputWithContext(ctx context.Context) PollingSourceAuthenticationOutput {
	return o
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return o.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *PollingSourceAuthentication {
		return &v
	}).(PollingSourceAuthenticationPtrOutput)
}
func (o PollingSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o PollingSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o PollingSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o PollingSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type PollingSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (PollingSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourceAuthentication)(nil)).Elem()
}

func (o PollingSourceAuthenticationPtrOutput) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return o
}

func (o PollingSourceAuthenticationPtrOutput) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return o
}

func (o PollingSourceAuthenticationPtrOutput) Elem() PollingSourceAuthenticationOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) PollingSourceAuthentication { return *v }).(PollingSourceAuthenticationOutput)
}

func (o PollingSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o PollingSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o PollingSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o PollingSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PollingSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// PollingSourceDefaultDateFormatInput is an input type that accepts PollingSourceDefaultDateFormatArgs and PollingSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `PollingSourceDefaultDateFormatInput` via:
//
//          PollingSourceDefaultDateFormatArgs{...}
type PollingSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput
	ToPollingSourceDefaultDateFormatOutputWithContext(context.Context) PollingSourceDefaultDateFormatOutput
}

type PollingSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (PollingSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (i PollingSourceDefaultDateFormatArgs) ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput {
	return i.ToPollingSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i PollingSourceDefaultDateFormatArgs) ToPollingSourceDefaultDateFormatOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceDefaultDateFormatOutput)
}

// PollingSourceDefaultDateFormatArrayInput is an input type that accepts PollingSourceDefaultDateFormatArray and PollingSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `PollingSourceDefaultDateFormatArrayInput` via:
//
//          PollingSourceDefaultDateFormatArray{ PollingSourceDefaultDateFormatArgs{...} }
type PollingSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput
	ToPollingSourceDefaultDateFormatArrayOutputWithContext(context.Context) PollingSourceDefaultDateFormatArrayOutput
}

type PollingSourceDefaultDateFormatArray []PollingSourceDefaultDateFormatInput

func (PollingSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (i PollingSourceDefaultDateFormatArray) ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput {
	return i.ToPollingSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i PollingSourceDefaultDateFormatArray) ToPollingSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceDefaultDateFormatArrayOutput)
}

type PollingSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (PollingSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (o PollingSourceDefaultDateFormatOutput) ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput {
	return o
}

func (o PollingSourceDefaultDateFormatOutput) ToPollingSourceDefaultDateFormatOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatOutput {
	return o
}

func (o PollingSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o PollingSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type PollingSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (PollingSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (o PollingSourceDefaultDateFormatArrayOutput) ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput {
	return o
}

func (o PollingSourceDefaultDateFormatArrayOutput) ToPollingSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatArrayOutput {
	return o
}

func (o PollingSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) PollingSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourceDefaultDateFormat {
		return vs[0].([]PollingSourceDefaultDateFormat)[vs[1].(int)]
	}).(PollingSourceDefaultDateFormatOutput)
}

type PollingSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// PollingSourceFilterInput is an input type that accepts PollingSourceFilterArgs and PollingSourceFilterOutput values.
// You can construct a concrete instance of `PollingSourceFilterInput` via:
//
//          PollingSourceFilterArgs{...}
type PollingSourceFilterInput interface {
	pulumi.Input

	ToPollingSourceFilterOutput() PollingSourceFilterOutput
	ToPollingSourceFilterOutputWithContext(context.Context) PollingSourceFilterOutput
}

type PollingSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (PollingSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceFilter)(nil)).Elem()
}

func (i PollingSourceFilterArgs) ToPollingSourceFilterOutput() PollingSourceFilterOutput {
	return i.ToPollingSourceFilterOutputWithContext(context.Background())
}

func (i PollingSourceFilterArgs) ToPollingSourceFilterOutputWithContext(ctx context.Context) PollingSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceFilterOutput)
}

// PollingSourceFilterArrayInput is an input type that accepts PollingSourceFilterArray and PollingSourceFilterArrayOutput values.
// You can construct a concrete instance of `PollingSourceFilterArrayInput` via:
//
//          PollingSourceFilterArray{ PollingSourceFilterArgs{...} }
type PollingSourceFilterArrayInput interface {
	pulumi.Input

	ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput
	ToPollingSourceFilterArrayOutputWithContext(context.Context) PollingSourceFilterArrayOutput
}

type PollingSourceFilterArray []PollingSourceFilterInput

func (PollingSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceFilter)(nil)).Elem()
}

func (i PollingSourceFilterArray) ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput {
	return i.ToPollingSourceFilterArrayOutputWithContext(context.Background())
}

func (i PollingSourceFilterArray) ToPollingSourceFilterArrayOutputWithContext(ctx context.Context) PollingSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceFilterArrayOutput)
}

type PollingSourceFilterOutput struct{ *pulumi.OutputState }

func (PollingSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceFilter)(nil)).Elem()
}

func (o PollingSourceFilterOutput) ToPollingSourceFilterOutput() PollingSourceFilterOutput {
	return o
}

func (o PollingSourceFilterOutput) ToPollingSourceFilterOutputWithContext(ctx context.Context) PollingSourceFilterOutput {
	return o
}

func (o PollingSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o PollingSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o PollingSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o PollingSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type PollingSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (PollingSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceFilter)(nil)).Elem()
}

func (o PollingSourceFilterArrayOutput) ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput {
	return o
}

func (o PollingSourceFilterArrayOutput) ToPollingSourceFilterArrayOutputWithContext(ctx context.Context) PollingSourceFilterArrayOutput {
	return o
}

func (o PollingSourceFilterArrayOutput) Index(i pulumi.IntInput) PollingSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourceFilter {
		return vs[0].([]PollingSourceFilter)[vs[1].(int)]
	}).(PollingSourceFilterOutput)
}

type PollingSourcePath struct {
	BucketName        *string                      `pulumi:"bucketName"`
	LimitToNamespaces []string                     `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                     `pulumi:"limitToRegions"`
	PathExpression    *string                      `pulumi:"pathExpression"`
	TagFilters        []PollingSourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                       `pulumi:"type"`
}

// PollingSourcePathInput is an input type that accepts PollingSourcePathArgs and PollingSourcePathOutput values.
// You can construct a concrete instance of `PollingSourcePathInput` via:
//
//          PollingSourcePathArgs{...}
type PollingSourcePathInput interface {
	pulumi.Input

	ToPollingSourcePathOutput() PollingSourcePathOutput
	ToPollingSourcePathOutputWithContext(context.Context) PollingSourcePathOutput
}

type PollingSourcePathArgs struct {
	BucketName        pulumi.StringPtrInput                `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput              `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput              `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput                `pulumi:"pathExpression"`
	TagFilters        PollingSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput                   `pulumi:"type"`
}

func (PollingSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePath)(nil)).Elem()
}

func (i PollingSourcePathArgs) ToPollingSourcePathOutput() PollingSourcePathOutput {
	return i.ToPollingSourcePathOutputWithContext(context.Background())
}

func (i PollingSourcePathArgs) ToPollingSourcePathOutputWithContext(ctx context.Context) PollingSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathOutput)
}

func (i PollingSourcePathArgs) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return i.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (i PollingSourcePathArgs) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathOutput).ToPollingSourcePathPtrOutputWithContext(ctx)
}

// PollingSourcePathPtrInput is an input type that accepts PollingSourcePathArgs, PollingSourcePathPtr and PollingSourcePathPtrOutput values.
// You can construct a concrete instance of `PollingSourcePathPtrInput` via:
//
//          PollingSourcePathArgs{...}
//
//  or:
//
//          nil
type PollingSourcePathPtrInput interface {
	pulumi.Input

	ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput
	ToPollingSourcePathPtrOutputWithContext(context.Context) PollingSourcePathPtrOutput
}

type pollingSourcePathPtrType PollingSourcePathArgs

func PollingSourcePathPtr(v *PollingSourcePathArgs) PollingSourcePathPtrInput {
	return (*pollingSourcePathPtrType)(v)
}

func (*pollingSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourcePath)(nil)).Elem()
}

func (i *pollingSourcePathPtrType) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return i.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (i *pollingSourcePathPtrType) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathPtrOutput)
}

type PollingSourcePathOutput struct{ *pulumi.OutputState }

func (PollingSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePath)(nil)).Elem()
}

func (o PollingSourcePathOutput) ToPollingSourcePathOutput() PollingSourcePathOutput {
	return o
}

func (o PollingSourcePathOutput) ToPollingSourcePathOutputWithContext(ctx context.Context) PollingSourcePathOutput {
	return o
}

func (o PollingSourcePathOutput) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return o.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (o PollingSourcePathOutput) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return o.ApplyT(func(v PollingSourcePath) *PollingSourcePath {
		return &v
	}).(PollingSourcePathPtrOutput)
}
func (o PollingSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o PollingSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o PollingSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o PollingSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o PollingSourcePathOutput) TagFilters() PollingSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []PollingSourcePathTagFilter { return v.TagFilters }).(PollingSourcePathTagFilterArrayOutput)
}

func (o PollingSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type PollingSourcePathPtrOutput struct{ *pulumi.OutputState }

func (PollingSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourcePath)(nil)).Elem()
}

func (o PollingSourcePathPtrOutput) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return o
}

func (o PollingSourcePathPtrOutput) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return o
}

func (o PollingSourcePathPtrOutput) Elem() PollingSourcePathOutput {
	return o.ApplyT(func(v *PollingSourcePath) PollingSourcePath { return *v }).(PollingSourcePathOutput)
}

func (o PollingSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o PollingSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o PollingSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o PollingSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o PollingSourcePathPtrOutput) TagFilters() PollingSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []PollingSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(PollingSourcePathTagFilterArrayOutput)
}

func (o PollingSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PollingSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// PollingSourcePathTagFilterInput is an input type that accepts PollingSourcePathTagFilterArgs and PollingSourcePathTagFilterOutput values.
// You can construct a concrete instance of `PollingSourcePathTagFilterInput` via:
//
//          PollingSourcePathTagFilterArgs{...}
type PollingSourcePathTagFilterInput interface {
	pulumi.Input

	ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput
	ToPollingSourcePathTagFilterOutputWithContext(context.Context) PollingSourcePathTagFilterOutput
}

type PollingSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (PollingSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePathTagFilter)(nil)).Elem()
}

func (i PollingSourcePathTagFilterArgs) ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput {
	return i.ToPollingSourcePathTagFilterOutputWithContext(context.Background())
}

func (i PollingSourcePathTagFilterArgs) ToPollingSourcePathTagFilterOutputWithContext(ctx context.Context) PollingSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathTagFilterOutput)
}

// PollingSourcePathTagFilterArrayInput is an input type that accepts PollingSourcePathTagFilterArray and PollingSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `PollingSourcePathTagFilterArrayInput` via:
//
//          PollingSourcePathTagFilterArray{ PollingSourcePathTagFilterArgs{...} }
type PollingSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput
	ToPollingSourcePathTagFilterArrayOutputWithContext(context.Context) PollingSourcePathTagFilterArrayOutput
}

type PollingSourcePathTagFilterArray []PollingSourcePathTagFilterInput

func (PollingSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourcePathTagFilter)(nil)).Elem()
}

func (i PollingSourcePathTagFilterArray) ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput {
	return i.ToPollingSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i PollingSourcePathTagFilterArray) ToPollingSourcePathTagFilterArrayOutputWithContext(ctx context.Context) PollingSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathTagFilterArrayOutput)
}

type PollingSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (PollingSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePathTagFilter)(nil)).Elem()
}

func (o PollingSourcePathTagFilterOutput) ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput {
	return o
}

func (o PollingSourcePathTagFilterOutput) ToPollingSourcePathTagFilterOutputWithContext(ctx context.Context) PollingSourcePathTagFilterOutput {
	return o
}

func (o PollingSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o PollingSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o PollingSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PollingSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (PollingSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourcePathTagFilter)(nil)).Elem()
}

func (o PollingSourcePathTagFilterArrayOutput) ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput {
	return o
}

func (o PollingSourcePathTagFilterArrayOutput) ToPollingSourcePathTagFilterArrayOutputWithContext(ctx context.Context) PollingSourcePathTagFilterArrayOutput {
	return o
}

func (o PollingSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) PollingSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourcePathTagFilter {
		return vs[0].([]PollingSourcePathTagFilter)[vs[1].(int)]
	}).(PollingSourcePathTagFilterOutput)
}

type S3AuditSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// S3AuditSourceAuthenticationInput is an input type that accepts S3AuditSourceAuthenticationArgs and S3AuditSourceAuthenticationOutput values.
// You can construct a concrete instance of `S3AuditSourceAuthenticationInput` via:
//
//          S3AuditSourceAuthenticationArgs{...}
type S3AuditSourceAuthenticationInput interface {
	pulumi.Input

	ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput
	ToS3AuditSourceAuthenticationOutputWithContext(context.Context) S3AuditSourceAuthenticationOutput
}

type S3AuditSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (S3AuditSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceAuthentication)(nil)).Elem()
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput {
	return i.ToS3AuditSourceAuthenticationOutputWithContext(context.Background())
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationOutput)
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return i.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationOutput).ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx)
}

// S3AuditSourceAuthenticationPtrInput is an input type that accepts S3AuditSourceAuthenticationArgs, S3AuditSourceAuthenticationPtr and S3AuditSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `S3AuditSourceAuthenticationPtrInput` via:
//
//          S3AuditSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type S3AuditSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput
	ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Context) S3AuditSourceAuthenticationPtrOutput
}

type s3auditSourceAuthenticationPtrType S3AuditSourceAuthenticationArgs

func S3AuditSourceAuthenticationPtr(v *S3AuditSourceAuthenticationArgs) S3AuditSourceAuthenticationPtrInput {
	return (*s3auditSourceAuthenticationPtrType)(v)
}

func (*s3auditSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourceAuthentication)(nil)).Elem()
}

func (i *s3auditSourceAuthenticationPtrType) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return i.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *s3auditSourceAuthenticationPtrType) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationPtrOutput)
}

type S3AuditSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (S3AuditSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceAuthentication)(nil)).Elem()
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput {
	return o
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationOutput {
	return o
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return o.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *S3AuditSourceAuthentication {
		return &v
	}).(S3AuditSourceAuthenticationPtrOutput)
}
func (o S3AuditSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type S3AuditSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (S3AuditSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourceAuthentication)(nil)).Elem()
}

func (o S3AuditSourceAuthenticationPtrOutput) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return o
}

func (o S3AuditSourceAuthenticationPtrOutput) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return o
}

func (o S3AuditSourceAuthenticationPtrOutput) Elem() S3AuditSourceAuthenticationOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) S3AuditSourceAuthentication { return *v }).(S3AuditSourceAuthenticationOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3AuditSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// S3AuditSourceDefaultDateFormatInput is an input type that accepts S3AuditSourceDefaultDateFormatArgs and S3AuditSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `S3AuditSourceDefaultDateFormatInput` via:
//
//          S3AuditSourceDefaultDateFormatArgs{...}
type S3AuditSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput
	ToS3AuditSourceDefaultDateFormatOutputWithContext(context.Context) S3AuditSourceDefaultDateFormatOutput
}

type S3AuditSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (S3AuditSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (i S3AuditSourceDefaultDateFormatArgs) ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput {
	return i.ToS3AuditSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i S3AuditSourceDefaultDateFormatArgs) ToS3AuditSourceDefaultDateFormatOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceDefaultDateFormatOutput)
}

// S3AuditSourceDefaultDateFormatArrayInput is an input type that accepts S3AuditSourceDefaultDateFormatArray and S3AuditSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `S3AuditSourceDefaultDateFormatArrayInput` via:
//
//          S3AuditSourceDefaultDateFormatArray{ S3AuditSourceDefaultDateFormatArgs{...} }
type S3AuditSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput
	ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(context.Context) S3AuditSourceDefaultDateFormatArrayOutput
}

type S3AuditSourceDefaultDateFormatArray []S3AuditSourceDefaultDateFormatInput

func (S3AuditSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (i S3AuditSourceDefaultDateFormatArray) ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput {
	return i.ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i S3AuditSourceDefaultDateFormatArray) ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceDefaultDateFormatArrayOutput)
}

type S3AuditSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (S3AuditSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (o S3AuditSourceDefaultDateFormatOutput) ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatOutput) ToS3AuditSourceDefaultDateFormatOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o S3AuditSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type S3AuditSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) S3AuditSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourceDefaultDateFormat {
		return vs[0].([]S3AuditSourceDefaultDateFormat)[vs[1].(int)]
	}).(S3AuditSourceDefaultDateFormatOutput)
}

type S3AuditSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// S3AuditSourceFilterInput is an input type that accepts S3AuditSourceFilterArgs and S3AuditSourceFilterOutput values.
// You can construct a concrete instance of `S3AuditSourceFilterInput` via:
//
//          S3AuditSourceFilterArgs{...}
type S3AuditSourceFilterInput interface {
	pulumi.Input

	ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput
	ToS3AuditSourceFilterOutputWithContext(context.Context) S3AuditSourceFilterOutput
}

type S3AuditSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (S3AuditSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceFilter)(nil)).Elem()
}

func (i S3AuditSourceFilterArgs) ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput {
	return i.ToS3AuditSourceFilterOutputWithContext(context.Background())
}

func (i S3AuditSourceFilterArgs) ToS3AuditSourceFilterOutputWithContext(ctx context.Context) S3AuditSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceFilterOutput)
}

// S3AuditSourceFilterArrayInput is an input type that accepts S3AuditSourceFilterArray and S3AuditSourceFilterArrayOutput values.
// You can construct a concrete instance of `S3AuditSourceFilterArrayInput` via:
//
//          S3AuditSourceFilterArray{ S3AuditSourceFilterArgs{...} }
type S3AuditSourceFilterArrayInput interface {
	pulumi.Input

	ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput
	ToS3AuditSourceFilterArrayOutputWithContext(context.Context) S3AuditSourceFilterArrayOutput
}

type S3AuditSourceFilterArray []S3AuditSourceFilterInput

func (S3AuditSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceFilter)(nil)).Elem()
}

func (i S3AuditSourceFilterArray) ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput {
	return i.ToS3AuditSourceFilterArrayOutputWithContext(context.Background())
}

func (i S3AuditSourceFilterArray) ToS3AuditSourceFilterArrayOutputWithContext(ctx context.Context) S3AuditSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceFilterArrayOutput)
}

type S3AuditSourceFilterOutput struct{ *pulumi.OutputState }

func (S3AuditSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceFilter)(nil)).Elem()
}

func (o S3AuditSourceFilterOutput) ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput {
	return o
}

func (o S3AuditSourceFilterOutput) ToS3AuditSourceFilterOutputWithContext(ctx context.Context) S3AuditSourceFilterOutput {
	return o
}

func (o S3AuditSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o S3AuditSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o S3AuditSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type S3AuditSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceFilter)(nil)).Elem()
}

func (o S3AuditSourceFilterArrayOutput) ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput {
	return o
}

func (o S3AuditSourceFilterArrayOutput) ToS3AuditSourceFilterArrayOutputWithContext(ctx context.Context) S3AuditSourceFilterArrayOutput {
	return o
}

func (o S3AuditSourceFilterArrayOutput) Index(i pulumi.IntInput) S3AuditSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourceFilter {
		return vs[0].([]S3AuditSourceFilter)[vs[1].(int)]
	}).(S3AuditSourceFilterOutput)
}

type S3AuditSourcePath struct {
	BucketName        *string                      `pulumi:"bucketName"`
	LimitToNamespaces []string                     `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                     `pulumi:"limitToRegions"`
	PathExpression    *string                      `pulumi:"pathExpression"`
	TagFilters        []S3AuditSourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                       `pulumi:"type"`
}

// S3AuditSourcePathInput is an input type that accepts S3AuditSourcePathArgs and S3AuditSourcePathOutput values.
// You can construct a concrete instance of `S3AuditSourcePathInput` via:
//
//          S3AuditSourcePathArgs{...}
type S3AuditSourcePathInput interface {
	pulumi.Input

	ToS3AuditSourcePathOutput() S3AuditSourcePathOutput
	ToS3AuditSourcePathOutputWithContext(context.Context) S3AuditSourcePathOutput
}

type S3AuditSourcePathArgs struct {
	BucketName        pulumi.StringPtrInput                `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput              `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput              `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput                `pulumi:"pathExpression"`
	TagFilters        S3AuditSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput                   `pulumi:"type"`
}

func (S3AuditSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePath)(nil)).Elem()
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathOutput() S3AuditSourcePathOutput {
	return i.ToS3AuditSourcePathOutputWithContext(context.Background())
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathOutputWithContext(ctx context.Context) S3AuditSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathOutput)
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return i.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathOutput).ToS3AuditSourcePathPtrOutputWithContext(ctx)
}

// S3AuditSourcePathPtrInput is an input type that accepts S3AuditSourcePathArgs, S3AuditSourcePathPtr and S3AuditSourcePathPtrOutput values.
// You can construct a concrete instance of `S3AuditSourcePathPtrInput` via:
//
//          S3AuditSourcePathArgs{...}
//
//  or:
//
//          nil
type S3AuditSourcePathPtrInput interface {
	pulumi.Input

	ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput
	ToS3AuditSourcePathPtrOutputWithContext(context.Context) S3AuditSourcePathPtrOutput
}

type s3auditSourcePathPtrType S3AuditSourcePathArgs

func S3AuditSourcePathPtr(v *S3AuditSourcePathArgs) S3AuditSourcePathPtrInput {
	return (*s3auditSourcePathPtrType)(v)
}

func (*s3auditSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourcePath)(nil)).Elem()
}

func (i *s3auditSourcePathPtrType) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return i.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (i *s3auditSourcePathPtrType) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathPtrOutput)
}

type S3AuditSourcePathOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePath)(nil)).Elem()
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathOutput() S3AuditSourcePathOutput {
	return o
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathOutputWithContext(ctx context.Context) S3AuditSourcePathOutput {
	return o
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return o.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *S3AuditSourcePath {
		return &v
	}).(S3AuditSourcePathPtrOutput)
}
func (o S3AuditSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathOutput) TagFilters() S3AuditSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []S3AuditSourcePathTagFilter { return v.TagFilters }).(S3AuditSourcePathTagFilterArrayOutput)
}

func (o S3AuditSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type S3AuditSourcePathPtrOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourcePath)(nil)).Elem()
}

func (o S3AuditSourcePathPtrOutput) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return o
}

func (o S3AuditSourcePathPtrOutput) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return o
}

func (o S3AuditSourcePathPtrOutput) Elem() S3AuditSourcePathOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) S3AuditSourcePath { return *v }).(S3AuditSourcePathOutput)
}

func (o S3AuditSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathPtrOutput) TagFilters() S3AuditSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []S3AuditSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(S3AuditSourcePathTagFilterArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3AuditSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// S3AuditSourcePathTagFilterInput is an input type that accepts S3AuditSourcePathTagFilterArgs and S3AuditSourcePathTagFilterOutput values.
// You can construct a concrete instance of `S3AuditSourcePathTagFilterInput` via:
//
//          S3AuditSourcePathTagFilterArgs{...}
type S3AuditSourcePathTagFilterInput interface {
	pulumi.Input

	ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput
	ToS3AuditSourcePathTagFilterOutputWithContext(context.Context) S3AuditSourcePathTagFilterOutput
}

type S3AuditSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (S3AuditSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (i S3AuditSourcePathTagFilterArgs) ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput {
	return i.ToS3AuditSourcePathTagFilterOutputWithContext(context.Background())
}

func (i S3AuditSourcePathTagFilterArgs) ToS3AuditSourcePathTagFilterOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathTagFilterOutput)
}

// S3AuditSourcePathTagFilterArrayInput is an input type that accepts S3AuditSourcePathTagFilterArray and S3AuditSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `S3AuditSourcePathTagFilterArrayInput` via:
//
//          S3AuditSourcePathTagFilterArray{ S3AuditSourcePathTagFilterArgs{...} }
type S3AuditSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput
	ToS3AuditSourcePathTagFilterArrayOutputWithContext(context.Context) S3AuditSourcePathTagFilterArrayOutput
}

type S3AuditSourcePathTagFilterArray []S3AuditSourcePathTagFilterInput

func (S3AuditSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (i S3AuditSourcePathTagFilterArray) ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput {
	return i.ToS3AuditSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i S3AuditSourcePathTagFilterArray) ToS3AuditSourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathTagFilterArrayOutput)
}

type S3AuditSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (o S3AuditSourcePathTagFilterOutput) ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput {
	return o
}

func (o S3AuditSourcePathTagFilterOutput) ToS3AuditSourcePathTagFilterOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterOutput {
	return o
}

func (o S3AuditSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type S3AuditSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (o S3AuditSourcePathTagFilterArrayOutput) ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput {
	return o
}

func (o S3AuditSourcePathTagFilterArrayOutput) ToS3AuditSourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterArrayOutput {
	return o
}

func (o S3AuditSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) S3AuditSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourcePathTagFilter {
		return vs[0].([]S3AuditSourcePathTagFilter)[vs[1].(int)]
	}).(S3AuditSourcePathTagFilterOutput)
}

type S3SourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	Type      string  `pulumi:"type"`
}

// S3SourceAuthenticationInput is an input type that accepts S3SourceAuthenticationArgs and S3SourceAuthenticationOutput values.
// You can construct a concrete instance of `S3SourceAuthenticationInput` via:
//
//          S3SourceAuthenticationArgs{...}
type S3SourceAuthenticationInput interface {
	pulumi.Input

	ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput
	ToS3SourceAuthenticationOutputWithContext(context.Context) S3SourceAuthenticationOutput
}

type S3SourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (S3SourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceAuthentication)(nil)).Elem()
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput {
	return i.ToS3SourceAuthenticationOutputWithContext(context.Background())
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationOutputWithContext(ctx context.Context) S3SourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationOutput)
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return i.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationOutput).ToS3SourceAuthenticationPtrOutputWithContext(ctx)
}

// S3SourceAuthenticationPtrInput is an input type that accepts S3SourceAuthenticationArgs, S3SourceAuthenticationPtr and S3SourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `S3SourceAuthenticationPtrInput` via:
//
//          S3SourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type S3SourceAuthenticationPtrInput interface {
	pulumi.Input

	ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput
	ToS3SourceAuthenticationPtrOutputWithContext(context.Context) S3SourceAuthenticationPtrOutput
}

type s3sourceAuthenticationPtrType S3SourceAuthenticationArgs

func S3SourceAuthenticationPtr(v *S3SourceAuthenticationArgs) S3SourceAuthenticationPtrInput {
	return (*s3sourceAuthenticationPtrType)(v)
}

func (*s3sourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourceAuthentication)(nil)).Elem()
}

func (i *s3sourceAuthenticationPtrType) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return i.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *s3sourceAuthenticationPtrType) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationPtrOutput)
}

type S3SourceAuthenticationOutput struct{ *pulumi.OutputState }

func (S3SourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceAuthentication)(nil)).Elem()
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput {
	return o
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationOutputWithContext(ctx context.Context) S3SourceAuthenticationOutput {
	return o
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return o.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *S3SourceAuthentication {
		return &v
	}).(S3SourceAuthenticationPtrOutput)
}
func (o S3SourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type S3SourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (S3SourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourceAuthentication)(nil)).Elem()
}

func (o S3SourceAuthenticationPtrOutput) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return o
}

func (o S3SourceAuthenticationPtrOutput) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return o
}

func (o S3SourceAuthenticationPtrOutput) Elem() S3SourceAuthenticationOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) S3SourceAuthentication { return *v }).(S3SourceAuthenticationOutput)
}

func (o S3SourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3SourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// S3SourceDefaultDateFormatInput is an input type that accepts S3SourceDefaultDateFormatArgs and S3SourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `S3SourceDefaultDateFormatInput` via:
//
//          S3SourceDefaultDateFormatArgs{...}
type S3SourceDefaultDateFormatInput interface {
	pulumi.Input

	ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput
	ToS3SourceDefaultDateFormatOutputWithContext(context.Context) S3SourceDefaultDateFormatOutput
}

type S3SourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (S3SourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceDefaultDateFormat)(nil)).Elem()
}

func (i S3SourceDefaultDateFormatArgs) ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput {
	return i.ToS3SourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i S3SourceDefaultDateFormatArgs) ToS3SourceDefaultDateFormatOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceDefaultDateFormatOutput)
}

// S3SourceDefaultDateFormatArrayInput is an input type that accepts S3SourceDefaultDateFormatArray and S3SourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `S3SourceDefaultDateFormatArrayInput` via:
//
//          S3SourceDefaultDateFormatArray{ S3SourceDefaultDateFormatArgs{...} }
type S3SourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput
	ToS3SourceDefaultDateFormatArrayOutputWithContext(context.Context) S3SourceDefaultDateFormatArrayOutput
}

type S3SourceDefaultDateFormatArray []S3SourceDefaultDateFormatInput

func (S3SourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceDefaultDateFormat)(nil)).Elem()
}

func (i S3SourceDefaultDateFormatArray) ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput {
	return i.ToS3SourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i S3SourceDefaultDateFormatArray) ToS3SourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceDefaultDateFormatArrayOutput)
}

type S3SourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (S3SourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceDefaultDateFormat)(nil)).Elem()
}

func (o S3SourceDefaultDateFormatOutput) ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput {
	return o
}

func (o S3SourceDefaultDateFormatOutput) ToS3SourceDefaultDateFormatOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatOutput {
	return o
}

func (o S3SourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o S3SourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type S3SourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (S3SourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceDefaultDateFormat)(nil)).Elem()
}

func (o S3SourceDefaultDateFormatArrayOutput) ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3SourceDefaultDateFormatArrayOutput) ToS3SourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3SourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) S3SourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourceDefaultDateFormat {
		return vs[0].([]S3SourceDefaultDateFormat)[vs[1].(int)]
	}).(S3SourceDefaultDateFormatOutput)
}

type S3SourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// S3SourceFilterInput is an input type that accepts S3SourceFilterArgs and S3SourceFilterOutput values.
// You can construct a concrete instance of `S3SourceFilterInput` via:
//
//          S3SourceFilterArgs{...}
type S3SourceFilterInput interface {
	pulumi.Input

	ToS3SourceFilterOutput() S3SourceFilterOutput
	ToS3SourceFilterOutputWithContext(context.Context) S3SourceFilterOutput
}

type S3SourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (S3SourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceFilter)(nil)).Elem()
}

func (i S3SourceFilterArgs) ToS3SourceFilterOutput() S3SourceFilterOutput {
	return i.ToS3SourceFilterOutputWithContext(context.Background())
}

func (i S3SourceFilterArgs) ToS3SourceFilterOutputWithContext(ctx context.Context) S3SourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceFilterOutput)
}

// S3SourceFilterArrayInput is an input type that accepts S3SourceFilterArray and S3SourceFilterArrayOutput values.
// You can construct a concrete instance of `S3SourceFilterArrayInput` via:
//
//          S3SourceFilterArray{ S3SourceFilterArgs{...} }
type S3SourceFilterArrayInput interface {
	pulumi.Input

	ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput
	ToS3SourceFilterArrayOutputWithContext(context.Context) S3SourceFilterArrayOutput
}

type S3SourceFilterArray []S3SourceFilterInput

func (S3SourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceFilter)(nil)).Elem()
}

func (i S3SourceFilterArray) ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput {
	return i.ToS3SourceFilterArrayOutputWithContext(context.Background())
}

func (i S3SourceFilterArray) ToS3SourceFilterArrayOutputWithContext(ctx context.Context) S3SourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceFilterArrayOutput)
}

type S3SourceFilterOutput struct{ *pulumi.OutputState }

func (S3SourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceFilter)(nil)).Elem()
}

func (o S3SourceFilterOutput) ToS3SourceFilterOutput() S3SourceFilterOutput {
	return o
}

func (o S3SourceFilterOutput) ToS3SourceFilterOutputWithContext(ctx context.Context) S3SourceFilterOutput {
	return o
}

func (o S3SourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o S3SourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o S3SourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o S3SourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type S3SourceFilterArrayOutput struct{ *pulumi.OutputState }

func (S3SourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceFilter)(nil)).Elem()
}

func (o S3SourceFilterArrayOutput) ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput {
	return o
}

func (o S3SourceFilterArrayOutput) ToS3SourceFilterArrayOutputWithContext(ctx context.Context) S3SourceFilterArrayOutput {
	return o
}

func (o S3SourceFilterArrayOutput) Index(i pulumi.IntInput) S3SourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourceFilter {
		return vs[0].([]S3SourceFilter)[vs[1].(int)]
	}).(S3SourceFilterOutput)
}

type S3SourcePath struct {
	BucketName        *string                 `pulumi:"bucketName"`
	LimitToNamespaces []string                `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                `pulumi:"limitToRegions"`
	PathExpression    *string                 `pulumi:"pathExpression"`
	TagFilters        []S3SourcePathTagFilter `pulumi:"tagFilters"`
	Type              string                  `pulumi:"type"`
}

// S3SourcePathInput is an input type that accepts S3SourcePathArgs and S3SourcePathOutput values.
// You can construct a concrete instance of `S3SourcePathInput` via:
//
//          S3SourcePathArgs{...}
type S3SourcePathInput interface {
	pulumi.Input

	ToS3SourcePathOutput() S3SourcePathOutput
	ToS3SourcePathOutputWithContext(context.Context) S3SourcePathOutput
}

type S3SourcePathArgs struct {
	BucketName        pulumi.StringPtrInput           `pulumi:"bucketName"`
	LimitToNamespaces pulumi.StringArrayInput         `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput         `pulumi:"limitToRegions"`
	PathExpression    pulumi.StringPtrInput           `pulumi:"pathExpression"`
	TagFilters        S3SourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	Type              pulumi.StringInput              `pulumi:"type"`
}

func (S3SourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePath)(nil)).Elem()
}

func (i S3SourcePathArgs) ToS3SourcePathOutput() S3SourcePathOutput {
	return i.ToS3SourcePathOutputWithContext(context.Background())
}

func (i S3SourcePathArgs) ToS3SourcePathOutputWithContext(ctx context.Context) S3SourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathOutput)
}

func (i S3SourcePathArgs) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return i.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (i S3SourcePathArgs) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathOutput).ToS3SourcePathPtrOutputWithContext(ctx)
}

// S3SourcePathPtrInput is an input type that accepts S3SourcePathArgs, S3SourcePathPtr and S3SourcePathPtrOutput values.
// You can construct a concrete instance of `S3SourcePathPtrInput` via:
//
//          S3SourcePathArgs{...}
//
//  or:
//
//          nil
type S3SourcePathPtrInput interface {
	pulumi.Input

	ToS3SourcePathPtrOutput() S3SourcePathPtrOutput
	ToS3SourcePathPtrOutputWithContext(context.Context) S3SourcePathPtrOutput
}

type s3sourcePathPtrType S3SourcePathArgs

func S3SourcePathPtr(v *S3SourcePathArgs) S3SourcePathPtrInput {
	return (*s3sourcePathPtrType)(v)
}

func (*s3sourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourcePath)(nil)).Elem()
}

func (i *s3sourcePathPtrType) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return i.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (i *s3sourcePathPtrType) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathPtrOutput)
}

type S3SourcePathOutput struct{ *pulumi.OutputState }

func (S3SourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePath)(nil)).Elem()
}

func (o S3SourcePathOutput) ToS3SourcePathOutput() S3SourcePathOutput {
	return o
}

func (o S3SourcePathOutput) ToS3SourcePathOutputWithContext(ctx context.Context) S3SourcePathOutput {
	return o
}

func (o S3SourcePathOutput) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return o.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (o S3SourcePathOutput) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *S3SourcePath {
		return &v
	}).(S3SourcePathPtrOutput)
}
func (o S3SourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathOutput) TagFilters() S3SourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []S3SourcePathTagFilter { return v.TagFilters }).(S3SourcePathTagFilterArrayOutput)
}

func (o S3SourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type S3SourcePathPtrOutput struct{ *pulumi.OutputState }

func (S3SourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourcePath)(nil)).Elem()
}

func (o S3SourcePathPtrOutput) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return o
}

func (o S3SourcePathPtrOutput) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return o
}

func (o S3SourcePathPtrOutput) Elem() S3SourcePathOutput {
	return o.ApplyT(func(v *S3SourcePath) S3SourcePath { return *v }).(S3SourcePathOutput)
}

func (o S3SourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o S3SourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o S3SourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o S3SourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o S3SourcePathPtrOutput) TagFilters() S3SourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []S3SourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(S3SourcePathTagFilterArrayOutput)
}

func (o S3SourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3SourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
}

// S3SourcePathTagFilterInput is an input type that accepts S3SourcePathTagFilterArgs and S3SourcePathTagFilterOutput values.
// You can construct a concrete instance of `S3SourcePathTagFilterInput` via:
//
//          S3SourcePathTagFilterArgs{...}
type S3SourcePathTagFilterInput interface {
	pulumi.Input

	ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput
	ToS3SourcePathTagFilterOutputWithContext(context.Context) S3SourcePathTagFilterOutput
}

type S3SourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
}

func (S3SourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathTagFilter)(nil)).Elem()
}

func (i S3SourcePathTagFilterArgs) ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput {
	return i.ToS3SourcePathTagFilterOutputWithContext(context.Background())
}

func (i S3SourcePathTagFilterArgs) ToS3SourcePathTagFilterOutputWithContext(ctx context.Context) S3SourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathTagFilterOutput)
}

// S3SourcePathTagFilterArrayInput is an input type that accepts S3SourcePathTagFilterArray and S3SourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `S3SourcePathTagFilterArrayInput` via:
//
//          S3SourcePathTagFilterArray{ S3SourcePathTagFilterArgs{...} }
type S3SourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput
	ToS3SourcePathTagFilterArrayOutputWithContext(context.Context) S3SourcePathTagFilterArrayOutput
}

type S3SourcePathTagFilterArray []S3SourcePathTagFilterInput

func (S3SourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathTagFilter)(nil)).Elem()
}

func (i S3SourcePathTagFilterArray) ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput {
	return i.ToS3SourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i S3SourcePathTagFilterArray) ToS3SourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3SourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathTagFilterArrayOutput)
}

type S3SourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (S3SourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathTagFilter)(nil)).Elem()
}

func (o S3SourcePathTagFilterOutput) ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput {
	return o
}

func (o S3SourcePathTagFilterOutput) ToS3SourcePathTagFilterOutputWithContext(ctx context.Context) S3SourcePathTagFilterOutput {
	return o
}

func (o S3SourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type S3SourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (S3SourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathTagFilter)(nil)).Elem()
}

func (o S3SourcePathTagFilterArrayOutput) ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput {
	return o
}

func (o S3SourcePathTagFilterArrayOutput) ToS3SourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3SourcePathTagFilterArrayOutput {
	return o
}

func (o S3SourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) S3SourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourcePathTagFilter {
		return vs[0].([]S3SourcePathTagFilter)[vs[1].(int)]
	}).(S3SourcePathTagFilterOutput)
}

type SamlConfigurationOnDemandProvisioningEnabled struct {
	FirstNameAttribute        *string  `pulumi:"firstNameAttribute"`
	LastNameAttribute         *string  `pulumi:"lastNameAttribute"`
	OnDemandProvisioningRoles []string `pulumi:"onDemandProvisioningRoles"`
}

// SamlConfigurationOnDemandProvisioningEnabledInput is an input type that accepts SamlConfigurationOnDemandProvisioningEnabledArgs and SamlConfigurationOnDemandProvisioningEnabledOutput values.
// You can construct a concrete instance of `SamlConfigurationOnDemandProvisioningEnabledInput` via:
//
//          SamlConfigurationOnDemandProvisioningEnabledArgs{...}
type SamlConfigurationOnDemandProvisioningEnabledInput interface {
	pulumi.Input

	ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput
	ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput
}

type SamlConfigurationOnDemandProvisioningEnabledArgs struct {
	FirstNameAttribute        pulumi.StringPtrInput   `pulumi:"firstNameAttribute"`
	LastNameAttribute         pulumi.StringPtrInput   `pulumi:"lastNameAttribute"`
	OnDemandProvisioningRoles pulumi.StringArrayInput `pulumi:"onDemandProvisioningRoles"`
}

func (SamlConfigurationOnDemandProvisioningEnabledArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(context.Background())
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledOutput)
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledOutput).ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx)
}

// SamlConfigurationOnDemandProvisioningEnabledPtrInput is an input type that accepts SamlConfigurationOnDemandProvisioningEnabledArgs, SamlConfigurationOnDemandProvisioningEnabledPtr and SamlConfigurationOnDemandProvisioningEnabledPtrOutput values.
// You can construct a concrete instance of `SamlConfigurationOnDemandProvisioningEnabledPtrInput` via:
//
//          SamlConfigurationOnDemandProvisioningEnabledArgs{...}
//
//  or:
//
//          nil
type SamlConfigurationOnDemandProvisioningEnabledPtrInput interface {
	pulumi.Input

	ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput
	ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput
}

type samlConfigurationOnDemandProvisioningEnabledPtrType SamlConfigurationOnDemandProvisioningEnabledArgs

func SamlConfigurationOnDemandProvisioningEnabledPtr(v *SamlConfigurationOnDemandProvisioningEnabledArgs) SamlConfigurationOnDemandProvisioningEnabledPtrInput {
	return (*samlConfigurationOnDemandProvisioningEnabledPtrType)(v)
}

func (*samlConfigurationOnDemandProvisioningEnabledPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (i *samlConfigurationOnDemandProvisioningEnabledPtrType) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (i *samlConfigurationOnDemandProvisioningEnabledPtrType) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledPtrOutput)
}

type SamlConfigurationOnDemandProvisioningEnabledOutput struct{ *pulumi.OutputState }

func (SamlConfigurationOnDemandProvisioningEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) *SamlConfigurationOnDemandProvisioningEnabled {
		return &v
	}).(SamlConfigurationOnDemandProvisioningEnabledPtrOutput)
}
func (o SamlConfigurationOnDemandProvisioningEnabledOutput) FirstNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) *string { return v.FirstNameAttribute }).(pulumi.StringPtrOutput)
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) LastNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) *string { return v.LastNameAttribute }).(pulumi.StringPtrOutput)
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) OnDemandProvisioningRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) []string { return v.OnDemandProvisioningRoles }).(pulumi.StringArrayOutput)
}

type SamlConfigurationOnDemandProvisioningEnabledPtrOutput struct{ *pulumi.OutputState }

func (SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) Elem() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) SamlConfigurationOnDemandProvisioningEnabled {
		return *v
	}).(SamlConfigurationOnDemandProvisioningEnabledOutput)
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) FirstNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) *string {
		if v == nil {
			return nil
		}
		return v.FirstNameAttribute
	}).(pulumi.StringPtrOutput)
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) LastNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) *string {
		if v == nil {
			return nil
		}
		return v.LastNameAttribute
	}).(pulumi.StringPtrOutput)
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) OnDemandProvisioningRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) []string {
		if v == nil {
			return nil
		}
		return v.OnDemandProvisioningRoles
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AwsInventorySourceAuthenticationOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceFilterOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceFilterArrayOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathPtrOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(AwsXraySourceAuthenticationOutput{})
	pulumi.RegisterOutputType(AwsXraySourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AwsXraySourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(AwsXraySourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(AwsXraySourceFilterOutput{})
	pulumi.RegisterOutputType(AwsXraySourceFilterArrayOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathPtrOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceFilterOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceFilterOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathPtrOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceFilterOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathPtrOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceFilterOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathPtrOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(DashboardColoringRuleOutput{})
	pulumi.RegisterOutputType(DashboardColoringRuleArrayOutput{})
	pulumi.RegisterOutputType(DashboardColoringRuleColorThresholdOutput{})
	pulumi.RegisterOutputType(DashboardColoringRuleColorThresholdArrayOutput{})
	pulumi.RegisterOutputType(DashboardLayoutOutput{})
	pulumi.RegisterOutputType(DashboardLayoutPtrOutput{})
	pulumi.RegisterOutputType(DashboardLayoutGridOutput{})
	pulumi.RegisterOutputType(DashboardLayoutGridPtrOutput{})
	pulumi.RegisterOutputType(DashboardLayoutGridLayoutStructureOutput{})
	pulumi.RegisterOutputType(DashboardLayoutGridLayoutStructureArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelOutput{})
	pulumi.RegisterOutputType(DashboardPanelArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelColoringRuleOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelColoringRulePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelLinkedDashboardOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelTextPanelOutput{})
	pulumi.RegisterOutputType(DashboardPanelTextPanelPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeCompleteLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTopologyLabelMapOutput{})
	pulumi.RegisterOutputType(DashboardTopologyLabelMapPtrOutput{})
	pulumi.RegisterOutputType(DashboardTopologyLabelMapDataOutput{})
	pulumi.RegisterOutputType(DashboardTopologyLabelMapDataArrayOutput{})
	pulumi.RegisterOutputType(DashboardVariableOutput{})
	pulumi.RegisterOutputType(DashboardVariableArrayOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ElbSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(ElbSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ElbSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(ElbSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(ElbSourceFilterOutput{})
	pulumi.RegisterOutputType(ElbSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(ElbSourcePathOutput{})
	pulumi.RegisterOutputType(ElbSourcePathPtrOutput{})
	pulumi.RegisterOutputType(ElbSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(ElbSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(GcpSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(GcpSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(GcpSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(GcpSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(GcpSourceFilterOutput{})
	pulumi.RegisterOutputType(GcpSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(GcpSourcePathOutput{})
	pulumi.RegisterOutputType(GcpSourcePathPtrOutput{})
	pulumi.RegisterOutputType(HttpSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(HttpSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(HttpSourceFilterOutput{})
	pulumi.RegisterOutputType(HttpSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceFilterOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathPtrOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(LookupTableFieldOutput{})
	pulumi.RegisterOutputType(LookupTableFieldArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(MetadataSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(MetadataSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(MetadataSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourceFilterOutput{})
	pulumi.RegisterOutputType(MetadataSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourcePathOutput{})
	pulumi.RegisterOutputType(MetadataSourcePathPtrOutput{})
	pulumi.RegisterOutputType(MonitorNotificationOutput{})
	pulumi.RegisterOutputType(MonitorNotificationArrayOutput{})
	pulumi.RegisterOutputType(MonitorNotificationNotificationOutput{})
	pulumi.RegisterOutputType(MonitorQueryOutput{})
	pulumi.RegisterOutputType(MonitorQueryArrayOutput{})
	pulumi.RegisterOutputType(MonitorTriggerOutput{})
	pulumi.RegisterOutputType(MonitorTriggerArrayOutput{})
	pulumi.RegisterOutputType(PollingSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(PollingSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(PollingSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(PollingSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(PollingSourceFilterOutput{})
	pulumi.RegisterOutputType(PollingSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(PollingSourcePathOutput{})
	pulumi.RegisterOutputType(PollingSourcePathPtrOutput{})
	pulumi.RegisterOutputType(PollingSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(PollingSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(S3AuditSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(S3AuditSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(S3AuditSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourceFilterOutput{})
	pulumi.RegisterOutputType(S3AuditSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathPtrOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(S3SourceAuthenticationOutput{})
	pulumi.RegisterOutputType(S3SourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(S3SourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(S3SourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(S3SourceFilterOutput{})
	pulumi.RegisterOutputType(S3SourceFilterArrayOutput{})
	pulumi.RegisterOutputType(S3SourcePathOutput{})
	pulumi.RegisterOutputType(S3SourcePathPtrOutput{})
	pulumi.RegisterOutputType(S3SourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(S3SourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(SamlConfigurationOnDemandProvisioningEnabledOutput{})
	pulumi.RegisterOutputType(SamlConfigurationOnDemandProvisioningEnabledPtrOutput{})
}
