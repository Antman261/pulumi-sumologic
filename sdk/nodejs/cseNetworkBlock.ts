// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Sumo Logic CSE Network Block.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const networkBlock = new sumologic.CseNetworkBlock("network_block", {
 *     addressBlock: "10.0.1.0/26",
 *     internal: true,
 *     label: "network block from terraform",
 *     suppressesSignals: false,
 * });
 * ```
 * ## Argument reference
 *
 * The following arguments are supported:
 *
 * - `addressBlock` - (Required) The address block.
 * - `label` - (Required) The displayable label of the address block.
 * - `internal` - (Required) Internal flag.
 * - `suppressesSignals` - (Required) Suppresses signal flag.
 *
 * The following attributes are exported:
 *
 * - `id` - The internal ID of the network block.
 *
 * ## Import
 *
 * Network Block can be imported using the field id, e.g.hcl
 *
 * ```sh
 *  $ pulumi import sumologic:index/cseNetworkBlock:CseNetworkBlock network_block id
 * ```
 */
export class CseNetworkBlock extends pulumi.CustomResource {
    /**
     * Get an existing CseNetworkBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CseNetworkBlockState, opts?: pulumi.CustomResourceOptions): CseNetworkBlock {
        return new CseNetworkBlock(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sumologic:index/cseNetworkBlock:CseNetworkBlock';

    /**
     * Returns true if the given object is an instance of CseNetworkBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CseNetworkBlock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CseNetworkBlock.__pulumiType;
    }

    public readonly addressBlock!: pulumi.Output<string>;
    public readonly internal!: pulumi.Output<boolean | undefined>;
    public readonly label!: pulumi.Output<string | undefined>;
    public readonly suppressesSignals!: pulumi.Output<boolean | undefined>;

    /**
     * Create a CseNetworkBlock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CseNetworkBlockArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CseNetworkBlockArgs | CseNetworkBlockState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CseNetworkBlockState | undefined;
            inputs["addressBlock"] = state ? state.addressBlock : undefined;
            inputs["internal"] = state ? state.internal : undefined;
            inputs["label"] = state ? state.label : undefined;
            inputs["suppressesSignals"] = state ? state.suppressesSignals : undefined;
        } else {
            const args = argsOrState as CseNetworkBlockArgs | undefined;
            if ((!args || args.addressBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressBlock'");
            }
            inputs["addressBlock"] = args ? args.addressBlock : undefined;
            inputs["internal"] = args ? args.internal : undefined;
            inputs["label"] = args ? args.label : undefined;
            inputs["suppressesSignals"] = args ? args.suppressesSignals : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CseNetworkBlock.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CseNetworkBlock resources.
 */
export interface CseNetworkBlockState {
    readonly addressBlock?: pulumi.Input<string>;
    readonly internal?: pulumi.Input<boolean>;
    readonly label?: pulumi.Input<string>;
    readonly suppressesSignals?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a CseNetworkBlock resource.
 */
export interface CseNetworkBlockArgs {
    readonly addressBlock: pulumi.Input<string>;
    readonly internal?: pulumi.Input<boolean>;
    readonly label?: pulumi.Input<string>;
    readonly suppressesSignals?: pulumi.Input<boolean>;
}
