// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a Sumologic CSE Log Mapping.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const logMapping = new sumologic.CseLogMapping("log_mapping", {
 *     enabled: true,
 *     fields: [{
 *         alternateValues: ["altValue"],
 *         caseInsensitive: false,
 *         defaultValue: "",
 *         fieldJoins: ["and"],
 *         format: "JSON",
 *         formatParameters: ["param"],
 *         joinDelimiter: "",
 *         lookups: [{
 *             key: "tunnel-up",
 *             value: "true",
 *         }],
 *         name: "action",
 *         skippedValues: ["-"],
 *         splitDelimiter: ",",
 *         splitIndex: "index",
 *         timeZone: "UTC",
 *         value: "action",
 *         valueType: "constant",
 *     }],
 *     productGuid: "003d35b3-3ba8-4e93-8776-e5810b4e243e",
 *     recordType: "Audit",
 *     relatesEntities: true,
 *     skippedValues: ["skipped"],
 *     structuredInputs: [{
 *         eventIdPattern: "vpn",
 *         logFormat: "JSON",
 *         product: "fortinate",
 *         vendor: "fortinate",
 *     }],
 * });
 * ```
 * ## Argument reference
 *
 * The following arguments are supported:
 *
 * - `name` - (Required) The name of the log mapping.
 * - `parentId` - (Optional) The id of the parent log mapping.
 * - `productGuid` - (Required) Product GUID.
 * - `recordType` - (Required) The record type to be created. (possible values: Audit, AuditChange, AuditFile, AuditResourceAccess, Authentication, AuthenticationPrivilegeEscalation, Canary, Email, Endpoint, EndpointModuleLoad, EndpointProcess, Network, NetworkDHCP, NetworkDNS, NetworkFlow, NetworkHTTP, NetworkProxy, Notification, NotificationVulnerability)
 * - `enabled` - (Required) Enabled flag.
 * - `relatesEntities` - (Optional) Set to true to relate entities.
 * - `skippedValues` - (Optional) List of skipped values.
 * - `fields` - (Required) List of fields for the new log mapping. See fieldSchema for details.
 * - `structuredInputs` - (Optional, omit if unstructuredFields is defined) List of structured inputs for the new log mapping. See structuredInputSchema for details.
 * - `unstructuredFields` - (Optional, omit if structuredInputs is defined) Unstructured fields for the new log mapping. See unstructuredFieldSchema for details.
 *
 * ### Schema for `field`
 * - `name` - (Required) Name of the field.
 * - `value` - (Optional) Value of the field.
 * - `valueType` - (Optional) The value type.
 * - `skippedValues` - (Optional) List of skipped values.
 * - `defaultValue` - (Optional) Default value of the field.
 * - `format` - (Optional) Format of the field. (JSON, Windows, Syslog, CEF, LEEF )
 * - `caseInsensitive` - (Optional) Case insensitive flag.
 * - `alternateValues` - (Optional) List of alternate values.
 * - `timeZone` - (Optional) Time zone.
 * - `splitDelimiter` - (Optional) Split delimiter to be used. (some example: ",", "-", "|")
 * - `fieldJoin` - (Optional) List of field join values.
 * - `joinDelimiter` - (Optional) Join delimiter.
 * - `formatParameters` - (Optional) List of format parameters.
 * - `lookup` - (Optional) List of lookup key value pair for field. See lookupSchema for details.
 *
 * ### Schema for `lookup`
 * - `key` - (Required) Lookup key.
 * - `value` - (Required) Lookup value.
 *
 * ### Schema for `structuredInput`
 * - `eventIdPattern` - (Required) Event id pattern.
 * - `logFormat` - (Required) Log format. (JSON, Windows, Syslog, CEF, LEEF )
 * - `product` - (Required) Product name.
 * - `vendor` - (Required) Vendor name.
 *
 * ### Schema for `unstructuredField`
 * - `patternNames` - (Required) List of grok pattern names.
 *
 * The following attributes are exported:
 *
 * - `id` - The internal ID of the log mapping.
 *
 * ## Import
 *
 * Log Mapping can be imported using the field id, e.g.hcl
 *
 * ```sh
 *  $ pulumi import sumologic:index/cseLogMapping:CseLogMapping log_mapping id
 * ```
 */
export class CseLogMapping extends pulumi.CustomResource {
    /**
     * Get an existing CseLogMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CseLogMappingState, opts?: pulumi.CustomResourceOptions): CseLogMapping {
        return new CseLogMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sumologic:index/cseLogMapping:CseLogMapping';

    /**
     * Returns true if the given object is an instance of CseLogMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CseLogMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CseLogMapping.__pulumiType;
    }

    public readonly enabled!: pulumi.Output<boolean>;
    public readonly fields!: pulumi.Output<outputs.CseLogMappingField[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly parentId!: pulumi.Output<string | undefined>;
    public readonly productGuid!: pulumi.Output<string>;
    public readonly recordType!: pulumi.Output<string>;
    public readonly relatesEntities!: pulumi.Output<boolean | undefined>;
    public readonly skippedValues!: pulumi.Output<string[] | undefined>;
    public readonly structuredInputs!: pulumi.Output<outputs.CseLogMappingStructuredInput[] | undefined>;
    public readonly unstructuredFields!: pulumi.Output<outputs.CseLogMappingUnstructuredFields | undefined>;

    /**
     * Create a CseLogMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CseLogMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CseLogMappingArgs | CseLogMappingState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CseLogMappingState | undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["fields"] = state ? state.fields : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["parentId"] = state ? state.parentId : undefined;
            inputs["productGuid"] = state ? state.productGuid : undefined;
            inputs["recordType"] = state ? state.recordType : undefined;
            inputs["relatesEntities"] = state ? state.relatesEntities : undefined;
            inputs["skippedValues"] = state ? state.skippedValues : undefined;
            inputs["structuredInputs"] = state ? state.structuredInputs : undefined;
            inputs["unstructuredFields"] = state ? state.unstructuredFields : undefined;
        } else {
            const args = argsOrState as CseLogMappingArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.fields === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fields'");
            }
            if ((!args || args.productGuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productGuid'");
            }
            if ((!args || args.recordType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recordType'");
            }
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["fields"] = args ? args.fields : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parentId"] = args ? args.parentId : undefined;
            inputs["productGuid"] = args ? args.productGuid : undefined;
            inputs["recordType"] = args ? args.recordType : undefined;
            inputs["relatesEntities"] = args ? args.relatesEntities : undefined;
            inputs["skippedValues"] = args ? args.skippedValues : undefined;
            inputs["structuredInputs"] = args ? args.structuredInputs : undefined;
            inputs["unstructuredFields"] = args ? args.unstructuredFields : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CseLogMapping.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CseLogMapping resources.
 */
export interface CseLogMappingState {
    enabled?: pulumi.Input<boolean>;
    fields?: pulumi.Input<pulumi.Input<inputs.CseLogMappingField>[]>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    productGuid?: pulumi.Input<string>;
    recordType?: pulumi.Input<string>;
    relatesEntities?: pulumi.Input<boolean>;
    skippedValues?: pulumi.Input<pulumi.Input<string>[]>;
    structuredInputs?: pulumi.Input<pulumi.Input<inputs.CseLogMappingStructuredInput>[]>;
    unstructuredFields?: pulumi.Input<inputs.CseLogMappingUnstructuredFields>;
}

/**
 * The set of arguments for constructing a CseLogMapping resource.
 */
export interface CseLogMappingArgs {
    enabled: pulumi.Input<boolean>;
    fields: pulumi.Input<pulumi.Input<inputs.CseLogMappingField>[]>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    productGuid: pulumi.Input<string>;
    recordType: pulumi.Input<string>;
    relatesEntities?: pulumi.Input<boolean>;
    skippedValues?: pulumi.Input<pulumi.Input<string>[]>;
    structuredInputs?: pulumi.Input<pulumi.Input<inputs.CseLogMappingStructuredInput>[]>;
    unstructuredFields?: pulumi.Input<inputs.CseLogMappingUnstructuredFields>;
}
