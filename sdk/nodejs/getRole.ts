// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a way to retrieve Sumo Logic role details (id, names, etc) for a role.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const thisRole = pulumi.output(sumologic.getRole({
 *     name: "MyRole",
 * }, { async: true }));
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const that = pulumi.output(sumologic.getRole({
 *     id: "1234567890",
 * }, { async: true }));
 * ```
 *
 * A role can be looked up by either `id` or `name`. One of those attributes needs to be specified.
 *
 * If both `id` and `name` have been specified, `id` takes precedence.
 * ## Attributes reference
 *
 * The following attributes are exported:
 *
 * - `id` - The internal ID of the role. This can be used to create users having that role.
 * - `name` - The name of the role.
 * - `description` - The description of the role.
 * - `filterPredicate` - The search filter to restrict access to specific logs.
 * - `capabilities` - The list of capabilities associated with the role.
 */
export function getRole(args?: GetRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("sumologic:index/getRole:getRole", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleArgs {
    readonly id?: string;
    readonly name?: string;
}

/**
 * A collection of values returned by getRole.
 */
export interface GetRoleResult {
    readonly capabilities: string[];
    readonly description: string;
    readonly filterPredicate: string;
    readonly id: string;
    readonly name: string;
}
