// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    public static class GetAdminRecommendedFolder
    {
        /// <summary>
        /// Provides an easy way to retrieve the Admin Recommended Folder.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var folder = Output.Create(SumoLogic.GetAdminRecommendedFolder.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// - `id` - The ID of the Admin Recommended Folder.
        /// - `name` - The name of the Admin Recommended Folder.
        /// - `description` - The description of the Admin Recommended Folder.
        /// </summary>
        public static Task<GetAdminRecommendedFolderResult> InvokeAsync(GetAdminRecommendedFolderArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAdminRecommendedFolderResult>("sumologic:index/getAdminRecommendedFolder:getAdminRecommendedFolder", args ?? new GetAdminRecommendedFolderArgs(), options.WithVersion());
    }


    public sealed class GetAdminRecommendedFolderArgs : Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetAdminRecommendedFolderArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAdminRecommendedFolderResult
    {
        public readonly string Description;
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetAdminRecommendedFolderResult(
            string description,

            string id,

            string name)
        {
            Description = description;
            Id = id;
            Name = name;
        }
    }
}
