// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provides a Sumo Logic CSE Custom Insight.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using SumoLogic = Pulumi.SumoLogic;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var customInsight = new SumoLogic.CseCustomInsight("customInsight", new SumoLogic.CseCustomInsightArgs
    ///         {
    ///             Description = "Insight description",
    ///             Enabled = true,
    ///             Ordered = true,
    ///             RuleIds = 
    ///             {
    ///                 "MATCH-S00001",
    ///                 "THRESHOLD-U00005",
    ///             },
    ///             Severity = "HIGH",
    ///             SignalNames = 
    ///             {
    ///                 "Some Signal Name",
    ///                 "Wildcard Signal Name *",
    ///             },
    ///             Tags = 
    ///             {
    ///                 "_mitreAttackTactic:TA0009",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ## Argument reference
    /// 
    /// The following arguments are supported:
    /// 
    /// - `description` - (Required) The description of the generated Insights
    /// - `enabled` - (Required) Whether the Custom Insight should generate Insights
    /// - `ordered` - (Required) Whether the signals matching the rule IDs/signal names must be in the same chronological order as they are listed in the Custom Insight
    /// - `name` - (Required) The name of the Custom Insight and the generated Insights
    /// - `rule_ids` - (Optional) The Rule IDs to match to generate an Insight (exactly one of rule_ids or signal_names must be specified)
    /// - `severity` - (Required) The severity of the generated Insights (HIGH, MEDIUM, or LOW)
    /// - `signal_names` - (Optional) The Signal names to match to generate an Insight (exactly one of rule_ids or signal_names must be specified)
    /// - `tags` - (Required) The tags of the generated Insights
    /// 
    /// The following attributes are exported:
    /// 
    /// - `id` - The internal ID of the chain rule.
    /// 
    /// ## Import
    /// 
    /// Custom Insights can be imported using the field id, e.g.hcl
    /// 
    /// ```sh
    ///  $ pulumi import sumologic:index/cseCustomInsight:CseCustomInsight custom_insight id
    /// ```
    /// </summary>
    [SumoLogicResourceType("sumologic:index/cseCustomInsight:CseCustomInsight")]
    public partial class CseCustomInsight : Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ordered")]
        public Output<bool> Ordered { get; private set; } = null!;

        [Output("ruleIds")]
        public Output<ImmutableArray<string>> RuleIds { get; private set; } = null!;

        [Output("severity")]
        public Output<string> Severity { get; private set; } = null!;

        [Output("signalNames")]
        public Output<ImmutableArray<string>> SignalNames { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a CseCustomInsight resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CseCustomInsight(string name, CseCustomInsightArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/cseCustomInsight:CseCustomInsight", name, args ?? new CseCustomInsightArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CseCustomInsight(string name, Input<string> id, CseCustomInsightState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/cseCustomInsight:CseCustomInsight", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CseCustomInsight resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CseCustomInsight Get(string name, Input<string> id, CseCustomInsightState? state = null, CustomResourceOptions? options = null)
        {
            return new CseCustomInsight(name, id, state, options);
        }
    }

    public sealed class CseCustomInsightArgs : Pulumi.ResourceArgs
    {
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ordered", required: true)]
        public Input<bool> Ordered { get; set; } = null!;

        [Input("ruleIds")]
        private InputList<string>? _ruleIds;
        public InputList<string> RuleIds
        {
            get => _ruleIds ?? (_ruleIds = new InputList<string>());
            set => _ruleIds = value;
        }

        [Input("severity", required: true)]
        public Input<string> Severity { get; set; } = null!;

        [Input("signalNames")]
        private InputList<string>? _signalNames;
        public InputList<string> SignalNames
        {
            get => _signalNames ?? (_signalNames = new InputList<string>());
            set => _signalNames = value;
        }

        [Input("tags", required: true)]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public CseCustomInsightArgs()
        {
        }
    }

    public sealed class CseCustomInsightState : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ordered")]
        public Input<bool>? Ordered { get; set; }

        [Input("ruleIds")]
        private InputList<string>? _ruleIds;
        public InputList<string> RuleIds
        {
            get => _ruleIds ?? (_ruleIds = new InputList<string>());
            set => _ruleIds = value;
        }

        [Input("severity")]
        public Input<string>? Severity { get; set; }

        [Input("signalNames")]
        private InputList<string>? _signalNames;
        public InputList<string> SignalNames
        {
            get => _signalNames ?? (_signalNames = new InputList<string>());
            set => _signalNames = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public CseCustomInsightState()
        {
        }
    }
}
