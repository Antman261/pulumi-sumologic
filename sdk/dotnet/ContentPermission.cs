// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    [SumoLogicResourceType("sumologic:index/contentPermission:ContentPermission")]
    public partial class ContentPermission : Pulumi.CustomResource
    {
        [Output("contentId")]
        public Output<string> ContentId { get; private set; } = null!;

        [Output("notificationMessage")]
        public Output<string?> NotificationMessage { get; private set; } = null!;

        [Output("notifyRecipient")]
        public Output<bool> NotifyRecipient { get; private set; } = null!;

        [Output("permissions")]
        public Output<ImmutableArray<Outputs.ContentPermissionPermission>> Permissions { get; private set; } = null!;


        /// <summary>
        /// Create a ContentPermission resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContentPermission(string name, ContentPermissionArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/contentPermission:ContentPermission", name, args ?? new ContentPermissionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContentPermission(string name, Input<string> id, ContentPermissionState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/contentPermission:ContentPermission", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContentPermission resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContentPermission Get(string name, Input<string> id, ContentPermissionState? state = null, CustomResourceOptions? options = null)
        {
            return new ContentPermission(name, id, state, options);
        }
    }

    public sealed class ContentPermissionArgs : Pulumi.ResourceArgs
    {
        [Input("contentId", required: true)]
        public Input<string> ContentId { get; set; } = null!;

        [Input("notificationMessage")]
        public Input<string>? NotificationMessage { get; set; }

        [Input("notifyRecipient", required: true)]
        public Input<bool> NotifyRecipient { get; set; } = null!;

        [Input("permissions", required: true)]
        private InputList<Inputs.ContentPermissionPermissionArgs>? _permissions;
        public InputList<Inputs.ContentPermissionPermissionArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.ContentPermissionPermissionArgs>());
            set => _permissions = value;
        }

        public ContentPermissionArgs()
        {
        }
    }

    public sealed class ContentPermissionState : Pulumi.ResourceArgs
    {
        [Input("contentId")]
        public Input<string>? ContentId { get; set; }

        [Input("notificationMessage")]
        public Input<string>? NotificationMessage { get; set; }

        [Input("notifyRecipient")]
        public Input<bool>? NotifyRecipient { get; set; }

        [Input("permissions")]
        private InputList<Inputs.ContentPermissionPermissionGetArgs>? _permissions;
        public InputList<Inputs.ContentPermissionPermissionGetArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.ContentPermissionPermissionGetArgs>());
            set => _permissions = value;
        }

        public ContentPermissionState()
        {
        }
    }
}
